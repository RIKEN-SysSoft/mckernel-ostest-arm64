[root@localhost ostestset]# sh ./util/run_rt_postk.sh -p 5 -b
use uid:1000 gid:1050
10+0 records in
10+0 records out
10485760 bytes (10 MB, 10 MiB) copied, 0.0388632 s, 270 MB/s
set 4 4 1 7 => /proc/sys/kernel/printk
set core.host.%p => /proc/sys/kernel/core_pattern
set ulimit -S -c 0
boot McKernel, HOST core is #0-3
use NUMA-preset 5 memory:   4 GiB, numa: 4 separation
[insmod] ihk

[insmod] ihk_smp

use NUMA-preset 5 memory:   4 GiB, numa: 4 separation
----------

image: /opt/ppos/smp-arm64/kernel/mckernel.img
cpu: 4,5,6,7,8,9,10,11,12,13,14,15
mem: 4096M@0,4096M@1,4096M@2,4096M@3
----------
[insmod]mcctrl.ko

[create]

[alloc-cpu]

[ikc_map setting]

[alloc-mem]

[kargs]

[load]

[boot]

get McKernel memory size.
mck_max_mem_size     :17179869184
mck_max_node_mem_size:4292870144
insmod test_drv
insmod /opt/ostestset/util/../bin/test_mck.ko
create charcter device /dev/test_mck/mmap_dev(242:0)
create charcter device /dev/test_mck/mmap_dev2(242:1)
create charcter device /dev/test_mck/writecombine(242:2)
## hello_world ##
Hello World
Hello World
## lv07 ##
0:Linux

use default thread_num = 2.
0:Linux

1:Linux

use thread_num = 1.
0:Linux

0a1
> 0:Linux
use thread_num = 2.
0:Linux

1:Linux

1a2
> 1:Linux
use thread_num = 3.
0:Linux

1:Linux

2:Linux

2a3
> 2:Linux
use thread_num = 4.
0:Linux

2:Linux

1:Linux

3:Linux

3a4
> 3:Linux
use thread_num = 5.
1:Linux

2:Linux

0:Linux

3:Linux

4:Linux

4a5
> 4:Linux
use thread_num = 6.
2:Linux

1:Linux

3:Linux

0:Linux

4:Linux

5:Linux

5a6
> 5:Linux
use thread_num = 7.
1:Linux

2:Linux

3:Linux

4:Linux

0:Linux

6:Linux

5:Linux

6a7
> 6:Linux
use thread_num = 8.
1:Linux

2:Linux

3:Linux

4:Linux

6:Linux

5:Linux

0:Linux

7:Linux

7a8
> 7:Linux
use thread_num = 9.
1:Linux

2:Linux

3:Linux

6:Linux

4:Linux

7:Linux

5:Linux

8:Linux

0:Linux

8a9
> 8:Linux
use thread_num = 10.
1:Linux

2:Linux

3:Linux

4:Linux

6:Linux

5:Linux

7:Linux

8:Linux

9:Linux

0:Linux

9a10
> 9:Linux
use thread_num = 11.
1:Linux

2:Linux

3:Linux

4:Linux

5:Linux

7:Linux

6:Linux

8:Linux

9:Linux

::Linux

0:Linux

10a11
> ::Linux
use thread_num = 12.
2:Linux

1:Linux

3:Linux

4:Linux

6:Linux

5:Linux

7:Linux

8:Linux

9:Linux

::Linux

;:Linux

0:Linux

11a12
> ;:Linux
## lv09 ##
aaabbbcccdddeeefffggghhh\naaabbbcccdddeeefffggghhh\n## lv11 ##
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 271: 24015 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/lv11" $execve_arg_end w rp $temp
mmap-writeTerminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 271: 24045 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/lv11" $execve_arg_end w rep $temp
mmap-writemmap-writemmap-writeTerminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 271: 24105 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/lv11" $execve_arg_end w ep $temp
aaabbbcccdddeeefffggghhh\naaabbbcccdddeeefffggghhh\naaabbbcccdddeeefffggghhh\naaabbbcccdddeeefffggghhh\naaabbbcccdddeeefffggghhh\naaabbbcccdddeeefffggghhh\naaabbbcccdddeeefffggghhh\n## lv12 ##
sig_num = 1, sig_name:SIGHUP received.
sig_num = 2, sig_name:SIGINT received.
sig_num = 3, sig_name:SIGQUIT received.
sig_num = 4, sig_name:SIGILL received.
sig_num = 5, sig_name:SIGTRAP received.
sig_num = 6, sig_name:SIGABRT / SIGIOT received.
sig_num = 6, sig_name:SIGABRT / SIGIOT received.
sig_num = 7, sig_name:SIGBUS received.
sig_num = 8, sig_name:SIGFPE received.
signal function set failed. sig_num = 9, sig_name:SIGKILL
sig_num = 10, sig_name:SIGUSR1 received.
sig_num = 11, sig_name:SIGSEGV received.
sig_num = 12, sig_name:SIGUSR2 received.
sig_num = 13, sig_name:SIGPIPE received.
sig_num = 14, sig_name:SIGALRM received.
sig_num = 15, sig_name:SIGTERM received.
sig_num = 16, sig_name:SIGSTKFLT received.
sig_num = 17, sig_name:SIGCHLD received.
sig_num = 18, sig_name:SIGCONT received.
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 20, sig_name:SIGTSTP received.
sig_num = 21, sig_name:SIGTTIN received.
sig_num = 22, sig_name:SIGTTOU received.
sig_num = 23, sig_name:SIGURG received.
sig_num = 24, sig_name:SIGXCPU received.
sig_num = 25, sig_name:SIGXFSZ received.
sig_num = 26, sig_name:SIGVTALRM received.
sig_num = 27, sig_name:SIGPROF received.
sig_num = 28, sig_name:SIGWINCH received.
sig_num = 29, sig_name:SIGIO received.
sig_num = 30, sig_name:SIGPWR received.
sig_num = 31, sig_name:SIGSYS received.
end of user program.
sig_num = 4 received.
end of user program.
sig_num = 11 received.
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 271: 24255 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/lv12-segv"
## lv14 ##
Run test00.
mmap-0[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
success
Run test01.
mmap-0[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x5a
success
Run test02.
mmap-0[0x1000001f0000-0x1000101f0000] 0x1000101efff8=0x0
success
Run test03.
mmap-0[0x100020000000-0x100060000000] 0x10005ffffff8=0x0
success
Run test04.
mmap-0[0x100020000000-0x100060000000] 0x10005ffffff8=0x0
mmap-1[0x100060000000-0x1000a0000000] 0x10009ffffff8=0x0
success
Run test05.
mmap-0[0x100020000000-0x100060000000] 0x10005ffffff8=0x0
mmap-1[0x100060000000-0x1000a0000000] 0x10009ffffff8=0x0
mmap-2[0x1000a0000000-0x1000e0000000] 0x1000dffffff8=0x0
mmap-3[0x1000e0000000-0x100120000000] 0x10011ffffff8=0x0
mmap-4[0x100120000000-0x100160000000] 0x10015ffffff8=0x0
success
## lv15 ##
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
## socket ##
[client] Connect to 127.0.0.1
[server] Waiting for connection ...
[client] Trying to connect to 127.0.0.1: 
[client] sending...[0]
[server] Connected from 127.0.0.1
[server] received[0]: This is a test
[client] sending...[1]
[server] received[1]: This is a test
[client] sending...[2]
[server] received[2]: This is a test
[client] sending...[3]
[server] received[3]: This is a test
[client] sending...[4]
[server] received[4]: This is a test
[client] sending...[5]
[server] received[5]: This is a test
[client] sending...[6]
[server] received[6]: This is a test
[client] sending...[7]
[server] received[7]: This is a test
[client] sending...[8]
[server] received[8]: This is a test
[client] sending...[9]
[server] received[9]: This is a test
## siginfo ##
TEST_SUITE: siginfo
TEST_NUMBER: 0
ARGS: 
=== raise signal #1 ===
Catch signal #1
  siginfo->si_signo = 1
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00000002
=== raise signal #2 ===
Catch signal #2
  siginfo->si_signo = 2
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00000006
=== raise signal #3 ===
Catch signal #3
  siginfo->si_signo = 3
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000000e
=== raise signal #4 ===
Catch signal #4
  siginfo->si_signo = 4
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000001e
=== raise signal #5 ===
Catch signal #5
  siginfo->si_signo = 5
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000003e
=== raise signal #6 ===
Catch signal #6
  siginfo->si_signo = 6
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000007e
=== raise signal #7 ===
Catch signal #7
  siginfo->si_signo = 7
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x000000fe
=== raise signal #8 ===
Catch signal #8
  siginfo->si_signo = 8
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x000001fe
=== raise signal #10 ===
Catch signal #10
  siginfo->si_signo = 10
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x000005fe
=== raise signal #11 ===
Catch signal #11
  siginfo->si_signo = 11
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00000dfe
=== raise signal #12 ===
Catch signal #12
  siginfo->si_signo = 12
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00001dfe
=== raise signal #13 ===
Catch signal #13
  siginfo->si_signo = 13
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00003dfe
=== raise signal #14 ===
Catch signal #14
  siginfo->si_signo = 14
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00007dfe
=== raise signal #15 ===
Catch signal #15
  siginfo->si_signo = 15
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000fdfe
=== raise signal #16 ===
Catch signal #16
  siginfo->si_signo = 16
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0001fdfe
=== raise signal #17 ===
Catch signal #17
  siginfo->si_signo = 17
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0003fdfe
=== raise signal #18 ===
Catch signal #18
  siginfo->si_signo = 18
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0007fdfe
=== raise signal #20 ===
Catch signal #20
  siginfo->si_signo = 20
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0017fdfe
=== raise signal #21 ===
Catch signal #21
  siginfo->si_signo = 21
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0037fdfe
=== raise signal #22 ===
Catch signal #22
  siginfo->si_signo = 22
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0077fdfe
=== raise signal #23 ===
Catch signal #23
  siginfo->si_signo = 23
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00f7fdfe
=== raise signal #24 ===
Catch signal #24
  siginfo->si_signo = 24
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x01f7fdfe
=== raise signal #25 ===
Catch signal #25
  siginfo->si_signo = 25
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x03f7fdfe
=== raise signal #26 ===
Catch signal #26
  siginfo->si_signo = 26
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x07f7fdfe
=== raise signal #27 ===
Catch signal #27
  siginfo->si_signo = 27
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0ff7fdfe
=== raise signal #28 ===
Catch signal #28
  siginfo->si_signo = 28
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x1ff7fdfe
=== raise signal #29 ===
Catch signal #29
  siginfo->si_signo = 29
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x3ff7fdfe
=== raise signal #30 ===
Catch signal #30
  siginfo->si_signo = 30
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x7ff7fdfe
=== raise signal #31 ===
Catch signal #31
  siginfo->si_signo = 31
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0xfff7fdfe
RESULT: ok
TEST_SUITE: siginfo
TEST_NUMBER: 1
ARGS: 
==================================================
Please send signal to mcexec(pid=24918) from console.
Exit Once you throw twice the same signal.
==================================================
SIGNAL_EXPECT_TO_DELIVER : 0xff80fdfe
send SIGHUP to 24918
Catch signal #1
  siginfo->si_signo = 1
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x00000002
send SIGINT to 24918
Catch signal #2
  siginfo->si_signo = 2
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x00000006
send SIGQUIT to 24918
Catch signal #3
  siginfo->si_signo = 3
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000000e
send SIGILL to 24918
Catch signal #4
  siginfo->si_signo = 4
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000001e
send SIGTRAP to 24918
Catch signal #5
  siginfo->si_signo = 5
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000003e
send SIGABRT to 24918
Catch signal #6
  siginfo->si_signo = 6
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000007e
send SIGEMT to 24918
/opt/ostestset/util/run_testset_postk.sh: line 48: kill: EMT: invalid signal specification
send SIGFPE to 24918
Catch signal #8
  siginfo->si_signo = 8
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000017e
send SIGBUS to 24918
Catch signal #7
  siginfo->si_signo = 7
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x000001fe
send SIGSEGV to 24918
Catch signal #11
  siginfo->si_signo = 11
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x000009fe
send SIGSYS to 24918
Catch signal #31
  siginfo->si_signo = 31
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x800009fe
send SIGPIPE to 24918
Catch signal #13
  siginfo->si_signo = 13
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x800029fe
send SIGALRM to 24918
Catch signal #14
  siginfo->si_signo = 14
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x800069fe
send SIGTERM to 24918
Catch signal #15
  siginfo->si_signo = 15
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x8000e9fe
send SIGURG to 24918
Catch signal #23
  siginfo->si_signo = 23
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x8080e9fe
send SIGIO to 24918
Catch signal #29
  siginfo->si_signo = 29
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xa080e9fe
send SIGXCPU to 24918
Catch signal #24
  siginfo->si_signo = 24
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xa180e9fe
send SIGXFSZ to 24918
Catch signal #25
  siginfo->si_signo = 25
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xa380e9fe
send SIGVTALRM to 24918
Catch signal #26
  siginfo->si_signo = 26
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xa780e9fe
send SIGPROF to 24918
Catch signal #27
  siginfo->si_signo = 27
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xaf80e9fe
send SIGWINCH to 24918
Catch signal #28
  siginfo->si_signo = 28
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xbf80e9fe
send SIGPWR to 24918
Catch signal #30
  siginfo->si_signo = 30
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xff80e9fe
send SIGUSR1 to 24918
Catch signal #10
  siginfo->si_signo = 10
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xff80edfe
send SIGUSR2 to 24918
Catch signal #12
  siginfo->si_signo = 12
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xff80fdfe
RESULT: ok
## wait4 ##
TEST_SUITE: wait4
TEST_NUMBER: 0
ARGS: 
wait4()=24976, errno=0
RESULT: ok
TEST_SUITE: wait4
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/pid_max 
wait4()=-1, errno=10
RESULT: ok
TEST_SUITE: wait4
TEST_NUMBER: 2
ARGS: 
(sig_handler)sig_num=17
wait4()=25020, errno=0
RESULT: ok
TEST_SUITE: wait4
TEST_NUMBER: 3
ARGS: 
[child]pid=25049
[child]send signal success.
(sig_handler)sig_num=12, pid=25034
wait()=25049, errno=0
RESULT: ok
## env ##
"AAA" is not env value.
"a" is not env value.
"b" is not env value.
TEST_SUITE: env
TEST_NUMBER: 0
ARGS: 
_=/opt/ppos/bin/mcexec
BASH_FUNC__moduleraw%%=() {  unset _mlre _mlIFS _mlshdbg;
 if [ "${MODULES_SILENT_SHELL_DEBUG:-0}" = '1' ]; then
 case "$-" in 
 *v*x*)
 set +vx;
 _mlshdbg='vx'
 ;;
 *v*)
 set +v;
 _mlshdbg='v'
 ;;
 *x*)
 set +x;
 _mlshdbg='x'
 ;;
 *)
 _mlshdbg=''
 ;;
 esac;
 fi;
 if [ -n "${IFS+x}" ]; then
 _mlIFS=$IFS;
 fi;
 IFS=' ';
 for _mlv in ${MODULES_RUN_QUARANTINE:-};
 do
 if [ "${_mlv}" = "${_mlv##*[!A-Za-z0-9_]}" -a "${_mlv}" = "${_mlv#[0-9]}" ]; then
 if [ -n "`eval 'echo ${'$_mlv'+x}'`" ]; then
 _mlre="${_mlre:-}${_mlv}_modquar='`eval 'echo ${'$_mlv'}'`' ";
 fi;
 _mlrv="MODULES_RUNENV_${_mlv}";
 _mlre="${_mlre:-}${_mlv}='`eval 'echo ${'$_mlrv':-}'`' ";
 fi;
 done;
 if [ -n "${_mlre:-}" ]; then
 eval `eval ${_mlre}/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash '"$@"'`;
 else
 eval `/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash "$@"`;
 fi;
 _mlstatus=$?;
 if [ -n "${_mlIFS+x}" ]; then
 IFS=$_mlIFS;
 else
 unset IFS;
 fi;
 if [ -n "${_mlshdbg:-}" ]; then
 set -$_mlshdbg;
 fi;
 unset _mlre _mlv _mlrv _mlIFS _mlshdbg;
 return $_mlstatus
}
BASH_FUNC_scl%%=() {  if [ "$1" = "load" -o "$1" = "unload" ]; then
 eval "module $@";
 else
 /usr/bin/scl "$@";
 fi
}
BASH_FUNC_switchml%%=() {  typeset swfound=1;
 if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
 typeset swname='main';
 if [ -e /usr/share/Modules/libexec/modulecmd.tcl ]; then
 typeset swfound=0;
 unset MODULES_USE_COMPAT_VERSION;
 fi;
 else
 typeset swname='compatibility';
 if [ -e /usr/share/Modules/libexec/modulecmd-compat ]; then
 typeset swfound=0;
 MODULES_USE_COMPAT_VERSION=1;
 export MODULES_USE_COMPAT_VERSION;
 fi;
 fi;
 if [ $swfound -eq 0 ]; then
 echo "Switching to Modules $swname version";
 source /usr/share/Modules/init/bash;
 else
 echo "Cannot switch to Modules $swname version, command not found";
 return 1;
 fi
}
BASH_FUNC_module%%=() {  _moduleraw "$@" 2>&1
}
LESSOPEN=||/usr/bin/lesspipe.sh %s
HISTSIZE=1000
MODULESHOME=/usr/share/Modules
PATH=/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
MODULEPATH_modshare=/usr/share/modulefiles:1:/etc/modulefiles:1:/usr/share/Modules/modulefiles:1
XDG_RUNTIME_DIR=/run/user/0
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/0/bus
LOGNAME=root
MODULEPATH=/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles
SHLVL=3
SHELL=/bin/bash
TERM=screen
MAIL=/var/spool/mail/root
SSH_TTY=/dev/pts/0
LOADEDMODULES=
BASH_ENV=/usr/share/Modules/init/bash
SSH_CLIENT=10.0.2.2 38768 22
HOME=/root
PWD=/opt/ostestset
ENV=/usr/share/Modules/init/profile.sh
MODULES_CMD=/usr/share/Modules/libexec/modulecmd.tcl
XDG_SESSION_ID=4
S_COLORS=auto
OLDPWD=/opt/ostestset/bin
HOSTNAME=localhost.localdomain
HISTCONTROL=ignoredups
LANG=ja_JP.UTF-8
MODULES_RUN_QUARANTINE=LD_LIBRARY_PATH
SSH_CONNECTION=10.0.2.2 38768 10.0.2.15 22
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:
ARCH=x86
USER=
RESULT: ok
## rt_sigsuspend ##
TEST_SUITE: rt_sigsuspend
TEST_NUMBER: 0
ARGS: 
(sig_handler)sig_num=14
sys_rt_sigsuspend()=-1, errno=4
RESULT: ok
## cpu_thread_limits ##
TEST_SUITE: cpu_thread_limits
TEST_NUMBER: 0
ARGS: -t 11 
[tid=25101] from child thread.(local_id=7)
[tid=25102] from child thread.(local_id=6)
[tid=25103] from child thread.(local_id=5)
[tid=25100] from child thread.(local_id=8)
[tid=25099] from child thread.(local_id=9)
[tid=25106] from child thread.(local_id=2)
[tid=25097] from child thread.(local_id=11)
[tid=25107] from child thread.(local_id=1)
[tid=25105] from child thread.(local_id=3)
[tid=25098] from child thread.(local_id=10)
[tid=25104] from child thread.(local_id=4)
RESULT: ok
TEST_SUITE: cpu_thread_limits
TEST_NUMBER: 1
ARGS: -t 11 
PI = 3.14159265358983
RESULT: ok
## gettid ##
TEST_SUITE: gettid
TEST_NUMBER: 0
ARGS: 
PID=25123, TID=25123
RESULT: ok
TEST_SUITE: gettid
TEST_NUMBER: 1
ARGS: 
[parent] pid=25138, tid=25138
[child ] pid=25138, tid=25152
RESULT: ok
## mprotect ##
TEST_SUITE: mprotect
TEST_NUMBER: 0
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: mprotect
TEST_NUMBER: 1
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: mprotect
TEST_NUMBER: 2
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: mprotect
TEST_NUMBER: 3
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: mprotect
TEST_NUMBER: 4
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: mprotect
TEST_NUMBER: 5
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: mprotect
TEST_NUMBER: 6
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: mprotect
TEST_NUMBER: 7
ARGS: 
mapped=0x100000260000
RESULT: ok
## mem_stack_limits ##
MCKERNEL_RLIMIT_STACK=10MiB(10240 KiB),10MiB(10240 KiB)
TEST_SUITE: mem_stack_limits
TEST_NUMBER: 0
ARGS: -s 9961472 
call: 0 GiB + 9 MiB + 512 KiB
used_stack size: 9986480 (0 GiB + 9 MiB + 536 KiB)
RESULT: ok
MCKERNEL_RLIMIT_STACK=2GiB(2097152 KiB),2GiB(2097152 KiB)
TEST_SUITE: mem_stack_limits
TEST_NUMBER: 0
ARGS: -s 2040109466 
call: 1 GiB + 921 MiB + 614 KiB
used_stack size: 2040182784 (1 GiB + 921 MiB + 686 KiB)
RESULT: ok
MCKERNEL_RLIMIT_STACK=mckernel_max_memory_size x 110%
TEST_SUITE: mem_stack_limits
TEST_NUMBER: 0
ARGS: -s 16320875721 
call: 15 GiB + 204 MiB + 819 KiB
used_stack size: 16320925344 (15 GiB + 204 MiB + 867 KiB)
RESULT: ok
TEST_SUITE: mem_stack_limits
TEST_NUMBER: 0
ARGS: -s 18897856098 
call: 17 GiB + 614 MiB + 409 KiB
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 391: 25319 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mem_stack_limits -n 0 -- -s $mck_max_mem_size_110p
unset MCKERNEL_RLIMIT_STACK
## munlock ##
TEST_SUITE: munlock
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## rt_sigaction ##
TEST_SUITE: rt_sigaction
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: rt_sigaction
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: rt_sigaction
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: rt_sigaction
TEST_NUMBER: 3
ARGS: 
RESULT: ok
TEST_SUITE: rt_sigaction
TEST_NUMBER: 4
ARGS: 
/-------- Signal handler will activate -------/
sig#10 is handled.
/------ Process will terminate by signal -----/
Terminate by signal 10
/opt/ostestset/util/run_testset_postk.sh: line 556: 25409 User defined signal 1   ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s rt_sigaction -n 4
TEST_SUITE: rt_sigaction
TEST_NUMBER: 5
ARGS: 
sigaction(-1) = -1 (errno=22)
sigaction(65) = -1 (errno=22)
sigaction(9) = -1 (errno=22)
sigaction(19) = -1 (errno=22)
RESULT: ok
## fork ##
TEST_SUITE: fork
TEST_NUMBER: 0
ARGS: 
[parent]pid=25439, tid=25439
RESULT: ok
[child]pid=25454, tid=25454
## pause ##
TEST_SUITE: pause
TEST_NUMBER: 0
ARGS: 
(pause000_sig_handle)sig_num=14
pause()=-1, errno=4
RESULT: ok
## sigaltstack ##
TEST_SUITE: sigaltstack
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: sigaltstack
TEST_NUMBER: 1
ARGS: 
alternate stack settings = {
  ss_sp   = 0x20000e80
  ss_size = 0x4000
};
Actual altternalte stack = 0x20003c1c
Actual main stack        = 0x3fffffffe7ec
RESULT: ok
## ptrace ##
TEST_SUITE: ptrace
TEST_NUMBER: 0
ARGS: 
ptrace()=0, errno=0
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 1
ARGS: 
child is stopped.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 2
ARGS: 
PTRACE_PEEKDATA read_val(0x1234567890abcdef) == 0x1234567890abcdef
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 3
ARGS: 
PTRACE_PEEKTEXT inst_code(0xd503201f) == 0xd503201f
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 4
ARGS: 
ptrace(PTRACE_PEEKUSER) expected errno EIO(5) catch
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 5
ARGS: 
before PTRACE_POKEDATA buf(0x1234567890abcdef)
after PTRACE_POKEDATA buf(0xffaaffaaffaaffaa) == 0xffaaffaaffaaffaa
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 6
ARGS: 
child is stopped by SIGTRAP.
child si_signo == SIGTRAP
child si_errno == 0
child si_code == TRAP_BRKPT
child is stopped change TEXT addr.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 7
ARGS: 
ptrace(PTRACE_POKEUSER) expected errno EIO(5) catch
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 8
ARGS: 
===== DUMP REGSET_GPR =====
  x00 = 0x0000000000481ce8
  x01 = 0xaaaaaaaa33333333
  x02 = 0x5555555588888888
  x03 = 0x00003ffffffffb20
  x04 = 0x00000000004808a0
  x05 = 0x00003ffffffffba0
  x06 = 0xefbeadde55555555
  x07 = 0x88888888aaaaaaaa
  x08 = 0xcccccccc88888888
  x09 = 0xaaaaaaaaefbeadde
  x10 = 0x000000000042c1e8
  x11 = 0xefbeaddecccccccc
  x12 = 0xaaaaaaaa33333333
  x13 = 0x5555555588888888
  x14 = 0x0000000000000000
  x15 = 0x0000000000000486
  x16 = 0x0000100000164210
  x17 = 0x0000000000480000
  x18 = 0x0000000000000012
  x19 = 0x0000000000000013
  x20 = 0x0000000000000014
  x21 = 0x0000000000000015
  x22 = 0x0000000000000016
  x23 = 0x0000000000000017
  x24 = 0x0000000000000018
  x25 = 0x0000000000000019
  x26 = 0x000000000000001a
  x27 = 0x000000000000001b
  x28 = 0x000000000000001c
  x29 = 0x00003ffffffffba0
  x30 = 0x000000000042c1d0
  sp  = 0x00003ffffffffba0
  pc  = 0x000000000042c1e8
  pstate = 0x0000000080000000

===== DUMP REGSET_FPR =====
  q00 = 0x1111111111111111 1111111111111111
  q01 = 0x3333333333333333 3333333333333333
  q02 = 0x5555555555555555 5555555555555555
  q03 = 0x8888888888888888 8888888888888888
  q04 = 0xaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaa
  q05 = 0xefbeaddeefbeadde efbeaddeefbeadde
  q06 = 0xcccccccccccccccc cccccccccccccccc
  q07 = 0xffffffffffffffff ffffffffffffffff
  q08 = 0xffffffffffffffff ffffffff11111111
  q09 = 0x1111111111111111 1111111133333333
  q10 = 0x3333333333333333 3333333355555555
  q11 = 0x5555555555555555 5555555588888888
  q12 = 0x8888888888888888 88888888aaaaaaaa
  q13 = 0xaaaaaaaaaaaaaaaa aaaaaaaaefbeadde
  q14 = 0xefbeaddeefbeadde efbeaddecccccccc
  q15 = 0xcccccccccccccccc ccccccccffffffff
  q16 = 0xcccccccccccccccc ffffffff11111111
  q17 = 0xffffffffffffffff 1111111133333333
  q18 = 0x1111111111111111 3333333355555555
  q19 = 0x3333333333333333 5555555588888888
  q20 = 0x5555555555555555 88888888aaaaaaaa
  q21 = 0x8888888888888888 aaaaaaaaefbeadde
  q22 = 0xaaaaaaaaaaaaaaaa efbeaddecccccccc
  q23 = 0xefbeaddeefbeadde ccccccccffffffff
  q24 = 0xccccccccffffffff 11111111efbeadde
  q25 = 0xffffffff11111111 33333333cccccccc
  q26 = 0x1111111133333333 55555555ffffffff
  q27 = 0x3333333355555555 8888888811111111
  q28 = 0x5555555588888888 aaaaaaaa33333333
  q29 = 0x88888888aaaaaaaa efbeadde55555555
  q30 = 0xaaaaaaaaefbeadde cccccccc88888888
  q31 = 0xefbeaddecccccccc ffffffffaaaaaaaa
  fpsr = 0x00000000
  fpcr = 0x00000000

===== DUMP REGSET_TLS =====
  tls = 0x0000100000033bf0

===== DUMP REGSET_HW_BREAK =====
  dbg_info = 0x00000606
  dbg_regs[00].addr = 0x0000000000000000
  dbg_regs[00].ctrl = 0x00000000
  dbg_regs[01].addr = 0x0000000000000000
  dbg_regs[01].ctrl = 0x00000000
  dbg_regs[02].addr = 0x0000000000000000
  dbg_regs[02].ctrl = 0x00000000
  dbg_regs[03].addr = 0x0000000000000000
  dbg_regs[03].ctrl = 0x00000000
  dbg_regs[04].addr = 0x0000000000000000
  dbg_regs[04].ctrl = 0x00000000
  dbg_regs[05].addr = 0x0000000000000000
  dbg_regs[05].ctrl = 0x00000000
  dbg_regs[06].addr = 0x0000000000000000
  dbg_regs[06].ctrl = 0x00000000
  dbg_regs[07].addr = 0x0000000000000000
  dbg_regs[07].ctrl = 0x00000000
  dbg_regs[08].addr = 0x0000000000000000
  dbg_regs[08].ctrl = 0x00000000
  dbg_regs[09].addr = 0x0000000000000000
  dbg_regs[09].ctrl = 0x00000000
  dbg_regs[10].addr = 0x0000000000000000
  dbg_regs[10].ctrl = 0x00000000
  dbg_regs[11].addr = 0x0000000000000000
  dbg_regs[11].ctrl = 0x00000000
  dbg_regs[12].addr = 0x0000000000000000
  dbg_regs[12].ctrl = 0x00000000
  dbg_regs[13].addr = 0x0000000000000000
  dbg_regs[13].ctrl = 0x00000000
  dbg_regs[14].addr = 0x0000000000000000
  dbg_regs[14].ctrl = 0x00000000
  dbg_regs[15].addr = 0x0000000000000000
  dbg_regs[15].ctrl = 0x00000000

===== DUMP REGSET_HW_WATCH =====
  dbg_info = 0x00000604
  dbg_regs[00].addr = 0x0000000000000000
  dbg_regs[00].ctrl = 0x00000000
  dbg_regs[01].addr = 0x0000000000000000
  dbg_regs[01].ctrl = 0x00000000
  dbg_regs[02].addr = 0x0000000000000000
  dbg_regs[02].ctrl = 0x00000000
  dbg_regs[03].addr = 0x0000000000000000
  dbg_regs[03].ctrl = 0x00000000
  dbg_regs[04].addr = 0x0000000000000000
  dbg_regs[04].ctrl = 0x00000000
  dbg_regs[05].addr = 0x0000000000000000
  dbg_regs[05].ctrl = 0x00000000
  dbg_regs[06].addr = 0x0000000000000000
  dbg_regs[06].ctrl = 0x00000000
  dbg_regs[07].addr = 0x0000000000000000
  dbg_regs[07].ctrl = 0x00000000
  dbg_regs[08].addr = 0x0000000000000000
  dbg_regs[08].ctrl = 0x00000000
  dbg_regs[09].addr = 0x0000000000000000
  dbg_regs[09].ctrl = 0x00000000
  dbg_regs[10].addr = 0x0000000000000000
  dbg_regs[10].ctrl = 0x00000000
  dbg_regs[11].addr = 0x0000000000000000
  dbg_regs[11].ctrl = 0x00000000
  dbg_regs[12].addr = 0x0000000000000000
  dbg_regs[12].ctrl = 0x00000000
  dbg_regs[13].addr = 0x0000000000000000
  dbg_regs[13].ctrl = 0x00000000
  dbg_regs[14].addr = 0x0000000000000000
  dbg_regs[14].ctrl = 0x00000000
  dbg_regs[15].addr = 0x0000000000000000
  dbg_regs[15].ctrl = 0x00000000

===== DUMP REGSET_SYSTEM_CALL =====
  syscallno = 0xffffffff

RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 9
ARGS: 
si_signo = 0x13
si_errno = 0x0
si_code  = 0x0
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 10
ARGS: 
ptrace(PTRACE_SETREGSET, NT_ARM_TLS) OK.
ptrace(PTRACE_SETREGSET, NT_ARM_SYSTEM_CALL) OK.
ptrace(PTRACE_SETREGSET, NT_PRSTATUS) OK.
ptrace(PTRACE_SETREGSET, NT_PRFPREG) OK.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 11
ARGS: 
child is stopped by SIGTRAP.
child si_signo == SIGTRAP
child si_errno == 0
child si_code == TRAP_HWBKPT
child si_addr == change value addr
child is stopped change value addr.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 12
ARGS: 
child is stopped by SIGTRAP.
child si_signo == SIGTRAP
child si_errno == 0
child si_code == TRAP_HWBKPT
child si_addr == hwbreakpoint addr
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 13
ARGS: 
siginfo change value check OK.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 14
ARGS: 
set supported options, OK.
set illigal option, errno == EINVAL.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 15
ARGS: 
eventpid = 0x657a
eventmsg value OK.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 16
ARGS: 
sysno check OK.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 17
ARGS: 
[count00]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
[count01]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
[count02]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
[count03]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
[count04]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 18
ARGS: 
child terminated by SIGKILL
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 19
ARGS: 
child is stopped.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 20
ARGS: 
child detach OK.
RESULT: ok
TEST_SUITE: ptrace
TEST_NUMBER: 21
ARGS: 
RESULT: ok
## mmap_dev ##
TEST_SUITE: mmap_dev
TEST_NUMBER: 1
ARGS: -d /dev/test_mck/mmap_dev2 -s 8192 
open(/dev/test_mck/mmap_dev2)=8
ioctl()=0
mmap()=0x100000260000
munmap()=0
RESULT: ok
TEST_SUITE: mmap_dev
TEST_NUMBER: 1
ARGS: -d /dev/test_mck/mmap_dev2 -s 536936448 
open(/dev/test_mck/mmap_dev2)=8
ioctl()=0
mmap()=0x100000260000
munmap()=0
RESULT: ok
TEST_SUITE: mmap_dev
TEST_NUMBER: 2
ARGS: -d /dev/test_mck/mmap_dev2 -s 8192 
open(/dev/test_mck/mmap_dev2)=8
ioctl()=0
mmap()=0x100000260000
peek mmap()=0x100000270000
munmap()=0
munmap()=0
RESULT: ok
TEST_SUITE: mmap_dev
TEST_NUMBER: 2
ARGS: -d /dev/test_mck/mmap_dev2 -s 536936448 
open(/dev/test_mck/mmap_dev2)=8
ioctl()=0
mmap()=0x100000260000
peek mmap()=0x100020270000
munmap()=0
munmap()=0
RESULT: ok
## tgkill ##
TEST_SUITE: tgkill
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: tgkill
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: tgkill
TEST_NUMBER: 2
ARGS: 
[parent]sleep a few sec...
[child]pid=26256, tid=26270
[parent]wake up
Terminate by signal 10
/opt/ostestset/util/run_testset_postk.sh: line 556: 26256 User defined signal 1   ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s tgkill -n 2
## rt_sigpending ##
TEST_SUITE: rt_sigpending
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## rt_sigqueueinfo ##
TEST_SUITE: rt_sigqueueinfo
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## rt_sigprocmask ##
TEST_SUITE: rt_sigprocmask
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## mmap_populate ##
TEST_SUITE: mmap_populate
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
## mem_large_page ##
TEST_SUITE: mem_large_page
TEST_NUMBER: 0
ARGS: 
mmap=0x100020000000
RESULT: ok
TEST_SUITE: mem_large_page
TEST_NUMBER: 1
ARGS: 
RESULT: In 64KiB page-size environment SKIP.
TEST_SUITE: mem_large_page
TEST_NUMBER: 4
ARGS: 
mmap=0x100000260000
RESULT: ok
TEST_SUITE: mem_large_page
TEST_NUMBER: 5
ARGS: 
shmid: 0x6
shmaddr: 0x100020000000
RESULT: ok
TEST_SUITE: mem_large_page
TEST_NUMBER: 6
ARGS: 
shmid: 0x7
shmaddr: 0x100020000000
RESULT: ok
TEST_SUITE: mem_large_page
TEST_NUMBER: 7
ARGS: 
RESULT: In 64KiB page-size environment SKIP.
TEST_SUITE: mem_large_page
TEST_NUMBER: 8
ARGS: 
mmap=0x100020000000
RESULT: ok
TEST_SUITE: mem_large_page
TEST_NUMBER: 9
ARGS: 
mmap=0x100020000000
RESULT: ok
TEST_SUITE: mem_large_page
TEST_NUMBER: 10
ARGS: 
RESULT: In 64KiB page-size environment SKIP.
## tls ##
TEST_SUITE: tls
TEST_NUMBER: 0
ARGS: 
[0] tls=1, notls=1
[1] tls=1, notls=2
RESULT: ok
TEST_SUITE: tls
TEST_NUMBER: 1
ARGS: -t 11 
[0] wait
[1] wait
[2] wait
[3] wait
[4] wait
[5] wait
[6] wait
[7] wait
[8] wait
[9] wait
[10] wait
[0] start
[9] start
[2] start
[2] tls=10000, notls=30000
[4] start
[5] start
[5] tls=10000, notls=50000
[7] start
[7] tls=10000, notls=60000
[1] start
[0] tls=10000, notls=10000
[10] start
[9] tls=10000, notls=20000
[3] start
[4] tls=10000, notls=40000
[6] start
[8] start
[1] tls=10000, notls=70000
[10] tls=10000, notls=80000
[3] tls=10000, notls=90000
[6] tls=10000, notls=100000
[8] tls=10000, notls=110000
RESULT: ok
## mmap_file ##
a
TEST_SUITE: mmap_file
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 26517 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 2
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 3
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 26551 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 4
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 5
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 26585 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 6
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 7
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 26619 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 8
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 9
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 10
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 11
ARGS: -f /opt/ostestset/util/mmapfile 
Z
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 12
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 26704 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 13
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 26721 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 14
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 26738 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 15
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 26755 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 16
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 17
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 18
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 19
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 20
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 21
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 22
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 23
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 24
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 25
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 26
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 27
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 28
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 29
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 30
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 31
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 32
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 33
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 27061 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 34
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 35
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 27095 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 36
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 37
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 27129 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 38
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 39
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 27163 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 40
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 41
ARGS: -f /opt/ostestset/util/mmapfile 
Z
RESULT: ok
Z
a
TEST_SUITE: mmap_file
TEST_NUMBER: 42
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 43
ARGS: -f /opt/ostestset/util/mmapfile 
Z
RESULT: ok
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 44
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 27248 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 45
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 27265 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 46
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 27282 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 47
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466: 27299 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: mmap_file
TEST_NUMBER: 48
ARGS: -f /opt/ostestset/util/mmapfile 
a
Z
RESULT: ok
Z
## execve ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck 
Usage: /opt/ostestset/util/../bin/test_mck -s test_suite -n test_number [-h] -- [args]
   -s      test suite name.
             clock_getres
             clock_gettime
             coredump
             cpu_proc_limits
             cpu_thread_limits
             enosys
             env
             evtstrm
             execve
             force_exit
             fork
             fork_execve
             fpregs
             fstatat
             get_cpu_id
             get_mempolicy
             getcpu
             getegid
             geteuid
             getgid
             getitimer
             getppid
             getresgid
             getresuid
             getrlimit
             getrusage
             gettid
             gettimeofday
             getuid
             iemul
             ipc
             kill
             madvise
             mbind
             mem_large_page
             mem_limits
             mem_stack_limits
             mincore
             mlock
             mlockall
             mmap_dev
             mmap_file
             mmap_locked
             mmap_populate
             mprotect
             mremap_mmap_anon
             msync
             munlock
             munlockall
             nanosleep
             nfo
             page_fault_forwording
             pause
             popen
             process_vm_readv
             process_vm_writev
             procfs
             pthread_getaffinity
             pthread_setaffinity
             ptrace
             readlinkat
             remap_file_pages
             rt_sigaction
             rt_sigpending
             rt_sigprocmask
             rt_sigqueueinfo
             rt_sigsuspend
             rt_sigtimedwait
             sched_get_priority_max
             sched_get_priority_min
             sched_getaffinity
             sched_getparam
             sched_getscheduler
             sched_rr_get_interval
             sched_setaffinity
             sched_setparam
             sched_setscheduler
             sched_yield
             set_mempolicy
             set_tid_address
             setfsgid
             setfsuid
             setgid
             setitimer
             setpgid
             setregid
             setresgid
             setresuid
             setreuid
             setrlimit
             setuid
             sigaltstack
             siginfo
             signalfd4
             system
             tgkill
             time_sharing
             times
             tkill
             tls
             track_syscalls
             uti
             vfork
             wait4
             waitid
             writecombine
   -n      test case number.
   -h      show this message.
   args    test case arguments.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s env -n 0 
TEST_SUITE: env
TEST_NUMBER: 0
ARGS: 
_=/opt/ppos/bin/mcexec
BASH_FUNC__moduleraw%%=() {  unset _mlre _mlIFS _mlshdbg;
 if [ "${MODULES_SILENT_SHELL_DEBUG:-0}" = '1' ]; then
 case "$-" in 
 *v*x*)
 set +vx;
 _mlshdbg='vx'
 ;;
 *v*)
 set +v;
 _mlshdbg='v'
 ;;
 *x*)
 set +x;
 _mlshdbg='x'
 ;;
 *)
 _mlshdbg=''
 ;;
 esac;
 fi;
 if [ -n "${IFS+x}" ]; then
 _mlIFS=$IFS;
 fi;
 IFS=' ';
 for _mlv in ${MODULES_RUN_QUARANTINE:-};
 do
 if [ "${_mlv}" = "${_mlv##*[!A-Za-z0-9_]}" -a "${_mlv}" = "${_mlv#[0-9]}" ]; then
 if [ -n "`eval 'echo ${'$_mlv'+x}'`" ]; then
 _mlre="${_mlre:-}${_mlv}_modquar='`eval 'echo ${'$_mlv'}'`' ";
 fi;
 _mlrv="MODULES_RUNENV_${_mlv}";
 _mlre="${_mlre:-}${_mlv}='`eval 'echo ${'$_mlrv':-}'`' ";
 fi;
 done;
 if [ -n "${_mlre:-}" ]; then
 eval `eval ${_mlre}/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash '"$@"'`;
 else
 eval `/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash "$@"`;
 fi;
 _mlstatus=$?;
 if [ -n "${_mlIFS+x}" ]; then
 IFS=$_mlIFS;
 else
 unset IFS;
 fi;
 if [ -n "${_mlshdbg:-}" ]; then
 set -$_mlshdbg;
 fi;
 unset _mlre _mlv _mlrv _mlIFS _mlshdbg;
 return $_mlstatus
}
BASH_FUNC_scl%%=() {  if [ "$1" = "load" -o "$1" = "unload" ]; then
 eval "module $@";
 else
 /usr/bin/scl "$@";
 fi
}
BASH_FUNC_switchml%%=() {  typeset swfound=1;
 if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
 typeset swname='main';
 if [ -e /usr/share/Modules/libexec/modulecmd.tcl ]; then
 typeset swfound=0;
 unset MODULES_USE_COMPAT_VERSION;
 fi;
 else
 typeset swname='compatibility';
 if [ -e /usr/share/Modules/libexec/modulecmd-compat ]; then
 typeset swfound=0;
 MODULES_USE_COMPAT_VERSION=1;
 export MODULES_USE_COMPAT_VERSION;
 fi;
 fi;
 if [ $swfound -eq 0 ]; then
 echo "Switching to Modules $swname version";
 source /usr/share/Modules/init/bash;
 else
 echo "Cannot switch to Modules $swname version, command not found";
 return 1;
 fi
}
BASH_FUNC_module%%=() {  _moduleraw "$@" 2>&1
}
LESSOPEN=||/usr/bin/lesspipe.sh %s
HISTSIZE=1000
MODULESHOME=/usr/share/Modules
PATH=/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
MODULEPATH_modshare=/usr/share/modulefiles:1:/etc/modulefiles:1:/usr/share/Modules/modulefiles:1
XDG_RUNTIME_DIR=/run/user/0
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/0/bus
LOGNAME=root
MODULEPATH=/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles
SHLVL=3
SHELL=/bin/bash
TERM=screen
MAIL=/var/spool/mail/root
SSH_TTY=/dev/pts/0
LOADEDMODULES=
BASH_ENV=/usr/share/Modules/init/bash
SSH_CLIENT=10.0.2.2 38768 22
HOME=/root
PWD=/opt/ostestset
ENV=/usr/share/Modules/init/profile.sh
USER=root
MODULES_CMD=/usr/share/Modules/libexec/modulecmd.tcl
XDG_SESSION_ID=4
S_COLORS=auto
OLDPWD=/opt/ostestset/bin
HOSTNAME=localhost.localdomain
HISTCONTROL=ignoredups
LANG=ja_JP.UTF-8
MODULES_RUN_QUARANTINE=LD_LIBRARY_PATH
SSH_CONNECTION=10.0.2.2 38768 10.0.2.15 22
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 2
ARGS: 
[execve2] ret=-1, errno=2
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 3
ARGS: -f /opt/ostestset/util/../bin/execve_app 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 4
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
TEST_SUITE: execve
TEST_NUMBER: 5
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
## madvise ##
TEST_SUITE: madvise
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 2
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 3
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 4
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 5
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 6
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 7
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 10
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 11
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 12
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 13
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 14
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 15
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 16
ARGS: 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 17
ARGS: 
RESULT: ok
TEST_SUITE: madvise
TEST_NUMBER: 18
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 496: 27708 Segmentation fault      (core dumped) ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s madvise -n $tp_num -- -f $mmapfile_name
generate corefile: core.madvise18.23399
GNU gdb (GDB) Red Hat Enterprise Linux 8.2-3.el8
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /opt/ostestset/util/../bin/test_mck...done.

warning: core file may not match specified executable file.
[New LWP -536469208]
[New LWP 27708]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `'.
Program terminated with signal ?, Unknown signal.
#0  0x0000000000411950 in madvise18 (tc_num=18, tc_arg=0x481830 <param>) at src/madvise/018.c:51
51*nullp = 0;
[Current thread is 1 (LWP -536469208)]
$1 = 0x100000260000
$2 = 0x100000270000
$3 = 0x100000280000
  LOAD           0x0000000000200000 0x00001000000c0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000210000 0x00001000000d0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x0000000000220000 0x00001000000e0000 0x0000000000000000
                 0x0000000000160000 0x0000000000160000  R E    0x10000
  LOAD           0x0000000000380000 0x0000100000240000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000390000 0x0000100000250000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003a0000 0x0000100000260000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003b0000 0x0000100000280000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003c0000 0x00003fffff800000 0x0000000000000000
                 0x0000000000800000 0x0000000000800000  RW     0x10000
TEST_SUITE: madvise
TEST_NUMBER: 19
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 496: 27728 Segmentation fault      (core dumped) ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s madvise -n $tp_num -- -f $mmapfile_name
generate corefile: core.madvise19.23399
GNU gdb (GDB) Red Hat Enterprise Linux 8.2-3.el8
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /opt/ostestset/util/../bin/test_mck...done.

warning: core file may not match specified executable file.
[New LWP -536469208]
[New LWP 27728]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `'.
Program terminated with signal ?, Unknown signal.
#0  0x0000000000411c5c in madvise19 (tc_num=19, tc_arg=0x481830 <param>) at src/madvise/019.c:58
58*nullp = 0;
[Current thread is 1 (LWP -536469208)]
$1 = 0x100000260000
$2 = 0x100000270000
$3 = 0x100000280000
  LOAD           0x00000000001f0000 0x00001000000b0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R E    0x10000
  LOAD           0x0000000000200000 0x00001000000c0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000210000 0x00001000000d0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x0000000000220000 0x00001000000e0000 0x0000000000000000
                 0x0000000000160000 0x0000000000160000  R E    0x10000
  LOAD           0x0000000000380000 0x0000100000240000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000390000 0x0000100000250000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003a0000 0x0000100000270000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003b0000 0x00003fffff800000 0x0000000000000000
                 0x0000000000800000 0x0000000000800000  RW     0x10000
## cpu_proc_limits ##
TEST_SUITE: cpu_proc_limits
TEST_NUMBER: 0
ARGS: -p 11 
Wait children's process will be finished. (about 100msec...)
RESULT: ok
## nfo ##
TEST_SUITE: nfo
TEST_NUMBER: 0
ARGS: 
buf[0]=0x100000260000
buf[1]=0x100000270000
RESULT: ok
TEST_SUITE: nfo
TEST_NUMBER: 1
ARGS: 
mmap:buf[0]=0x100000260000
mmap:buf[1]=0x100000270000
mmap:buf[0]=0x100000a90000
mmap:buf[1]=0x100000aa0000
RESULT: ok
TEST_SUITE: nfo
TEST_NUMBER: 2
ARGS: 
mmap:buf[0]=0x100000a70000
mmap:buf[1]=0x100000a80000
mmap:buf[0]=0x100000a90000
mmap:buf[1]=0x100000aa0000
RESULT: ok
TEST_SUITE: nfo
TEST_NUMBER: 3
ARGS: 
buf[0]=0x100000260000
buf[1]=0x100000270000
## getrlimit ##
TEST_SUITE: getrlimit
TEST_NUMBER: 1
ARGS: 
getrlimit(RLIMIT_FSIZE)=0
RESULT: ok
TEST_SUITE: getrlimit
TEST_NUMBER: 3
ARGS: 
getrlimit(RLIMIT_STACK)=0
RESULT: ok
TEST_SUITE: getrlimit
TEST_NUMBER: 6
ARGS: 
getrlimit(RLIMIT_NOFILE)=0
RESULT: ok
TEST_SUITE: getrlimit
TEST_NUMBER: 10
ARGS: 
getrlimit(RLIMIT_LOCKS)=0
RESULT: ok
TEST_SUITE: getrlimit
TEST_NUMBER: 16
ARGS: 
getrlimit(RLIMIT_NPROC)=0
RESULT: ok
TEST_SUITE: getrlimit
TEST_NUMBER: 17
ARGS: 
getrlimit(RLIMIT_AS)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_CORE)=0
  rlim_cur = 0
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_CPU)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_DATA)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_FSIZE)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_LOCKS)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_MEMLOCK)=0
  rlim_cur = 1000000
  rlim_max = 1000000
getrlimit(RLIMIT_MSGQUEUE)=0
  rlim_cur = c8000
  rlim_max = c8000
getrlimit(RLIMIT_NICE)=0
  rlim_cur = 0
  rlim_max = 0
getrlimit(RLIMIT_NOFILE)=0
  rlim_cur = 400
  rlim_max = 1000
getrlimit(RLIMIT_NPROC)=0
  rlim_cur = 7ee3
  rlim_max = 7ee3
getrlimit(RLIMIT_RSS)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_RTPRIO)=0
  rlim_cur = 0
  rlim_max = 0
getrlimit(RLIMIT_SIGPENDING)=0
  rlim_cur = 7ee3
  rlim_max = 7ee3
getrlimit(RLIMIT_STACK)=0
  rlim_cur = 800000
  rlim_max = ffffffffffffffff
RESULT: ok
TEST_SUITE: getrlimit
TEST_NUMBER: 18
ARGS: 
getrlimit(RLIMIT_NLIMITS)=-1
errno=22 (McK may return EINVAL(=22))
RESULT: ok
## mlock ##
TEST_SUITE: mlock
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## mmap_locked ##
TEST_SUITE: mmap_locked
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
## remap_file_pages ##
TEST_SUITE: remap_file_pages
TEST_NUMBER: 0
ARGS: -s 16384 
test file path=./remap_file_pages_tp-c4xUkn
mmap[0x100000260000-0x100000264000)
delete test file=./remap_file_pages_tp-c4xUkn
RESULT: ok
TEST_SUITE: remap_file_pages
TEST_NUMBER: 0
ARGS: -s 268435456 
test file path=./remap_file_pages_tp-UYnQy7
mmap[0x100000260000-0x100010260000)
delete test file=./remap_file_pages_tp-UYnQy7
RESULT: ok
## mem_limits ##
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f mmap -s 1048576 -c 1 
alloc#0: p=0x100000260000
RESULT: ok
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f mmap -s 16320875721 -c 1 
alloc#0: p=0x100020000000
RESULT: ok
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f mmap -s 17179869184 -c 1 
alloc#0: p=0x100020000000
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 556: 28174 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mem_limits -n 0 -- -f mmap -s $mck_max_mem_size -c 1
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f mmap -S mmap -c 1 
alloc#0: p=0xffffffffffffffff
RESULT: out of memory.(mmap)
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f brk -s 1048576 -c 1 
alloc#0: old=0x20030000, new=0x20130000
RESULT: ok
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f brk -s 16320875721 -c 1 
alloc#0: old=0x20030000, new=0x3eccfccc9
RESULT: ok
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f brk -s 17179869184 -c 1 
alloc#0: old=0x20030000, new=0x420030000
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 574: 28235 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mem_limits -n 0 -- -f brk -s $mck_max_mem_size -c 1
## large_bss ##
large_bss TP done.
## system ##
TEST_SUITE: system
TEST_NUMBER: 0
ARGS: 
Hello World
cmd exit successed by status 0
RESULT: ok
## vfork ##
TEST_SUITE: vfork
TEST_NUMBER: 1
ARGS: 
[parent]pid=28294, tid=28294
RESULT: ok
[child]pid=28309, tid=28309
TEST_SUITE: vfork
TEST_NUMBER: 2
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
RESULT: ok
## coredump ##
This test case setting corefile rlimit unlimited.
TEST_SUITE: coredump
TEST_NUMBER: 0
ARGS: 

=== buf_1 =====================================================
buf_1 = 0x20000e80
0x20000e80: 0x0000000000000000	0x0000000000000001
0x20000e90: 0x0000000000000002	0x0000000000000003
0x20000ea0: 0x0000000000000004	0x0000000000000005
0x20000eb0: 0x0000000000000006	0x0000000000000007
0x20000ec0: 0x0000000000000008	0x0000000000000009
0x20000ed0: 0x000000000000000a	0x000000000000000b
0x20000ee0: 0x000000000000000c	0x000000000000000d
0x20000ef0: 0x000000000000000e	0x000000000000000f
0x20000f00: 0x0000000000000010	0x0000000000000011
0x20000f10: 0x0000000000000012	0x0000000000000013
0x20000f20: 0x0000000000000014	0x0000000000000015
0x20000f30: 0x0000000000000016	0x0000000000000017
0x20000f40: 0x0000000000000018	0x0000000000000019
0x20000f50: 0x000000000000001a	0x000000000000001b
0x20000f60: 0x000000000000001c	0x000000000000001d
0x20000f70: 0x000000000000001e	0x000000000000001f

=== buf_2 =====================================================
buf_2 = 0x3ffffffffa80
0xffffffffffffffff, 0xfffffffffffffffe, 0xfffffffffffffffd, 
0xfffffffffffffffc, 0xfffffffffffffffb, 0xfffffffffffffffa, 
0xfffffffffffffff9, 0xfffffffffffffff8, 0xfffffffffffffff7, 
0xfffffffffffffff6, 0xfffffffffffffff5, 0xfffffffffffffff4, 
0xfffffffffffffff3, 0xfffffffffffffff2, 0xfffffffffffffff1, 
0xfffffffffffffff0, 0xffffffffffffffef, 0xffffffffffffffee, 
0xffffffffffffffed, 0xffffffffffffffec, 0xffffffffffffffeb, 
0xffffffffffffffea, 0xffffffffffffffe9, 0xffffffffffffffe8, 
0xffffffffffffffe7, 0xffffffffffffffe6, 0xffffffffffffffe5, 
0xffffffffffffffe4, 0xffffffffffffffe3, 0xffffffffffffffe2, 
0xffffffffffffffe1, 0xffffffffffffffe0

you need check corefile by GDB.
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 731: 28352 Segmentation fault      (core dumped) ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s coredump -n 0
generate corefile: core.23399
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              CORE (Core file)
  Machine:                           AArch64
  Version:                           0x1
  Entry point address:               0x0
  Start of program headers:          64 (bytes into file)
  Start of section headers:          0 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         21
  Size of section headers:           0 (bytes)
  Number of section headers:         0
  Section header string table index: 0

There are no sections in this file.

There are no sections to group in this file.

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  NOTE           0x00000000000004d8 0x0000000000000000 0x0000000000000000
                 0x00000000000002ec 0x00000000000002ec         0x0
  LOAD           0x0000000000010000 0x0000000000400000 0x0000000000000000
                 0x0000000000070000 0x0000000000070000  R E    0x10000
  LOAD           0x0000000000080000 0x0000000000470000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000090000 0x0000000000480000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000000a0000 0x0000000020000000 0x0000000000000000
                 0x0000000000030000 0x0000000000030000  RW     0x10000
  LOAD           0x00000000000d0000 0x00000ffffff80000 0x0000000000000000
                 0x0000000000080000 0x0000000000080000  RW     0x10000
  LOAD           0x0000000000150000 0x0000100000000000 0x0000000000000000
                 0x0000000000020000 0x0000000000020000  R E    0x10000
  LOAD           0x0000000000170000 0x0000100000020000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000180000 0x0000100000030000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x0000000000190000 0x0000100000040000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x00000000001a0000 0x0000100000050000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R E    0x10000
  LOAD           0x00000000001b0000 0x0000100000070000 0x0000000000000000
                 0x0000000000020000 0x0000000000020000  R E    0x10000
  LOAD           0x00000000001d0000 0x0000100000090000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x00000000001e0000 0x00001000000a0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000001f0000 0x00001000000b0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R E    0x10000
  LOAD           0x0000000000200000 0x00001000000c0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000210000 0x00001000000d0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x0000000000220000 0x00001000000e0000 0x0000000000000000
                 0x0000000000160000 0x0000000000160000  R E    0x10000
  LOAD           0x0000000000380000 0x0000100000240000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000390000 0x0000100000250000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003a0000 0x00003fffff800000 0x0000000000000000
                 0x0000000000800000 0x0000000000800000  RW     0x10000

There is no dynamic section in this file.

There are no relocations in this file.

The decoding of unwind sections for machine type AArch64 is not currently supported.

Dynamic symbol information is not available for displaying symbols.

No version information found in this file.

Displaying notes found at file offset 0x000004d8 with length 0x000002ec:
  Owner                 Data size	Description
  CORE                 0x00000188	NT_PRSTATUS (prstatus structure)
  CORE                 0x00000088	NT_PRPSINFO (prpsinfo structure)
  CORE                 0x000000a0	NT_AUXV (auxiliary vector)
core.23399: ELF 64-bit LSB core file ARM aarch64, version 1 (SYSV), SVR4-style
GNU gdb (GDB) Red Hat Enterprise Linux 8.2-3.el8
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /opt/ostestset/util/../bin/test_mck...done.

warning: core file may not match specified executable file.
[New LWP -536469208]
[New LWP 28352]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `'.
Program terminated with signal ?, Unknown signal.
#0  0x0000000000404d04 in coredump0 (tc_num=0, tc_arg=0x0) at src/coredump/000.c:77
77*segv_addr = 0;
[Current thread is 1 (LWP -536469208)]

=== buf_1 =========================================================
0x20000e80: 0x0000000000000000	0x0000000000000001
0x20000e90: 0x0000000000000002	0x0000000000000003
0x20000ea0: 0x0000000000000004	0x0000000000000005
0x20000eb0: 0x0000000000000006	0x0000000000000007
0x20000ec0: 0x0000000000000008	0x0000000000000009
0x20000ed0: 0x000000000000000a	0x000000000000000b
0x20000ee0: 0x000000000000000c	0x000000000000000d
0x20000ef0: 0x000000000000000e	0x000000000000000f
0x20000f00: 0x0000000000000010	0x0000000000000011
0x20000f10: 0x0000000000000012	0x0000000000000013
0x20000f20: 0x0000000000000014	0x0000000000000015
0x20000f30: 0x0000000000000016	0x0000000000000017
0x20000f40: 0x0000000000000018	0x0000000000000019
0x20000f50: 0x000000000000001a	0x000000000000001b
0x20000f60: 0x000000000000001c	0x000000000000001d
0x20000f70: 0x000000000000001e	0x000000000000001f

=== buf_2 =========================================================
$1 = {0xffffffffffffffff, 0xfffffffffffffffe, 0xfffffffffffffffd, 0xfffffffffffffffc, 0xfffffffffffffffb, 0xfffffffffffffffa, 
  0xfffffffffffffff9, 0xfffffffffffffff8, 0xfffffffffffffff7, 0xfffffffffffffff6, 0xfffffffffffffff5, 0xfffffffffffffff4, 
  0xfffffffffffffff3, 0xfffffffffffffff2, 0xfffffffffffffff1, 0xfffffffffffffff0, 0xffffffffffffffef, 0xffffffffffffffee, 
  0xffffffffffffffed, 0xffffffffffffffec, 0xffffffffffffffeb, 0xffffffffffffffea, 0xffffffffffffffe9, 0xffffffffffffffe8, 
  0xffffffffffffffe7, 0xffffffffffffffe6, 0xffffffffffffffe5, 0xffffffffffffffe4, 0xffffffffffffffe3, 0xffffffffffffffe2, 
  0xffffffffffffffe1, 0xffffffffffffffe0}

=== backtrace =====================================================
#0  0x0000000000404d04 in coredump0 (tc_num=0, tc_arg=0x0) at src/coredump/000.c:77
#1  0x00000000004036f8 in run_test_case (tc=0x4438b8 <test_cases+240>, argc=1, argv=0x3ffffffffde8) at src/test_mck.c:72
#2  0x0000000000403ab0 in main (argc=1, argv=0x3ffffffffde8) at src/test_mck.c:164

=== registers =====================================================
x0             0x0                 0
x1             0x1                 1
x2             0x2                 2
x3             0x3                 3
x4             0x4                 4
x5             0x5                 5
x6             0x6                 6
x7             0x7                 7
x8             0x8                 8
x9             0x9                 9
x10            0xa                 10
x11            0xb                 11
x12            0xc                 12
x13            0xd                 13
x14            0xe                 14
x15            0xf                 15
x16            0x10                16
x17            0x11                17
x18            0x12                18
x19            0x13                19
x20            0x14                20
x21            0x15                21
x22            0x16                22
x23            0x17                23
x24            0x18                24
x25            0x19                25
x26            0x1a                26
x27            0x1b                27
x28            0x1c                28
x29            0x3ffffffffb80      70368744176512
x30            0x404c8c            4213900
sp             0x3ffffffffa80      0x3ffffffffa80
pc             0x404d04            0x404d04 <coredump0+844>
cpsr           0x60000000          [ EL=0 C Z ]
fpsr           <unavailable>
fpcr           <unavailable>
## popen ##
TEST_SUITE: popen
TEST_NUMBER: 0
ARGS: 
Hello World
RESULT: ok
## procfs ##
TEST_SUITE: procfs
TEST_NUMBER: 0
ARGS: 
dump /proc/28415/auxv:
  0x00000000000021 0x00100000050000 (AT_SYSINFO_EHDR)
  0x00000000000019 0x003fffffffffc0 (AT_RANDOM)
  0x00000000000011 0x00000000000064 (AT_CLKTCK)
  0x00000000000006 0x00000000010000 (AT_PAGESZ)
  0x00000000000003 0x00000000400040 (AT_PHDR)
  0x00000000000004 0x00000000000038 (AT_PHENT)
  0x00000000000005 0x0000000000000a (AT_PHNUM)
  0x00000000000009 0x000000004035a0 (AT_ENTRY)
  0x00000000000010 0x00000000003fff (AT_HWCAP)
  0000000000000000 0000000000000000 (AT_NULL)
RESULT: you need check AUXV value
TEST_SUITE: procfs
TEST_NUMBER: 1
ARGS: 
allocated: 0x00000020000e80
dump /proc/28430/mem(offset:0x00000020000e80):
  0x00000020000e80: 0000000000000000 0000000000000001 0000000000000002 0000000000000003
  0x00000020000ea0: 0000000000000004 0000000000000005 0000000000000006 0000000000000007
  0x00000020000ec0: 0000000000000008 0000000000000009 000000000000000a 000000000000000b
  0x00000020000ee0: 000000000000000c 000000000000000d 000000000000000e 000000000000000f
  0x00000020000f00: 0000000000000010 0000000000000011 0000000000000012 0000000000000013
  0x00000020000f20: 0000000000000014 0000000000000015 0000000000000016 0000000000000017
  0x00000020000f40: 0000000000000018 0000000000000019 000000000000001a 000000000000001b
  0x00000020000f60: 000000000000001c 000000000000001d 000000000000001e 000000000000001f
RESULT: you need check MEM value
TEST_SUITE: procfs
TEST_NUMBER: 2
ARGS: 
allocated: 0x00100004000b20
dump /proc/28445/task/28459/mem(offset:0x00100004000b20):
  0x00100004000b20: ffffffffffffffff fffffffffffffffe fffffffffffffffd fffffffffffffffc
  0x00100004000b40: fffffffffffffffb fffffffffffffffa fffffffffffffff9 fffffffffffffff8
  0x00100004000b60: fffffffffffffff7 fffffffffffffff6 fffffffffffffff5 fffffffffffffff4
  0x00100004000b80: fffffffffffffff3 fffffffffffffff2 fffffffffffffff1 fffffffffffffff0
  0x00100004000ba0: ffffffffffffffef ffffffffffffffee ffffffffffffffed ffffffffffffffec
  0x00100004000bc0: ffffffffffffffeb ffffffffffffffea ffffffffffffffe9 ffffffffffffffe8
  0x00100004000be0: ffffffffffffffe7 ffffffffffffffe6 ffffffffffffffe5 ffffffffffffffe4
  0x00100004000c00: ffffffffffffffe3 ffffffffffffffe2 ffffffffffffffe1 ffffffffffffffe0
RESULT: you need check MEM value
TEST_SUITE: procfs
TEST_NUMBER: 3
ARGS: 
output /proc/28460/task/28474/stat
0 (exe) R 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0

RESULT: you need check STAT value
TEST_SUITE: procfs
TEST_NUMBER: 4
ARGS: 
mmaped buf: 0x00100000260000
mmaped buf(RW-): 0x00100000260000
mmaped buf(RWX): 0x00100000270000
dump /proc/28475/mem(offset:0x00100000260000):
  0x00100000260000: 0000000000000000 0000000000000001 0000000000000002 0000000000000003
  0x00100000260020: 0000000000000004 0000000000000005 0000000000000006 0000000000000007
  0x00100000260040: 0000000000000008 0000000000000009 000000000000000a 000000000000000b
  0x00100000260060: 000000000000000c 000000000000000d 000000000000000e 000000000000000f
  0x00100000260080: 0000000000000010 0000000000000011 0000000000000012 0000000000000013
  0x001000002600a0: 0000000000000014 0000000000000015 0000000000000016 0000000000000017
  0x001000002600c0: 0000000000000018 0000000000000019 000000000000001a 000000000000001b
  0x001000002600e0: 000000000000001c 000000000000001d 000000000000001e 000000000000001f
  *
  0x0010000026ff80: 0000000000001ff0 0000000000001ff1 0000000000001ff2 0000000000001ff3
  0x0010000026ffa0: 0000000000001ff4 0000000000001ff5 0000000000001ff6 0000000000001ff7
  0x0010000026ffc0: 0000000000001ff8 0000000000001ff9 0000000000001ffa 0000000000001ffb
  0x0010000026ffe0: 0000000000001ffc 0000000000001ffd 0000000000001ffe 0000000000001fff
  0x00100000270000: ffffffffffffffff fffffffffffffffe fffffffffffffffd fffffffffffffffc
  0x00100000270020: fffffffffffffffb fffffffffffffffa fffffffffffffff9 fffffffffffffff8
  0x00100000270040: fffffffffffffff7 fffffffffffffff6 fffffffffffffff5 fffffffffffffff4
  0x00100000270060: fffffffffffffff3 fffffffffffffff2 fffffffffffffff1 fffffffffffffff0
  *
  0x0010000027ff00: ffffffffffffe01f ffffffffffffe01e ffffffffffffe01d ffffffffffffe01c
  0x0010000027ff20: ffffffffffffe01b ffffffffffffe01a ffffffffffffe019 ffffffffffffe018
  0x0010000027ff40: ffffffffffffe017 ffffffffffffe016 ffffffffffffe015 ffffffffffffe014
  0x0010000027ff60: ffffffffffffe013 ffffffffffffe012 ffffffffffffe011 ffffffffffffe010
  0x0010000027ff80: ffffffffffffe00f ffffffffffffe00e ffffffffffffe00d ffffffffffffe00c
  0x0010000027ffa0: ffffffffffffe00b ffffffffffffe00a ffffffffffffe009 ffffffffffffe008
  0x0010000027ffc0: ffffffffffffe007 ffffffffffffe006 ffffffffffffe005 ffffffffffffe004
  0x0010000027ffe0: ffffffffffffe003 ffffffffffffe002 ffffffffffffe001 ffffffffffffe000
RESULT: you need check MEM value
TEST_SUITE: procfs
TEST_NUMBER: 5
ARGS: 
mmaped buf: 0x00100000a70000
mmaped buf(RW-): 0x00100000a70000
mmaped buf(RWX): 0x00100000a80000
dump /proc/28490/task/28504/mem(offset:0x00100000a70000):
  0x00100000a70000: ffffffffffffffff fffffffffffffffe fffffffffffffffd fffffffffffffffc
  0x00100000a70020: fffffffffffffffb fffffffffffffffa fffffffffffffff9 fffffffffffffff8
  0x00100000a70040: fffffffffffffff7 fffffffffffffff6 fffffffffffffff5 fffffffffffffff4
  0x00100000a70060: fffffffffffffff3 fffffffffffffff2 fffffffffffffff1 fffffffffffffff0
  0x00100000a70080: ffffffffffffffef ffffffffffffffee ffffffffffffffed ffffffffffffffec
  0x00100000a700a0: ffffffffffffffeb ffffffffffffffea ffffffffffffffe9 ffffffffffffffe8
  0x00100000a700c0: ffffffffffffffe7 ffffffffffffffe6 ffffffffffffffe5 ffffffffffffffe4
  0x00100000a700e0: ffffffffffffffe3 ffffffffffffffe2 ffffffffffffffe1 ffffffffffffffe0
  *
  0x00100000a7ff80: ffffffffffffe00f ffffffffffffe00e ffffffffffffe00d ffffffffffffe00c
  0x00100000a7ffa0: ffffffffffffe00b ffffffffffffe00a ffffffffffffe009 ffffffffffffe008
  0x00100000a7ffc0: ffffffffffffe007 ffffffffffffe006 ffffffffffffe005 ffffffffffffe004
  0x00100000a7ffe0: ffffffffffffe003 ffffffffffffe002 ffffffffffffe001 ffffffffffffe000
  0x00100000a80000: 0000000000000000 0000000000000001 0000000000000002 0000000000000003
  0x00100000a80020: 0000000000000004 0000000000000005 0000000000000006 0000000000000007
  0x00100000a80040: 0000000000000008 0000000000000009 000000000000000a 000000000000000b
  0x00100000a80060: 000000000000000c 000000000000000d 000000000000000e 000000000000000f
  *
  0x00100000a8ff00: 0000000000001fe0 0000000000001fe1 0000000000001fe2 0000000000001fe3
  0x00100000a8ff20: 0000000000001fe4 0000000000001fe5 0000000000001fe6 0000000000001fe7
  0x00100000a8ff40: 0000000000001fe8 0000000000001fe9 0000000000001fea 0000000000001feb
  0x00100000a8ff60: 0000000000001fec 0000000000001fed 0000000000001fee 0000000000001fef
  0x00100000a8ff80: 0000000000001ff0 0000000000001ff1 0000000000001ff2 0000000000001ff3
  0x00100000a8ffa0: 0000000000001ff4 0000000000001ff5 0000000000001ff6 0000000000001ff7
  0x00100000a8ffc0: 0000000000001ff8 0000000000001ff9 0000000000001ffa 0000000000001ffb
  0x00100000a8ffe0: 0000000000001ffc 0000000000001ffd 0000000000001ffe 0000000000001fff
RESULT: you need check MEM value
TEST_SUITE: procfs
TEST_NUMBER: 6
ARGS: 
output: /proc/cpuinfo
processor	: 4
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 5
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 6
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 7
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 8
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 9
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 10
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 11
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 12
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 13
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 14
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 15
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

RESULT: you need check CPUINFO
TEST_SUITE: procfs
TEST_NUMBER: 7
ARGS: 
output: /proc/28520/maps
000000400000-000000470000 r-xs 0 0:0 0  
000000470000-000000480000 r--s 0 0:0 0  
000000480000-000000490000 rw-s 0 0:0 0  
000020000000-000020030000 rw-s 0 0:0 0  [heap]
0ffffff80000-100000000000 rw-s 0 0:0 0  
100000000000-100000020000 r-xs 0 0:0 0  
100000020000-100000030000 r--s 0 0:0 0  
100000030000-100000040000 rw-s 0 0:0 0  
100000040000-100000050000 r--s 0 0:0 0  [vsyscall]
100000050000-100000060000 r-xs 0 0:0 0  [vdso]
100000070000-100000090000 r-xp 0 0:0 0  /usr/lib64/libpthread-2.28.so
100000090000-1000000a0000 r--p 0 0:0 0  /usr/lib64/libpthread-2.28.so
1000000a0000-1000000b0000 rw-p 0 0:0 0  /usr/lib64/libpthread-2.28.so
1000000b0000-1000000c0000 r-xp 0 0:0 0  /usr/lib64/libnuma.so.1.0.0
1000000c0000-1000000d0000 r--p 0 0:0 0  /usr/lib64/libnuma.so.1.0.0
1000000d0000-1000000e0000 rw-p 0 0:0 0  /usr/lib64/libnuma.so.1.0.0
1000000e0000-100000240000 r-xp 0 0:0 0  /usr/lib64/libc-2.28.so
100000240000-100000250000 r--p 0 0:0 0  /usr/lib64/libc-2.28.so
100000250000-100000260000 rw-p 0 0:0 0  /usr/lib64/libc-2.28.so
100000260000-100000270000 rwxp 0 0:0 0  
100000270000-100000280000 rw-p 0 0:0 0  
100000280000-100000290000 rwxp 0 0:0 0  
100000290000-1000002a0000 rw-p 0 0:0 0  
1000002a0000-1000002b0000 rwxp 0 0:0 0  
1000002b0000-1000002c0000 rw-p 0 0:0 0  
1000002c0000-1000002d0000 rwxp 0 0:0 0  
1000002d0000-1000002e0000 rw-p 0 0:0 0  
1000002e0000-1000002f0000 rwxp 0 0:0 0  
1000002f0000-100000300000 rw-p 0 0:0 0  
100000300000-100000310000 rwxp 0 0:0 0  
100000310000-100000320000 rw-p 0 0:0 0  
100000320000-100000330000 rwxp 0 0:0 0  
100000330000-100000340000 rw-p 0 0:0 0  
100000340000-100000350000 rwxp 0 0:0 0  
100000350000-100000360000 rw-p 0 0:0 0  
100000360000-100000370000 rwxp 0 0:0 0  
100000370000-100000380000 rw-p 0 0:0 0  
100000380000-100000390000 rwxp 0 0:0 0  
100000390000-1000003a0000 rw-p 0 0:0 0  
1000003a0000-1000003b0000 rwxp 0 0:0 0  
1000003b0000-1000003c0000 rw-p 0 0:0 0  
1000003c0000-1000003d0000 rwxp 0 0:0 0  
1000003d0000-1000003e0000 rw-p 0 0:0 0  
1000003e0000-1000003f0000 rwxp 0 0:0 0  
1000003f0000-100000400000 rw-p 0 0:0 0  
100000400000-100000410000 rwxp 0 0:0 0  
100000410000-100000420000 rw-p 0 0:0 0  
100000420000-100000430000 rwxp 0 0:0 0  
100000430000-100000440000 rw-p 0 0:0 0  
100000440000-100000450000 rwxp 0 0:0 0  
100000450000-100000460000 rw-p 0 0:0 0  
100000460000-100000470000 rwxp 0 0:0 0  
100000470000-100000480000 rw-p 0 0:0 0  
100000480000-100000490000 rwxp 0 0:0 0  
100000490000-1000004a0000 rw-p 0 0:0 0  
1000004a0000-1000004b0000 rwxp 0 0:0 0  
1000004b0000-1000004c0000 rw-p 0 0:0 0  
1000004c0000-1000004d0000 rwxp 0 0:0 0  
1000004d0000-1000004e0000 rw-p 0 0:0 0  
1000004e0000-1000004f0000 rwxp 0 0:0 0  
1000004f0000-100000500000 rw-p 0 0:0 0  
100000500000-100000510000 rwxp 0 0:0 0  
100000510000-100000520000 rw-p 0 0:0 0  
100000520000-100000530000 rwxp 0 0:0 0  
100000530000-100000540000 rw-p 0 0:0 0  
100000540000-100000550000 rwxp 0 0:0 0  
100000550000-100000560000 rw-p 0 0:0 0  
100000560000-100000570000 rwxp 0 0:0 0  
100000570000-100000580000 rw-p 0 0:0 0  
100000580000-100000590000 rwxp 0 0:0 0  
100000590000-1000005a0000 rw-p 0 0:0 0  
1000005a0000-1000005b0000 rwxp 0 0:0 0  
1000005b0000-1000005c0000 rw-p 0 0:0 0  
1000005c0000-1000005d0000 rwxp 0 0:0 0  
1000005d0000-1000005e0000 rw-p 0 0:0 0  
1000005e0000-1000005f0000 rwxp 0 0:0 0  
1000005f0000-100000600000 rw-p 0 0:0 0  
100000600000-100000610000 rwxp 0 0:0 0  
100000610000-100000620000 rw-p 0 0:0 0  
100000620000-100000630000 rwxp 0 0:0 0  
100000630000-100000640000 rw-p 0 0:0 0  
100000640000-100000650000 rwxp 0 0:0 0  
100000650000-100000660000 rw-p 0 0:0 0  
100000660000-100000670000 rwxp 0 0:0 0  
100000670000-100000680000 rw-p 0 0:0 0  
100000680000-100000690000 rwxp 0 0:0 0  
100000690000-1000006a0000 rw-p 0 0:0 0  
1000006a0000-1000006b0000 rwxp 0 0:0 0  
1000006b0000-1000006c0000 rw-p 0 0:0 0  
1000006c0000-1000006d0000 rwxp 0 0:0 0  
1000006d0000-1000006e0000 rw-p 0 0:0 0  
1000006e0000-1000006f0000 rwxp 0 0:0 0  
1000006f0000-100000700000 rw-p 0 0:0 0  
100000700000-100000710000 rwxp 0 0:0 0  
100000710000-100000720000 rw-p 0 0:0 0  
100000720000-100000730000 rwxp 0 0:0 0  
100000730000-100000740000 rw-p 0 0:0 0  
100000740000-100000750000 rwxp 0 0:0 0  
100000750000-100000760000 rw-p 0 0:0 0  
100000760000-100000770000 rwxp 0 0:0 0  
100000770000-100000780000 rw-p 0 0:0 0  
100000780000-100000790000 rwxp 0 0:0 0  
100000790000-1000007a0000 rw-p 0 0:0 0  
1000007a0000-1000007b0000 rwxp 0 0:0 0  
1000007b0000-1000007c0000 rw-p 0 0:0 0  
1000007c0000-1000007d0000 rwxp 0 0:0 0  
1000007d0000-1000007e0000 rw-p 0 0:0 0  
1000007e0000-1000007f0000 rwxp 0 0:0 0  
1000007f0000-100000800000 rw-p 0 0:0 0  
100000800000-100000810000 rwxp 0 0:0 0  
100000810000-100000820000 rw-p 0 0:0 0  
100000820000-100000830000 rwxp 0 0:0 0  
100000830000-100000840000 rw-p 0 0:0 0  
100000840000-100000850000 rwxp 0 0:0 0  
100000850000-100000860000 rw-p 0 0:0 0  
100000860000-100000870000 rwxp 0 0:0 0  
100000870000-100000880000 rw-p 0 0:0 0  
100000880000-100000890000 rwxp 0 0:0 0  
100000890000-1000008a0000 rw-p 0 0:0 0  
1000008a0000-1000008b0000 rwxp 0 0:0 0  
1000008b0000-1000008c0000 rw-p 0 0:0 0  
1000008c0000-1000008d0000 rwxp 0 0:0 0  
1000008d0000-1000008e0000 rw-p 0 0:0 0  
1000008e0000-1000008f0000 rwxp 0 0:0 0  
1000008f0000-100000900000 rw-p 0 0:0 0  
100000900000-100000910000 rwxp 0 0:0 0  
100000910000-100000920000 rw-p 0 0:0 0  
100000920000-100000930000 rwxp 0 0:0 0  
100000930000-100000940000 rw-p 0 0:0 0  
100000940000-100000950000 rwxp 0 0:0 0  
100000950000-100000960000 rw-p 0 0:0 0  
100000960000-100000970000 rwxp 0 0:0 0  
100000970000-100000980000 rw-p 0 0:0 0  
100000980000-100000990000 rwxp 0 0:0 0  
100000990000-1000009a0000 rw-p 0 0:0 0  
1000009a0000-1000009b0000 rwxp 0 0:0 0  
1000009b0000-1000009c0000 rw-p 0 0:0 0  
1000009c0000-1000009d0000 rwxp 0 0:0 0  
1000009d0000-1000009e0000 rw-p 0 0:0 0  
1000009e0000-1000009f0000 rwxp 0 0:0 0  
1000009f0000-100000a00000 rw-p 0 0:0 0  
100000a00000-100000a10000 rwxp 0 0:0 0  
100000a10000-100000a20000 rw-p 0 0:0 0  
100000a20000-100000a30000 rwxp 0 0:0 0  
100000a30000-100000a40000 rw-p 0 0:0 0  
100000a40000-100000a50000 rwxp 0 0:0 0  
100000a50000-100000a60000 rw-p 0 0:0 0  
100000a60000-100000a70000 rwxp 0 0:0 0  
100000a70000-100000a80000 rw-p 0 0:0 0  
100000a80000-100000a90000 rwxp 0 0:0 0  
100000a90000-100000aa0000 rw-p 0 0:0 0  
100000aa0000-100000ab0000 rwxp 0 0:0 0  
100000ab0000-100000ac0000 rw-p 0 0:0 0  
100000ac0000-100000ad0000 rwxp 0 0:0 0  
100000ad0000-100000ae0000 rw-p 0 0:0 0  
100000ae0000-100000af0000 rwxp 0 0:0 0  
100000af0000-100000b00000 rw-p 0 0:0 0  
100000b00000-100000b10000 rwxp 0 0:0 0  
100000b10000-100000b20000 rw-p 0 0:0 0  
100000b20000-100000b30000 rwxp 0 0:0 0  
100000b30000-100000b40000 rw-p 0 0:0 0  
100000b40000-100000b50000 rwxp 0 0:0 0  
100000b50000-100000b60000 rw-p 0 0:0 0  
100000b60000-100000b70000 rwxp 0 0:0 0  
100000b70000-100000b80000 rw-p 0 0:0 0  
100000b80000-100000b90000 rwxp 0 0:0 0  
100000b90000-100000ba0000 rw-p 0 0:0 0  
100000ba0000-100000bb0000 rwxp 0 0:0 0  
100000bb0000-100000bc0000 rw-p 0 0:0 0  
100000bc0000-100000bd0000 rwxp 0 0:0 0  
100000bd0000-100000be0000 rw-p 0 0:0 0  
100000be0000-100000bf0000 rwxp 0 0:0 0  
100000bf0000-100000c00000 rw-p 0 0:0 0  
100000c00000-100000c10000 rwxp 0 0:0 0  
100000c10000-100000c20000 rw-p 0 0:0 0  
100000c20000-100000c30000 rwxp 0 0:0 0  
100000c30000-100000c40000 rw-p 0 0:0 0  
100000c40000-100000c50000 rwxp 0 0:0 0  
100000c50000-100000c60000 rw-p 0 0:0 0  
100000c60000-100000c70000 rwxp 0 0:0 0  
100000c70000-100000c80000 rw-p 0 0:0 0  
100000c80000-100000c90000 rwxp 0 0:0 0  
100000c90000-100000ca0000 rw-p 0 0:0 0  
100000ca0000-100000cb0000 rwxp 0 0:0 0  
100000cb0000-100000cc0000 rw-p 0 0:0 0  
100000cc0000-100000cd0000 rwxp 0 0:0 0  
100000cd0000-100000ce0000 rw-p 0 0:0 0  
100000ce0000-100000cf0000 rwxp 0 0:0 0  
100000cf0000-100000d00000 rw-p 0 0:0 0  
100000d00000-100000d10000 rwxp 0 0:0 0  
100000d10000-100000d20000 rw-p 0 0:0 0  
100000d20000-100000d30000 rwxp 0 0:0 0  
100000d30000-100000d40000 rw-p 0 0:0 0  
100000d40000-100000d50000 rwxp 0 0:0 0  
100000d50000-100000d60000 rw-p 0 0:0 0  
100000d60000-100000d70000 rwxp 0 0:0 0  
100000d70000-100000d80000 rw-p 0 0:0 0  
100000d80000-100000d90000 rwxp 0 0:0 0  
100000d90000-100000da0000 rw-p 0 0:0 0  
100000da0000-100000db0000 rwxp 0 0:0 0  
100000db0000-100000dc0000 rw-p 0 0:0 0  
100000dc0000-100000dd0000 rwxp 0 0:0 0  
100000dd0000-100000de0000 rw-p 0 0:0 0  
100000de0000-100000df0000 rwxp 0 0:0 0  
100000df0000-100000e00000 rw-p 0 0:0 0  
100000e00000-100000e10000 rwxp 0 0:0 0  
100000e10000-100000e20000 rw-p 0 0:0 0  
100000e20000-100000e30000 rwxp 0 0:0 0  
100000e30000-100000e40000 rw-p 0 0:0 0  
100000e40000-100000e50000 rwxp 0 0:0 0  
100000e50000-100000e60000 rw-p 0 0:0 0  
100000e60000-100000e70000 rwxp 0 0:0 0  
100000e70000-100000e80000 rw-p 0 0:0 0  
100000e80000-100000e90000 rwxp 0 0:0 0  
100000e90000-100000ea0000 rw-p 0 0:0 0  
100000ea0000-100000eb0000 rwxp 0 0:0 0  
100000eb0000-100000ec0000 rw-p 0 0:0 0  
100000ec0000-100000ed0000 rwxp 0 0:0 0  
100000ed0000-100000ee0000 rw-p 0 0:0 0  
100000ee0000-100000ef0000 rwxp 0 0:0 0  
100000ef0000-100000f00000 rw-p 0 0:0 0  
100000f00000-100000f10000 rwxp 0 0:0 0  
100000f10000-100000f20000 rw-p 0 0:0 0  
100000f20000-100000f30000 rwxp 0 0:0 0  
100000f30000-100000f40000 rw-p 0 0:0 0  
100000f40000-100000f50000 rwxp 0 0:0 0  
100000f50000-100000f60000 rw-p 0 0:0 0  
100000f60000-100000f70000 rwxp 0 0:0 0  
100000f70000-100000f80000 rw-p 0 0:0 0  
100000f80000-100000f90000 rwxp 0 0:0 0  
100000f90000-100000fa0000 rw-p 0 0:0 0  
100000fa0000-100000fb0000 rwxp 0 0:0 0  
100000fb0000-100000fc0000 rw-p 0 0:0 0  
100000fc0000-100000fd0000 rwxp 0 0:0 0  
100000fd0000-100000fe0000 rw-p 0 0:0 0  
100000fe0000-100000ff0000 rwxp 0 0:0 0  
100000ff0000-100001000000 rw-p 0 0:0 0  
100001000000-100001010000 rwxp 0 0:0 0  
100001010000-100001020000 rw-p 0 0:0 0  
100001020000-100001030000 rwxp 0 0:0 0  
100001030000-100001040000 rw-p 0 0:0 0  
100001040000-100001050000 rwxp 0 0:0 0  
100001050000-100001060000 rw-p 0 0:0 0  
100001060000-100001070000 rwxp 0 0:0 0  
100001070000-100001080000 rw-p 0 0:0 0  
100001080000-100001090000 rwxp 0 0:0 0  
100001090000-1000010a0000 rw-p 0 0:0 0  
1000010a0000-1000010b0000 rwxp 0 0:0 0  
1000010b0000-1000010c0000 rw-p 0 0:0 0  
1000010c0000-1000010d0000 rwxp 0 0:0 0  
1000010d0000-1000010e0000 rw-p 0 0:0 0  
1000010e0000-1000010f0000 rwxp 0 0:0 0  
1000010f0000-100001100000 rw-p 0 0:0 0  
100001100000-100001110000 rwxp 0 0:0 0  
100001110000-100001120000 rw-p 0 0:0 0  
100001120000-100001130000 rwxp 0 0:0 0  
100001130000-100001140000 rw-p 0 0:0 0  
100001140000-100001150000 rwxp 0 0:0 0  
100001150000-100001160000 rw-p 0 0:0 0  
100001160000-100001170000 rwxp 0 0:0 0  
100001170000-100001180000 rw-p 0 0:0 0  
100001180000-100001190000 rwxp 0 0:0 0  
100001190000-1000011a0000 rw-p 0 0:0 0  
1000011a0000-1000011b0000 rwxp 0 0:0 0  
1000011b0000-1000011c0000 rw-p 0 0:0 0  
1000011c0000-1000011d0000 rwxp 0 0:0 0  
1000011d0000-1000011e0000 rw-p 0 0:0 0  
1000011e0000-1000011f0000 rwxp 0 0:0 0  
1000011f0000-100001200000 rw-p 0 0:0 0  
100001200000-100001210000 rwxp 0 0:0 0  
100001210000-100001220000 rw-p 0 0:0 0  
100001220000-100001230000 rwxp 0 0:0 0  
100001230000-100001240000 rw-p 0 0:0 0  
100001240000-100001250000 rwxp 0 0:0 0  
100001250000-100001260000 rw-p 0 0:0 0  
100001260000-100001270000 rwxp 0 0:0 0  
100001270000-100001280000 rw-p 0 0:0 0  
100001280000-100001290000 rwxp 0 0:0 0  
100001290000-1000012a0000 rw-p 0 0:0 0  
1000012a0000-1000012b0000 rwxp 0 0:0 0  
1000012b0000-1000012c0000 rw-p 0 0:0 0  
1000012c0000-1000012d0000 rwxp 0 0:0 0  
1000012d0000-1000012e0000 rw-p 0 0:0 0  
1000012e0000-1000012f0000 rwxp 0 0:0 0  
1000012f0000-100001300000 rw-p 0 0:0 0  
100001300000-100001310000 rwxp 0 0:0 0  
100001310000-100001320000 rw-p 0 0:0 0  
100001320000-100001330000 rwxp 0 0:0 0  
100001330000-100001340000 rw-p 0 0:0 0  
100001340000-100001350000 rwxp 0 0:0 0  
100001350000-100001360000 rw-p 0 0:0 0  
100001360000-100001370000 rwxp 0 0:0 0  
100001370000-100001380000 rw-p 0 0:0 0  
100001380000-100001390000 rwxp 0 0:0 0  
100001390000-1000013a0000 rw-p 0 0:0 0  
1000013a0000-1000013b0000 rwxp 0 0:0 0  
1000013b0000-1000013c0000 rw-p 0 0:0 0  
1000013c0000-1000013d0000 rwxp 0 0:0 0  
1000013d0000-1000013e0000 rw-p 0 0:0 0  
1000013e0000-1000013f0000 rwxp 0 0:0 0  
1000013f0000-100001400000 rw-p 0 0:0 0  
100001400000-100001410000 rwxp 0 0:0 0  
100001410000-100001420000 rw-p 0 0:0 0  
100001420000-100001430000 rwxp 0 0:0 0  
100001430000-100001440000 rw-p 0 0:0 0  
100001440000-100001450000 rwxp 0 0:0 0  
100001450000-100001460000 rw-p 0 0:0 0  
100001460000-100001470000 rwxp 0 0:0 0  
100001470000-100001480000 rw-p 0 0:0 0  
100001480000-100001490000 rwxp 0 0:0 0  
100001490000-1000014a0000 rw-p 0 0:0 0  
1000014a0000-1000014b0000 rwxp 0 0:0 0  
1000014b0000-1000014c0000 rw-p 0 0:0 0  
1000014c0000-1000014d0000 rwxp 0 0:0 0  
1000014d0000-1000014e0000 rw-p 0 0:0 0  
1000014e0000-1000014f0000 rwxp 0 0:0 0  
1000014f0000-100001500000 rw-p 0 0:0 0  
100001500000-100001510000 rwxp 0 0:0 0  
100001510000-100001520000 rw-p 0 0:0 0  
100001520000-100001530000 rwxp 0 0:0 0  
100001530000-100001540000 rw-p 0 0:0 0  
100001540000-100001550000 rwxp 0 0:0 0  
100001550000-100001560000 rw-p 0 0:0 0  
100001560000-100001570000 rwxp 0 0:0 0  
100001570000-100001580000 rw-p 0 0:0 0  
100001580000-100001590000 rwxp 0 0:0 0  
100001590000-1000015a0000 rw-p 0 0:0 0  
1000015a0000-1000015b0000 rwxp 0 0:0 0  
1000015b0000-1000015c0000 rw-p 0 0:0 0  
1000015c0000-1000015d0000 rwxp 0 0:0 0  
1000015d0000-1000015e0000 rw-p 0 0:0 0  
1000015e0000-1000015f0000 rwxp 0 0:0 0  
1000015f0000-100001600000 rw-p 0 0:0 0  
100001600000-100001610000 rwxp 0 0:0 0  
100001610000-100001620000 rw-p 0 0:0 0  
100001620000-100001630000 rwxp 0 0:0 0  
100001630000-100001640000 rw-p 0 0:0 0  
100001640000-100001650000 rwxp 0 0:0 0  
100001650000-100001660000 rw-p 0 0:0 0  
100001660000-100001670000 rwxp 0 0:0 0  
100001670000-100001680000 rw-p 0 0:0 0  
100001680000-100001690000 rwxp 0 0:0 0  
100001690000-1000016a0000 rw-p 0 0:0 0  
1000016a0000-1000016b0000 rwxp 0 0:0 0  
1000016b0000-1000016c0000 rw-p 0 0:0 0  
1000016c0000-1000016d0000 rwxp 0 0:0 0  
1000016d0000-1000016e0000 rw-p 0 0:0 0  
1000016e0000-1000016f0000 rwxp 0 0:0 0  
1000016f0000-100001700000 rw-p 0 0:0 0  
100001700000-100001710000 rwxp 0 0:0 0  
100001710000-100001720000 rw-p 0 0:0 0  
100001720000-100001730000 rwxp 0 0:0 0  
100001730000-100001740000 rw-p 0 0:0 0  
100001740000-100001750000 rwxp 0 0:0 0  
100001750000-100001760000 rw-p 0 0:0 0  
100001760000-100001770000 rwxp 0 0:0 0  
100001770000-100001780000 rw-p 0 0:0 0  
100001780000-100001790000 rwxp 0 0:0 0  
100001790000-1000017a0000 rw-p 0 0:0 0  
1000017a0000-1000017b0000 rwxp 0 0:0 0  
1000017b0000-1000017c0000 rw-p 0 0:0 0  
1000017c0000-1000017d0000 rwxp 0 0:0 0  
1000017d0000-1000017e0000 rw-p 0 0:0 0  
1000017e0000-1000017f0000 rwxp 0 0:0 0  
1000017f0000-100001800000 rw-p 0 0:0 0  
100001800000-100001810000 rwxp 0 0:0 0  
100001810000-100001820000 rw-p 0 0:0 0  
100001820000-100001830000 rwxp 0 0:0 0  
100001830000-100001840000 rw-p 0 0:0 0  
100001840000-100001850000 rwxp 0 0:0 0  
100001850000-100001860000 rw-p 0 0:0 0  
100001860000-100001870000 rwxp 0 0:0 0  
100001870000-100001880000 rw-p 0 0:0 0  
100001880000-100001890000 rwxp 0 0:0 0  
100001890000-1000018a0000 rw-p 0 0:0 0  
1000018a0000-1000018b0000 rwxp 0 0:0 0  
1000018b0000-1000018c0000 rw-p 0 0:0 0  
1000018c0000-1000018d0000 rwxp 0 0:0 0  
1000018d0000-1000018e0000 rw-p 0 0:0 0  
1000018e0000-1000018f0000 rwxp 0 0:0 0  
1000018f0000-100001900000 rw-p 0 0:0 0  
100001900000-100001910000 rwxp 0 0:0 0  
100001910000-100001920000 rw-p 0 0:0 0  
100001920000-100001930000 rwxp 0 0:0 0  
100001930000-100001940000 rw-p 0 0:0 0  
100001940000-100001950000 rwxp 0 0:0 0  
100001950000-100001960000 rw-p 0 0:0 0  
100001960000-100001970000 rwxp 0 0:0 0  
100001970000-100001980000 rw-p 0 0:0 0  
100001980000-100001990000 rwxp 0 0:0 0  
100001990000-1000019a0000 rw-p 0 0:0 0  
1000019a0000-1000019b0000 rwxp 0 0:0 0  
1000019b0000-1000019c0000 rw-p 0 0:0 0  
1000019c0000-1000019d0000 rwxp 0 0:0 0  
1000019d0000-1000019e0000 rw-p 0 0:0 0  
1000019e0000-1000019f0000 rwxp 0 0:0 0  
1000019f0000-100001a00000 rw-p 0 0:0 0  
100001a00000-100001a10000 rwxp 0 0:0 0  
100001a10000-100001a20000 rw-p 0 0:0 0  
100001a20000-100001a30000 rwxp 0 0:0 0  
100001a30000-100001a40000 rw-p 0 0:0 0  
100001a40000-100001a50000 rwxp 0 0:0 0  
100001a50000-100001a60000 rw-p 0 0:0 0  
100001a60000-100001a70000 rwxp 0 0:0 0  
100001a70000-100001a80000 rw-p 0 0:0 0  
100001a80000-100001a90000 rwxp 0 0:0 0  
100001a90000-100001aa0000 rw-p 0 0:0 0  
100001aa0000-100001ab0000 rwxp 0 0:0 0  
100001ab0000-100001ac0000 rw-p 0 0:0 0  
100001ac0000-100001ad0000 rwxp 0 0:0 0  
100001ad0000-100001ae0000 rw-p 0 0:0 0  
100001ae0000-100001af0000 rwxp 0 0:0 0  
100001af0000-100001b00000 rw-p 0 0:0 0  
100001b00000-100001b10000 rwxp 0 0:0 0  
100001b10000-100001b20000 rw-p 0 0:0 0  
100001b20000-100001b30000 rwxp 0 0:0 0  
100001b30000-100001b40000 rw-p 0 0:0 0  
100001b40000-100001b50000 rwxp 0 0:0 0  
100001b50000-100001b60000 rw-p 0 0:0 0  
100001b60000-100001b70000 rwxp 0 0:0 0  
100001b70000-100001b80000 rw-p 0 0:0 0  
100001b80000-100001b90000 rwxp 0 0:0 0  
100001b90000-100001ba0000 rw-p 0 0:0 0  
100001ba0000-100001bb0000 rwxp 0 0:0 0  
100001bb0000-100001bc0000 rw-p 0 0:0 0  
100001bc0000-100001bd0000 rwxp 0 0:0 0  
100001bd0000-100001be0000 rw-p 0 0:0 0  
100001be0000-100001bf0000 rwxp 0 0:0 0  
100001bf0000-100001c00000 rw-p 0 0:0 0  
100001c00000-100001c10000 rwxp 0 0:0 0  
100001c10000-100001c20000 rw-p 0 0:0 0  
100001c20000-100001c30000 rwxp 0 0:0 0  
100001c30000-100001c40000 rw-p 0 0:0 0  
100001c40000-100001c50000 rwxp 0 0:0 0  
100001c50000-100001c60000 rw-p 0 0:0 0  
100001c60000-100001c70000 rwxp 0 0:0 0  
100001c70000-100001c80000 rw-p 0 0:0 0  
100001c80000-100001c90000 rwxp 0 0:0 0  
100001c90000-100001ca0000 rw-p 0 0:0 0  
100001ca0000-100001cb0000 rwxp 0 0:0 0  
100001cb0000-100001cc0000 rw-p 0 0:0 0  
100001cc0000-100001cd0000 rwxp 0 0:0 0  
100001cd0000-100001ce0000 rw-p 0 0:0 0  
100001ce0000-100001cf0000 rwxp 0 0:0 0  
100001cf0000-100001d00000 rw-p 0 0:0 0  
100001d00000-100001d10000 rwxp 0 0:0 0  
100001d10000-100001d20000 rw-p 0 0:0 0  
100001d20000-100001d30000 rwxp 0 0:0 0  
100001d30000-100001d40000 rw-p 0 0:0 0  
100001d40000-100001d50000 rwxp 0 0:0 0  
100001d50000-100001d60000 rw-p 0 0:0 0  
100001d60000-100001d70000 rwxp 0 0:0 0  
100001d70000-100001d80000 rw-p 0 0:0 0  
100001d80000-100001d90000 rwxp 0 0:0 0  
100001d90000-100001da0000 rw-p 0 0:0 0  
100001da0000-100001db0000 rwxp 0 0:0 0  
100001db0000-100001dc0000 rw-p 0 0:0 0  
100001dc0000-100001dd0000 rwxp 0 0:0 0  
100001dd0000-100001de0000 rw-p 0 0:0 0  
100001de0000-100001df0000 rwxp 0 0:0 0  
100001df0000-100001e00000 rw-p 0 0:0 0  
100001e00000-100001e10000 rwxp 0 0:0 0  
100001e10000-100001e20000 rw-p 0 0:0 0  
100001e20000-100001e30000 rwxp 0 0:0 0  
100001e30000-100001e40000 rw-p 0 0:0 0  
100001e40000-100001e50000 rwxp 0 0:0 0  
100001e50000-100001e60000 rw-p 0 0:0 0  
100001e60000-100001e70000 rwxp 0 0:0 0  
100001e70000-100001e80000 rw-p 0 0:0 0  
100001e80000-100001e90000 rwxp 0 0:0 0  
100001e90000-100001ea0000 rw-p 0 0:0 0  
100001ea0000-100001eb0000 rwxp 0 0:0 0  
100001eb0000-100001ec0000 rw-p 0 0:0 0  
100001ec0000-100001ed0000 rwxp 0 0:0 0  
100001ed0000-100001ee0000 rw-p 0 0:0 0  
100001ee0000-100001ef0000 rwxp 0 0:0 0  
100001ef0000-100001f00000 rw-p 0 0:0 0  
100001f00000-100001f10000 rwxp 0 0:0 0  
100001f10000-100001f20000 rw-p 0 0:0 0  
100001f20000-100001f30000 rwxp 0 0:0 0  
100001f30000-100001f40000 rw-p 0 0:0 0  
100001f40000-100001f50000 rwxp 0 0:0 0  
100001f50000-100001f60000 rw-p 0 0:0 0  
100001f60000-100001f70000 rwxp 0 0:0 0  
100001f70000-100001f80000 rw-p 0 0:0 0  
100001f80000-100001f90000 rwxp 0 0:0 0  
100001f90000-100001fa0000 rw-p 0 0:0 0  
100001fa0000-100001fb0000 rwxp 0 0:0 0  
100001fb0000-100001fc0000 rw-p 0 0:0 0  
100001fc0000-100001fd0000 rwxp 0 0:0 0  
100001fd0000-100001fe0000 rw-p 0 0:0 0  
100001fe0000-100001ff0000 rwxp 0 0:0 0  
100001ff0000-100002000000 rw-p 0 0:0 0  
100002000000-100002010000 rwxp 0 0:0 0  
100002010000-100002020000 rw-p 0 0:0 0  
100002020000-100002030000 rwxp 0 0:0 0  
100002030000-100002040000 rw-p 0 0:0 0  
100002040000-100002050000 rwxp 0 0:0 0  
100002050000-100002060000 rw-p 0 0:0 0  
100002060000-100002070000 rwxp 0 0:0 0  
100002070000-100002080000 rw-p 0 0:0 0  
100002080000-100002090000 rwxp 0 0:0 0  
100002090000-1000020a0000 rw-p 0 0:0 0  
1000020a0000-1000020b0000 rwxp 0 0:0 0  
1000020b0000-1000020c0000 rw-p 0 0:0 0  
1000020c0000-1000020d0000 rwxp 0 0:0 0  
1000020d0000-1000020e0000 rw-p 0 0:0 0  
1000020e0000-1000020f0000 rwxp 0 0:0 0  
1000020f0000-100002100000 rw-p 0 0:0 0  
100002100000-100002110000 rwxp 0 0:0 0  
100002110000-100002120000 rw-p 0 0:0 0  
100002120000-100002130000 rwxp 0 0:0 0  
100002130000-100002140000 rw-p 0 0:0 0  
100002140000-100002150000 rwxp 0 0:0 0  
100002150000-100002160000 rw-p 0 0:0 0  
100002160000-100002170000 rwxp 0 0:0 0  
100002170000-100002180000 rw-p 0 0:0 0  
100002180000-100002190000 rwxp 0 0:0 0  
100002190000-1000021a0000 rw-p 0 0:0 0  
1000021a0000-1000021b0000 rwxp 0 0:0 0  
1000021b0000-1000021c0000 rw-p 0 0:0 0  
1000021c0000-1000021d0000 rwxp 0 0:0 0  
1000021d0000-1000021e0000 rw-p 0 0:0 0  
1000021e0000-1000021f0000 rwxp 0 0:0 0  
1000021f0000-100002200000 rw-p 0 0:0 0  
100002200000-100002210000 rwxp 0 0:0 0  
100002210000-100002220000 rw-p 0 0:0 0  
100002220000-100002230000 rwxp 0 0:0 0  
100002230000-100002240000 rw-p 0 0:0 0  
100002240000-100002250000 rwxp 0 0:0 0  
100002250000-100002260000 rw-p 0 0:0 0  
3fffff800000-400000000000 rw-s 0 0:0 0  [stack]
RESULT: you need check McKernel Log & Dump MAPS.
TEST_SUITE: procfs
TEST_NUMBER: 8
ARGS: 
allocated: 0x00000020010000
dump /proc/28535/pagemap(offset:0x00000000010008):0x8800000000004286
RESULT: you need check McKernel Log & Dump PAGEMAP.
TEST_SUITE: procfs
TEST_NUMBER: 9
ARGS: 
output: /proc/stat
cpu0
cpu1
cpu2
cpu3
cpu4
cpu5
cpu6
cpu7
cpu8
cpu9
cpu10
cpu11
RESULT: you need check Dump STAT.
TEST_SUITE: procfs
TEST_NUMBER: 10
ARGS: 
output: /proc/28565/status
Pid:	28565
Uid:	0	0	0	0
Gid:	0	0	0	0
State:  R (running)
VmLck:          0 kB
Cpus_allowed:   fff
Cpus_allowed_list:	0-11
Mems_allowed:   00000000,00000000,00000000,00000000,00000000,00000000,00000000,0000000f
Mems_allowed_list:	0-3
RESULT: you need check Dump STATUS.
TEST_SUITE: procfs
TEST_NUMBER: 11
ARGS: 
output: /proc/28580/cmdline
/opt/ostestset/util/../bin/test_mck
RESULT: you need check Dump CMDLINE.
TEST_SUITE: procfs
TEST_NUMBER: 12
ARGS: 
RESULT: ok
TEST_SUITE: procfs
TEST_NUMBER: 13
ARGS: 
dump /proc/28610/pagemap(offset:0x00):0x800000000000000
RESULT: you need check McKernel Log & Dump PAGEMAP.
## fork_execve ##
TEST_SUITE: fork_execve
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
RESULT: ok
## shellscript ##
## echo command ##
Hello World
## pwd command ##
/opt/ostestset
## outside command(execve_app) ##
execve sample application done.
## for, seq, if-elif-else ##
$temp == 0
$temp != 5 && $temp != 0
$temp != 5 && $temp != 0
$temp != 5 && $temp != 0
$temp != 5 && $temp != 0
$temp == 5
## echo, cat, rm command ##
cat, rm command.
## shellfunction ##
## ls command ##
bin   core.host.28352 execve_app   large_bsslv14_large_pages   socket_TP
condition_monitor  core.madvise18.23399  freeze_thaw   lv07_read-write_with-glibc   lv15_continuous_execution  test_drv
core.23399   core.madvise19.23399  get_rusage   lv09_syscall_page_fault_forwqarding  make_arm64.sh      test_mck
core.host.27708    coredump_util hello_world   lv11_copy_on_write   shellscript   test_usr
core.host.27728    cpu_pa_info   inspect_mem_used  lv12_signal  show_affinity      util
shell end.(shellfunc called.)
## mremap_mmap_anon ##
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 1
ARGS: 
RESULT: mremap error.
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 3
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 4
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 5
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 6
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 7
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 8
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 9
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 10
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 11
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 12
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 13
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 14
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 15
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 16
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 100
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 101
ARGS: 
RESULT: mremap error.
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 102
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 103
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 104
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 105
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 106
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 107
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 108
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 109
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 110
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 111
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 112
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 113
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 114
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 115
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 116
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 200
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 201
ARGS: 
RESULT: mremap error.
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 202
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 203
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 204
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 205
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 206
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 207
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 208
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 209
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 210
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 211
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 212
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 213
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 214
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 215
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 216
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 300
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 301
ARGS: 
RESULT: mremap error.
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 302
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 303
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 304
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 305
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 306
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 307
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 308
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 309
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 310
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 311
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 312
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 313
ARGS: 
RESULT: ok
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 314
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 315
ARGS: 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 316
ARGS: 
## get_cpu_id ##
TEST_SUITE: get_cpu_id
TEST_NUMBER: 0
ARGS: 
[pid=29981, tid=29981] process running on cpu=0
RESULT: ok
sh: /opt/ostestset/util/kmsgcat.sh: No such file or directory
## setpgid ##
TEST_SUITE: setpgid
TEST_NUMBER: 0
ARGS: 
[child] pid=30013, pgid=23388
[parent] now rewrite child pgid
[child] pid=30013, pgid=30013
RESULT: ok
TEST_SUITE: setpgid
TEST_NUMBER: 1
ARGS: 
setpgid result:-1, errno:22 (expect error is "EINVAL"=22)
RESULT: ok
TEST_SUITE: setpgid
TEST_NUMBER: 2
ARGS: 
setpgid result:-1, errno:3 (expect error is "ESRCH"=3)
RESULT: ok
TEST_SUITE: setpgid
TEST_NUMBER: 3
ARGS: 
setpgid result:-1, errno:1 (expect error is "EPERM"=1)
RESULT: ok
TEST_SUITE: setpgid
TEST_NUMBER: 4
ARGS: -f /opt/ostestset/util/../bin/execve_app 
setpgid result:-1, errno:13 (expect error is "EACCES"=13)
execve sample application done.
RESULT: ok
## kill ##
TEST_SUITE: kill
TEST_NUMBER: 0
ARGS: -p 11 
Generate child process pid:30116, pgid:23388
Generate child process pid:30130, pgid:23388
Generate child process pid:30144, pgid:23388
Generate child process pid:30158, pgid:23388
Generate child process pid:30172, pgid:23388
Generate child process pid:30186, pgid:23388
Generate child process pid:30200, pgid:23388
Generate child process pid:30214, pgid:23388
Generate child process pid:30228, pgid:23388
Generate child process pid:30242, pgid:23388
Generate child process pid:30256, pgid:23388
wait for a few sec...
send signal to same pgids
[pid:30200, pgid:23388] Get signal.
[pid:30158, pgid:23388] Get signal.
[pid:30186, pgid:23388] Get signal.
[pid:30214, pgid:23388] Get signal.
[pid:30228, pgid:23388] Get signal.
[pid:30172, pgid:23388] Get signal.
[pid:30101, pgid:23388] Get signal.
[pid:30116, pgid:23388] Get signal.
[pid:30242, pgid:23388] Get signal.
[pid:30130, pgid:23388] Get signal.
[pid:30144, pgid:23388] Get signal.
[pid:30256, pgid:23388] Get signal.
RESULT: ok
TEST_SUITE: kill
TEST_NUMBER: 1
ARGS: -p 11 
Generate child process pid:30285, pgid:23388
Generate child process pid:30299, pgid:23388
Generate child process pid:30313, pgid:23388
Generate child process pid:30327, pgid:23388
Generate child process pid:30341, pgid:23388
Generate child process pid:30355, pgid:23388
Generate child process pid:30369, pgid:23388
Generate child process pid:30383, pgid:23388
Generate child process pid:30397, pgid:23388
Generate child process pid:30411, pgid:23388
Generate child process pid:30425, pgid:23388
wait for a few sec...
Send to all processes that have permission to send a signal.
[pid:30383, pgid:23388] Get signal.
[pid:30270, pgid:23388] Get signal.
[pid:30369, pgid:23388] Get signal.
[pid:30355, pgid:23388] Get signal.
[pid:30397, pgid:23388] Get signal.
[pid:30341, pgid:23388] Get signal.
[pid:30327, pgid:23388] Get signal.
[pid:30299, pgid:23388] Get signal.
[pid:30411, pgid:23388] Get signal.
[pid:30285, pgid:23388] Get signal.
[pid:30313, pgid:23388] Get signal.
[pid:30425, pgid:23388] Get signal.
RESULT: ok
TEST_SUITE: kill
TEST_NUMBER: 2
ARGS: -p 11 
Generate child process pid:30454, pgid:23388
Generate child process pid:30468, pgid:23388
Generate child process pid:30482, pgid:23388
Generate child process pid:30496, pgid:23388
Generate child process pid:30510, pgid:23388
Generate child process pid:30524, pgid:23388
Generate child process pid:30538, pgid:23388
Generate child process pid:30552, pgid:23388
Generate child process pid:30566, pgid:23388
Generate child process pid:30580, pgid:23388
Generate child process pid:30594, pgid:23388
wait for a few sec...
Set child process(pid:30454) pgid:23388 => 30454
Set child process(pid:30468) pgid:23388 => 30454
Set child process(pid:30482) pgid:23388 => 30454
Set child process(pid:30496) pgid:23388 => 30454
Set child process(pid:30510) pgid:23388 => 30454
Set child process(pid:30524) pgid:23388 => 30454
Set child process(pid:30538) pgid:23388 => 30454
Set child process(pid:30552) pgid:23388 => 30454
Set child process(pid:30566) pgid:23388 => 30454
Set child process(pid:30580) pgid:23388 => 30454
Set child process(pid:30594) pgid:23388 => 30454
send signal to target pgid(=30454)s
[pid:30524, pgid:30454] Get signal.
[pid:30552, pgid:30454] Get signal.
[pid:30580, pgid:30454] Get signal.
[pid:30468, pgid:30454] Get signal.
[pid:30482, pgid:30454] Get signal.
[pid:30496, pgid:30454] Get signal.
[pid:30566, pgid:30454] Get signal.
[pid:30538, pgid:30454] Get signal.
[pid:30594, pgid:30454] Get signal.
[pid:30454, pgid:30454] Get signal.
[pid:30510, pgid:30454] Get signal.
RESULT: ok
## sched_setaffinity ##
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 0
ARGS: -p 12 
RESULT: ok
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 1
ARGS: -p 12 
RESULT: ok
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 3
ARGS: -p 12 
sched_setaffinity result:-1, errno:14 (expect error is "EFAULT"=14)
RESULT: ok
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 4
ARGS: -p 12 
sched_setaffinity result:-1, errno:22 (expect error is "EINVAL"=22)
RESULT: ok
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 5
ARGS: 
sched_setaffinity result:-1, errno:22 (expect error is "EINVAL"=22)
RESULT: ok
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 6
ARGS: -p 12 
sched_setaffinity result:-1, errno:3 (expect error is "ESRCH"=3)
RESULT: ok
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 8
ARGS: -p 12 
[child] before migrate cpuid=1
[child] after migrate cpuid=11
RESULT: ok
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 12
ARGS: -p 12 
RESULT: ok
## sched_getaffinity ##
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 0
ARGS: -p 12 
RESULT: ok
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 1
ARGS: 
sched_getaffinity result:-1, errno:14 (expect error is "EFAULT"=14)
RESULT: ok
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 2
ARGS: -p 12 
sched_getaffinity result:-1, errno:22 (expect error is "EINVAL"=22)
RESULT: ok
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 3
ARGS: -p 12 
sched_getaffinity result:-1, errno:3 (expect error is "ESRCH"=3)
RESULT: ok
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 4
ARGS: -p 12 
[size=2] sched_getaffinity result:-1, errno:22
RESULT: ok
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 5
ARGS: -p 12 
RESULT: ok
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 6
ARGS: -p 17 -f /opt/ostestset/util/../bin/show_affinity -- -p 17 
==waiting for child process finish..==
========CHILD  PROCESS========
CPU_ISSET(0)=TRUE
CPU_ISSET(1)=TRUE
CPU_ISSET(2)=TRUE
CPU_ISSET(3)=TRUE
CPU_ISSET(4)=TRUE
CPU_ISSET(5)=TRUE
CPU_ISSET(6)=TRUE
CPU_ISSET(7)=TRUE
CPU_ISSET(8)=TRUE
CPU_ISSET(9)=TRUE
CPU_ISSET(10)=TRUE
CPU_ISSET(11)=TRUE
CPU_ISSET(12)=FALSE
CPU_ISSET(13)=FALSE
CPU_ISSET(14)=FALSE
CPU_ISSET(15)=FALSE
CPU_ISSET(16)=FALSE
========CHILD  PROCESS========
========EXECED PROCESS========
CPU_ISSET(0)=TRUE
CPU_ISSET(1)=TRUE
CPU_ISSET(2)=TRUE
CPU_ISSET(3)=TRUE
CPU_ISSET(4)=TRUE
CPU_ISSET(5)=TRUE
CPU_ISSET(6)=TRUE
CPU_ISSET(7)=TRUE
CPU_ISSET(8)=TRUE
CPU_ISSET(9)=TRUE
CPU_ISSET(10)=TRUE
CPU_ISSET(11)=TRUE
CPU_ISSET(12)=FALSE
CPU_ISSET(13)=FALSE
CPU_ISSET(14)=FALSE
CPU_ISSET(15)=FALSE
CPU_ISSET(16)=FALSE
========EXECED PROCESS========
==Please check affinity is taken over after execve==
RESULT: ok
## pthread_setaffinity ##
TEST_SUITE: pthread_setaffinity
TEST_NUMBER: 0
ARGS: -p 12 
RESULT: ok
## pthread_getaffinity ##
TEST_SUITE: pthread_getaffinity
TEST_NUMBER: 0
ARGS: -p 12 
RESULT: ok
## enosys ##
TEST_SUITE: enosys
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## getcpu ##
TEST_SUITE: getcpu
TEST_NUMBER: 0
ARGS: 
exp_cpu = 0, getcpu()cpu = 0
RESULT: ok
## getegid ##
TEST_SUITE: getegid
TEST_NUMBER: 0
ARGS: -e 1050 
getegid() = 0
setregid(1050, 1050) = 0, errno = 0
getegid() = 1050
RESULT: ok
## geteuid ##
TEST_SUITE: geteuid
TEST_NUMBER: 0
ARGS: -e 1000 
geteuid() = 0
setreuid(1000, 1000) = 0, errno = 0
geteuid() = 1000
RESULT: ok
## getgid ##
TEST_SUITE: getgid
TEST_NUMBER: 0
ARGS: -g 1050 
getgid() = 0
setgid(1050) = 0, errno = 0
getgid() = 1050
RESULT: ok
## getppid ##
TEST_SUITE: getppid
TEST_NUMBER: 0
ARGS: 
[child] ppid=30981
[parent] pid=30981
RESULT: ok
## getresgid ##
TEST_SUITE: getresgid
TEST_NUMBER: 0
ARGS: -r 1050 -e 1050 -s 1050 
getresgid(0, 0, 0) = 0, errno = 0
setresgid(1050, 1050, 1050) = 0, errno = 0
getresgid(1050, 1050, 1050) = 0, errno = 0
RESULT: ok
## getresuid ##
TEST_SUITE: getresuid
TEST_NUMBER: 0
ARGS: -r 1000 -e 1000 -s 1000 
getresuid(0, 0, 0) = 0, errno = 0
setresuid(1000, 1000, 1000) = 0, errno = 0
getresuid(1000, 1000, 1000) = 0, errno = 0
RESULT: ok
## getuid ##
TEST_SUITE: getuid
TEST_NUMBER: 0
ARGS: -u 1000 
getuid() = 0
setuid(1000) = 0, errno = 0
getuid() = 1000
RESULT: ok
## ipc ##
TEST_SUITE: ipc
TEST_NUMBER: 0
ARGS: 
curdir = /opt/ostestset
ftok => shm_key = 385963
shmget => shm_id = 164
shmat => shm_addr = 0x100000260000
shmdt => result = 0
shmctl => result = 0
RESULT: ok
## mincore ##
TEST_SUITE: mincore
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: mincore
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: mincore
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: mincore
TEST_NUMBER: 3
ARGS: 
RESULT: ok
## mlockall ##
TEST_SUITE: mlockall
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## msync ##
TEST_SUITE: msync
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: msync
TEST_NUMBER: 1
ARGS: 
RESULT: ok
## munlockall ##
TEST_SUITE: munlockall
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## page_fault_forwording ##
TEST_SUITE: page_fault_forwording
TEST_NUMBER: 0
ARGS: 
hello world
RESULT: ok
TEST_SUITE: page_fault_forwording
TEST_NUMBER: 1
ARGS: 
hello world
RESULT: ok
TEST_SUITE: page_fault_forwording
TEST_NUMBER: 2
ARGS: 
hello world
RESULT: ok
## process_vm_readv ##
TEST_SUITE: process_vm_readv
TEST_NUMBER: 0
ARGS: 
TEST_SUITE: process_vm_readv
TEST_NUMBER: 999
ARGS: -a 0x3ffffffffb78 -s 100 -e 0 
RESULT: ok
RESULT: ok
## process_vm_writev ##
TEST_SUITE: process_vm_writev
TEST_NUMBER: 0
ARGS: 
TEST_SUITE: process_vm_writev
TEST_NUMBER: 999
ARGS: -a 0x3ffffffffb70 -s 100 -e 1 
RESULT: ok
RESULT: ok
## sched_get_priority_max ##
TEST_SUITE: sched_get_priority_max
TEST_NUMBER: 0
ARGS: 
sched_get_priority_max(SCHED_RR) = 99, errno = 0
RESULT: ok
TEST_SUITE: sched_get_priority_max
TEST_NUMBER: 1
ARGS: 
sched_get_priority_max(SCHED_FIFO) = 99, errno = 0
RESULT: ok
TEST_SUITE: sched_get_priority_max
TEST_NUMBER: 2
ARGS: 
sched_get_priority_max(SCHED_OTHER) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_get_priority_max
TEST_NUMBER: 3
ARGS: 
sched_get_priority_max(SCHED_BATCH) = 0, errno = 0
RESULT: ok
## sched_get_priority_min ##
TEST_SUITE: sched_get_priority_min
TEST_NUMBER: 0
ARGS: 
sched_get_priority_min(SCHED_RR) = 1, errno = 0
RESULT: ok
TEST_SUITE: sched_get_priority_min
TEST_NUMBER: 1
ARGS: 
sched_get_priority_min(SCHED_FIFO) = 1, errno = 0
RESULT: ok
TEST_SUITE: sched_get_priority_min
TEST_NUMBER: 2
ARGS: 
sched_get_priority_min(SCHED_OTHER) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_get_priority_min
TEST_NUMBER: 3
ARGS: 
sched_get_priority_min(SCHED_BATCH) = 0, errno = 0
RESULT: ok
## sched_getparam ##
TEST_SUITE: sched_getparam
TEST_NUMBER: 0
ARGS: 
sched_getparam(31413, 0x3ffffffffbd0) = 0, errno = 0
sched_setscheduler(31413, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_getparam(31413, 0x3ffffffffbd0) = 0, errno = 0
sched_setparam(31413, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(31413, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_getparam
TEST_NUMBER: 1
ARGS: 
sched_getparam(0, 0x3ffffffffbd0) = 0, errno = 0
sched_setscheduler(31428, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_getparam(0, 0x3ffffffffbd0) = 0, errno = 0
sched_setparam(31428, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(0, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_getparam
TEST_NUMBER: 2
ARGS: 
sched_getparam(31443, 0x3ffffffffbd0) = 0, errno = 0
sched_setscheduler(31443, SCHED_FIFO, 0x3ffffffffbe0) = 0, errno = 0
sched_getparam(31443, 0x3ffffffffbd0) = 0, errno = 0
sched_setparam(31443, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(31443, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
## sched_getscheduler ##
TEST_SUITE: sched_getscheduler
TEST_NUMBER: 0
ARGS: 
sched_getscheduler(31458) = 0, errno = 0
sched_setscheduler(31458, SCHED_RR, 0x3ffffffffbd8) = 0, errno = 0
sched_getscheduler(31458) = 2, errno = 0
RESULT: ok
TEST_SUITE: sched_getscheduler
TEST_NUMBER: 1
ARGS: 
sched_getscheduler(0) = 0, errno = 0
sched_setscheduler(31473, SCHED_RR, 0x3ffffffffbd8) = 0, errno = 0
sched_getscheduler(0) = 2, errno = 0
RESULT: ok
## sched_rr_get_interval ##
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 0
ARGS: 
sched_setscheduler(31488, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(31488, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 10000
RESULT: ok
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 1
ARGS: 
sched_setscheduler(31503, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(0, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 10000
RESULT: ok
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 2
ARGS: 
sched_setscheduler(31518, SCHED_FIFO, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(31518, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 0
RESULT: ok
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 3
ARGS: 
sched_setscheduler(31533, SCHED_OTHER, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(31533, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 0
RESULT: ok
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 4
ARGS: 
sched_setscheduler(31549, SCHED_BATCH, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(31549, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 0
RESULT: ok
## sched_setparam ##
TEST_SUITE: sched_setparam
TEST_NUMBER: 0
ARGS: 
sched_setscheduler(31564, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_setparam(31564, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(31564, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_setparam
TEST_NUMBER: 1
ARGS: 
sched_setscheduler(31579, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_setparam(0, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(31579, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_setparam
TEST_NUMBER: 2
ARGS: 
sched_setscheduler(31594, SCHED_FIFO, 0x3ffffffffbe0) = 0, errno = 0
sched_setparam(31594, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(31594, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
## sched_setscheduler ##
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 0
ARGS: 
sched_setscheduler(31609, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(31609) = 2, errno = 0
sched_getparam(31609, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 1
ARGS: 
sched_setscheduler(0, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(31624) = 2, errno = 0
sched_getparam(31624, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 2
ARGS: 
sched_setscheduler(31639, SCHED_FIFO, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(31639) = 1, errno = 0
sched_getparam(31639, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 3
ARGS: 
sched_setscheduler(31654, SCHED_OTHER, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(31654) = 0, errno = 0
sched_getparam(31654, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 4
ARGS: 
sched_setscheduler(31669, SCHED_BATCH, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(31669) = 3, errno = 0
sched_getparam(31669, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
## setfsgid ##
TEST_SUITE: setfsgid
TEST_NUMBER: 0
ARGS: -f 1050 
setfsgid(1050) = 0, errno = 0
Gid:	0	0	0	1050
cmp 1050 == 1050 ? 
RESULT: ok
## setfsuid ##
TEST_SUITE: setfsuid
TEST_NUMBER: 0
ARGS: -f 1000 
setfsuid(1000) = 0, errno = 0
Uid:	0	0	0	1000
cmp 1000 == 1000 ? 
RESULT: ok
## setgid ##
TEST_SUITE: setgid
TEST_NUMBER: 0
ARGS: -g 1050 
setgid(1050) = 0, errno = 0
getgid() = 1050
RESULT: ok
## setregid ##
TEST_SUITE: setregid
TEST_NUMBER: 0
ARGS: -r 1050 -e 1050 
setregid(1050, 1050) = 0, errno = 0
getgid() = 1050
getegid() = 1050
RESULT: ok
## setresgid ##
TEST_SUITE: setresgid
TEST_NUMBER: 0
ARGS: -r 1050 -e 1050 -s 1050 
setresgid(1050, 1050, 1050) = 0, errno = 0
getresgid(1050, 1050, 1050) = 0, errno = 0
RESULT: ok
## setresuid ##
TEST_SUITE: setresuid
TEST_NUMBER: 0
ARGS: -r 1000 -e 1000 -s 1000 
setresuid(1000, 1000, 1000) = 0, errno = 0
getresuid(1000, 1000, 1000) = 0, errno = 0
RESULT: ok
## setreuid ##
TEST_SUITE: setreuid
TEST_NUMBER: 0
ARGS: -r 1000 -e 1000 
setreuid(1000, 1000) = 0, errno = 0
getuid() = 1000
geteuid() = 1000
RESULT: ok
## setrlimit ##
TEST_SUITE: setrlimit
TEST_NUMBER: 0
ARGS: 
  getrlimit(RLIMIT_AS, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_AS, 80000000, ffffffffffffffff)
  getrlimit(RLIMIT_AS, 80000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 1
ARGS: 
  getrlimit(RLIMIT_CORE, 0, ffffffffffffffff)
  setrlimit(RLIMIT_CORE, 90000000, ffffffffffffffff)
  getrlimit(RLIMIT_CORE, 90000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 2
ARGS: 
  getrlimit(RLIMIT_CPU, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_CPU, a0000000, ffffffffffffffff)
  getrlimit(RLIMIT_CPU, a0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 3
ARGS: 
  getrlimit(RLIMIT_DATA, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_DATA, b0000000, ffffffffffffffff)
  getrlimit(RLIMIT_DATA, b0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 4
ARGS: 
  getrlimit(RLIMIT_FSIZE, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_FSIZE, c0000000, ffffffffffffffff)
  getrlimit(RLIMIT_FSIZE, c0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 5
ARGS: 
  getrlimit(RLIMIT_LOCKS, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_LOCKS, d0000000, ffffffffffffffff)
  getrlimit(RLIMIT_LOCKS, d0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 6
ARGS: 
  getrlimit(RLIMIT_MEMLOCK, 1000000, 1000000)
  setrlimit(RLIMIT_MEMLOCK, a000, 1000000)
  getrlimit(RLIMIT_MEMLOCK, a000, 1000000)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 7
ARGS: 
  getrlimit(RLIMIT_MSGQUEUE, c8000, c8000)
  setrlimit(RLIMIT_MSGQUEUE, b000, c8000)
  getrlimit(RLIMIT_MSGQUEUE, b000, c8000)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 8
ARGS: 
  getrlimit(RLIMIT_NICE, 0, 0)
  setrlimit(RLIMIT_NICE, 0, 0)
  getrlimit(RLIMIT_NICE, 0, 0)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 9
ARGS: 
  getrlimit(RLIMIT_NOFILE, 400, 1000)
  setrlimit(RLIMIT_NOFILE, 600, 1000)
  getrlimit(RLIMIT_NOFILE, 600, 1000)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 10
ARGS: 
  getrlimit(RLIMIT_NPROC, 7ee3, 7ee3)
  setrlimit(RLIMIT_NPROC, 700, 7ee3)
  getrlimit(RLIMIT_NPROC, 700, 7ee3)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 11
ARGS: 
  getrlimit(RLIMIT_RSS, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_RSS, e0000000, ffffffffffffffff)
  getrlimit(RLIMIT_RSS, e0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 12
ARGS: 
  getrlimit(RLIMIT_RTPRIO, 0, 0)
  setrlimit(RLIMIT_RTPRIO, 0, 0)
  getrlimit(RLIMIT_RTPRIO, 0, 0)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 13
ARGS: 
  getrlimit(RLIMIT_SIGPENDING, 7ee3, 7ee3)
  setrlimit(RLIMIT_SIGPENDING, 100, 7ee3)
  getrlimit(RLIMIT_SIGPENDING, 100, 7ee3)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 14
ARGS: 
  getrlimit(RLIMIT_STACK, 800000, ffffffffffffffff)
  setrlimit(RLIMIT_STACK, 800000, ffffffffffffffff)
  getrlimit(RLIMIT_STACK, 800000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: setrlimit
TEST_NUMBER: 15
ARGS: 
setrlimit() = -1, errno = 22
RESULT: ok
## setuid ##
TEST_SUITE: setuid
TEST_NUMBER: 0
ARGS: -u 1000 
setuid(1000) = 0, errno = 0
getuid() = 1000
RESULT: ok
## waitid ##
TEST_SUITE: waitid
TEST_NUMBER: 0
ARGS: 
waitid()=0, errno=0
RESULT: ok
TEST_SUITE: waitid
TEST_NUMBER: 1
ARGS: -p 10 
[child:32102] setpgid(32102, 32102) = 0
[child:32116] setpgid(32116, 32116) = 0
[child:32088] setpgid(32088, 32088) = 0
[child:32144] setpgid(32144, 32144) = 0
[parent:32073] waitid(P_PGID, 23388) called.
[child:32130] setpgid(32130, 32130) = 0
[child:32088, 32088] sleep 100+0msec done.
[child:32102, 32102] sleep 100+100msec done.
[child:32116, 32116] sleep 100+200msec done.
[child:32130, 32130] sleep 100+300msec done.
[child:32144, 32144] sleep 100+400msec done.
[child:32158, 23388] sleep 100+500msec done.
[parent:32073] waitid(P_PGID, 23388) returned. EXTED pid = 32158
[parent:32073] waitid()=0, errno=0
[parent:32073] waitid(P_PGID, 23388) called.
[child:32172, 23388] sleep 100+600msec done.
[parent:32073] waitid(P_PGID, 23388) returned. EXTED pid = 32172
[parent:32073] waitid()=0, errno=0
[parent:32073] waitid(P_PGID, 23388) called.
[child:32186, 23388] sleep 100+700msec done.
[parent:32073] waitid(P_PGID, 23388) returned. EXTED pid = 32186
[parent:32073] waitid()=0, errno=0
[parent:32073] waitid(P_PGID, 23388) called.
[child:32200, 23388] sleep 100+800msec done.
[parent:32073] waitid(P_PGID, 23388) returned. EXTED pid = 32200
[parent:32073] waitid()=0, errno=0
[parent:32073] waitid(P_PGID, 23388) called.
[child:32214, 23388] sleep 100+900msec done.
[parent:32073] waitid(P_PGID, 23388) returned. EXTED pid = 32214
[parent:32073] waitid()=0, errno=0
RESULT: ok
TEST_SUITE: waitid
TEST_NUMBER: 2
ARGS: -p 11 
[parent:32228] waitid(P_ALL) called.
[child:32243] sleep 100+0msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32243
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32257] sleep 100+100msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32257
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32271] sleep 100+200msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32271
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32285] sleep 100+300msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32285
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32299] sleep 100+400msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32299
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32313] sleep 100+500msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32313
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32327] sleep 100+600msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32327
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32341] sleep 100+700msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32341
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32355] sleep 100+800msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32355
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32369] sleep 100+900msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32369
[parent:32228] waitid()=0, errno=0
[parent:32228] waitid(P_ALL) called.
[child:32383] sleep 100+1000msec done.
[parent:32228] waitid(P_ALL) returned. EXTED pid = 32383
[parent:32228] waitid()=0, errno=0
RESULT: ok
## signalfd4 ##
TEST_SUITE: signalfd4
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: signalfd4
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: signalfd4
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## gettimeofday ##
TEST_SUITE: gettimeofday
TEST_NUMBER: 0
ARGS: 
RESULT: settimeofday error.
## sched_yield ##
TEST_SUITE: sched_yield
TEST_NUMBER: 0
ARGS: 
[child] running core 1
[parent] running core 0
[parent] child process migrate/bind to core 0
[parent] parent process bind to core 0
[parent] send sched_yield.
[child] before migrate prevcore 1, nowcore 0
[parent] End process.
[child] End process.
RESULT: check end order, [end child] -> [end parent]
## set_tid_address ##
TEST_SUITE: set_tid_address
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## getrusage ##
TEST_SUITE: getrusage
TEST_NUMBER: 0
ARGS: 
------------------------------
show_rusage():
  ru_utime=0s + 42550us
  ru_stime=0s + 81188us
  ru_maxrss=1984
------------------------------
allocation memory 16777216 byte(16384 KiB)
alarm 2 seconds wait.
sleep 2 seconds wait.
------------------------------
show_rusage():
  ru_utime=2s + 51017us
  ru_stime=2s + 139081us
  ru_maxrss=18432
------------------------------
free memory 16777216 byte(16384 KiB)
------------------------------
show_rusage():
  ru_utime=2s + 51580us
  ru_stime=2s + 183970us
  ru_maxrss=18432
------------------------------
RESULT: you need check rusage value
TEST_SUITE: getrusage
TEST_NUMBER: 1
ARGS: 
------------------------------
show_rusage():
  ru_utime=0s + 0us
  ru_stime=0s + 0us
  ru_maxrss=0
------------------------------
allocation memory 16777216 byte(16384 KiB)
alarm 2 seconds wait.
sleep 2 seconds wait.
free memory 16777216 byte(16384 KiB)
------------------------------
show_rusage():
  ru_utime=2s + 14479us
  ru_stime=2s + 62928us
  ru_maxrss=20352
------------------------------
RESULT: you need check rusage value
TEST_SUITE: getrusage
TEST_NUMBER: 2
ARGS: 
[parent before]
------------------------------
show_rusage():
  ru_utime=0s + 41982us
  ru_stime=0s + 81231us
  ru_maxrss=1984
------------------------------
[child before]
------------------------------
show_rusage():
  ru_utime=0s + 356us
  ru_stime=0s + 801us
  ru_maxrss=2048
------------------------------
allocation memory 16777216 byte(16384 KiB)
alarm 2 seconds wait.
sleep 2 seconds wait.
free memory 16777216 byte(16384 KiB)
[child after]
------------------------------
show_rusage():
  ru_utime=2s + 10698us
  ru_stime=2s + 74083us
  ru_maxrss=18560
------------------------------
[parent after]
------------------------------
show_rusage():
  ru_utime=0s + 44876us
  ru_stime=4s + 181210us
  ru_maxrss=18560
------------------------------
RESULT: you need check rusage value
TEST_SUITE: getrusage
TEST_NUMBER: 3
ARGS: 
RESULT: ok
TEST_SUITE: getrusage
TEST_NUMBER: 4
ARGS: 
RESULT: ok
## tkill ##
TEST_SUITE: tkill
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: tkill
TEST_NUMBER: 1
ARGS: 
[parent]sleep a few sec...
[child]pid=32605, tid=32619
[parent]wake up
Terminate by signal 10
/opt/ostestset/util/run_testset_postk.sh: line 1125: 32605 User defined signal 1   ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s tkill -n 1
## times ##
TEST_SUITE: times
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: times
TEST_NUMBER: 1
ARGS: 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 1125: 32635 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s times -n 1
## nanosleep ##
TEST_SUITE: nanosleep
TEST_NUMBER: 0
ARGS: 
It has passed for      3.0 sec.
RESULT: ok
TEST_SUITE: nanosleep
TEST_NUMBER: 1
ARGS: 
Remaining sleep time is 7.991569776
RESULT: ok
TEST_SUITE: nanosleep
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: nanosleep
TEST_NUMBER: 3
ARGS: 
RESULT: ok
## getitimer ##
TEST_SUITE: getitimer
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: getitimer
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: getitimer
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## setitimer ##
TEST_SUITE: setitimer
TEST_NUMBER: 0
ARGS: 
testing ITIMER_REAL, please wait...
old sec:999 usec:998583, init sec:1000 usec:100
testing ITIMER_VIRTUAL, please wait...
old sec:999 usec:999979, init sec:1000 usec:100
testing ITIMER_PROF, please wait...
old sec:999 usec:999220, init sec:1000 usec:100
RESULT: ok
TEST_SUITE: setitimer
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: setitimer
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: setitimer
TEST_NUMBER: 3
ARGS: 
testing ITIMER_REAL, please wait...
testing ITIMER_VIRTUAL, please wait...
testing ITIMER_PROF, please wait...
RESULT: ok
## clock_gettime ##
TEST_SUITE: clock_gettime
TEST_NUMBER: 0
ARGS: 
[INFO] Spending cpu time, please wait...
REALTIME            : 1547113006.417122288
REALTIME_ALARM      : Invalid argument (expected)
REALTIME_COARSE     : 1547113006.412830000
MONOTONIC           : 16249.337968384
MONOTONIC_COARSE    : 16249.328279744
MONOTONIC_RAW       : 16249.339433552
BOOTTIME            : 16249.340771280
BOOTTIME_ALARM      : Invalid argument (expected)
PROCESS_CPUTIME_ID  : 13.629872976
THREAD_CPUTIME_ID   : 13.630876832
RESULT: ok
TEST_SUITE: clock_gettime
TEST_NUMBER: 1
ARGS: 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 1125:   379 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s clock_gettime -n 1
TEST_SUITE: clock_gettime
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## clock_getres ##
TEST_SUITE: clock_getres
TEST_NUMBER: 0
ARGS: 
[INFO] Show clocks' resolution.
REALTIME            : 0.000000001
REALTIME_ALARM      : Invalid argument (expected)
REALTIME_COARSE     : 0.010000000
MONOTONIC           : 0.000000001
MONOTONIC_COARSE    : 0.010000000
MONOTONIC_RAW       : 0.000000001
BOOTTIME            : 0.000000001
BOOTTIME_ALARM      : Invalid argument (expected)
PROCESS_CPUTIME_ID  : 0.000000001
THREAD_CPUTIME_ID   : 0.000000001
RESULT: ok
TEST_SUITE: clock_getres
TEST_NUMBER: 1
ARGS: 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 1125:   424 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s clock_getres -n 1
TEST_SUITE: clock_getres
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## readlinkat ##
TEST_SUITE: readlinkat
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/tempfile -l /tmp/templink 
[INFO]readlinkat test
 target file:/opt/ostestset/util/tempfile
 link file:/tmp/templink
 buffer data:/opt/ostestset/util/tempfile
RESULT: ok
## fpregs ##
TEST_SUITE: fpregs
TEST_NUMBER: 0
ARGS: 
q00: 0x0000000000000000_0000000000000000
q01: 0x0a6425203a524542_4d554e5f54534554
q02: 0x0000203a53475241_0000000000000000
q03: 0x0000000000000000_0000000000000000
q04: 0xffff000000000000_ffffffffffffffff
q05: 0x0000040000000000_0000000000000000
q06: 0x4010000000000000_4010040140100401
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_0000000000000000
q09: 0x0000000000000000_0000000000000000
q10: 0x0000000000000000_0000000000000000
q11: 0x0000000000000000_0000000000000000
q12: 0x0000000000000000_0000000000000000
q13: 0x0000000000000000_0000000000000000
q14: 0x0000000000000000_0000000000000000
q15: 0x0000000000000000_0000000000000000
q16: 0x5000555504000000_5000555504000000
q17: 0x00000000a0081000_0000a81080400000
q18: 0x0000000000000000_8020080000100000
q19: 0x0000000000000000_0000000000000000
q20: 0x0000000000000000_0000000000000000
q21: 0x0000000000000000_0000000000000000
q22: 0x0000000000000000_0000000000000000
q23: 0x0000000000000000_0000000000000000
q24: 0x0000000000000000_0000000000000000
q25: 0x0000000000000000_0000000000000000
q26: 0x0000000000000000_0000000000000000
q27: 0x0000000000000000_0000000000000000
q28: 0x0000000000000000_0000000000000000
q29: 0x0000000000000000_0000000000000000
q30: 0x0000000000000000_0000000000000000
q31: 0x0000000000000000_0000000000000000
RESULT: ok
TEST_SUITE: fpregs
TEST_NUMBER: 1
ARGS: 
[parent] before fork.
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
[child] after fork.
q00: 0x0000000000000000_0000000000000000
q01: 0x5d746e657261705b_000a786c36313025
q02: 0x0000002e6b726f66_2065726f66656220
q03: 0x0000000000000000_ff00000000000000
q04: 0xffffff0000000000_0000000000000000
q05: 0x0000000000000000_4000000000000001
q06: 0x4010040000000000_0000000000000000
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0x5400000000004001_5400000000004001
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
RESULT: ok
TEST_SUITE: fpregs
TEST_NUMBER: 2
ARGS: 
[parent] before pthread_create.
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
[child] after pthread_create.
q00: 0x0000000000000000_0000000000000000
q01: 0x205d646c6968635b_000a786c36313025
q02: 0x72635f6461657268_7470207265746661
q03: 0x0000000000000000_ff00000000000000
q04: 0x0000000000000000_0000000000000000
q05: 0x0000000000000000_4000000000000001
q06: 0x0000000000000000_0000000000000000
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0x0000000000004001_0000000000004001
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
RESULT: ok
TEST_SUITE: fpregs
TEST_NUMBER: 3
ARGS: 
before execve.
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
=== look at the contents of the register since run execve. ===
TEST_SUITE: fpregs
TEST_NUMBER: 0
ARGS: 
q00: 0x0000000000000000_0000000000000000
q01: 0x0a6425203a524542_4d554e5f54534554
q02: 0x0000203a53475241_0000000000000000
q03: 0x0000000000000000_0000000000000000
q04: 0xffff000000000000_ffffffffffffffff
q05: 0x0000040000000000_0000000000000000
q06: 0x4010000000000000_4010040140100401
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_0000000000000000
q09: 0x0000000000000000_0000000000000000
q10: 0x0000000000000000_0000000000000000
q11: 0x0000000000000000_0000000000000000
q12: 0x0000000000000000_0000000000000000
q13: 0x0000000000000000_0000000000000000
q14: 0x0000000000000000_0000000000000000
q15: 0x0000000000000000_0000000000000000
q16: 0x5000555504000000_5000555504000000
q17: 0x00000000a0081000_0000a81080400000
q18: 0x0000000000000000_8020080000100000
q19: 0x0000000000000000_0000000000000000
q20: 0x0000000000000000_0000000000000000
q21: 0x0000000000000000_0000000000000000
q22: 0x0000000000000000_0000000000000000
q23: 0x0000000000000000_0000000000000000
q24: 0x0000000000000000_0000000000000000
q25: 0x0000000000000000_0000000000000000
q26: 0x0000000000000000_0000000000000000
q27: 0x0000000000000000_0000000000000000
q28: 0x0000000000000000_0000000000000000
q29: 0x0000000000000000_0000000000000000
q30: 0x0000000000000000_0000000000000000
q31: 0x0000000000000000_0000000000000000
RESULT: ok
TEST_SUITE: fpregs
TEST_NUMBER: 4
ARGS: 
[parent] before raise signal.
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
[parent] after raise signal.
q00: 0x0000000000000000_0000000000000000
q01: 0x30203a6432302571_000000002e726f72
q02: 0x000a786c36313025_5f786c3631302578
q03: 0x0000000000000000_ffffffff00000000
q04: 0xff00000000000000_0000000000000000
q05: 0x0000000000000400_4010040100000000
q06: 0x4000000000000001_0000000000000400
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0x4001000400045500_4001000400045500
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
RESULT: ok
TEST_SUITE: fpregs
TEST_NUMBER: 5
ARGS: -p 12 
[child] before migrate. (cpuid=1)
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0xffffffffffffffff_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
[child] after migrate. (cpuid=11)
q00: 0x0000000000000000_0000000000000000
q01: 0x28202e6574617267_696d207265746661
q02: 0x0000000000000a29_64253d6469757063
q03: 0x0000000000000000_0000000000000000
q04: 0xffffffffffff0000_0000000000000000
q05: 0x0000000000000000_0000000000000000
q06: 0x4010040140100000_0010000000000000
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0x5550100000000000_5550100000000000
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
RESULT: ok
## binfmt ##
TEST_SUITE: get_cpu_id
TEST_NUMBER: 0
ARGS: 
[pid=614, tid=614] process running on cpu=0
RESULT: ok
## time_sharing ##
TEST_SUITE: time_sharing
TEST_NUMBER: 0
ARGS: 
[child] running core 1
[parent] running core 0
[parent] child process migrate/bind to core 0
[parent] parent process bind to core 0
[child] before migrate prevcore 1, nowcore 0
[child] in loop count=0
[parent] in loop count=0
[child] in loop count=1
[parent] in loop count=1
[child] in loop count=2
[parent] in loop count=2
[child] in loop count=3
[parent] in loop count=3
[child] in loop count=4
[parent] in loop count=4
RESULT: check run order, [child] -> [parent] -> [child] -> [parent] -> ...
## writecombine ##
TEST_SUITE: writecombine
TEST_NUMBER: 0
ARGS: -d /dev/test_mck/writecombine 
RESULT: ok
## get_mempolicy ##
TEST_SUITE: get_mempolicy
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 5
ARGS: -n 4 
maxnode = 4
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 6
ARGS: -n 4 
maxnode = 4
nodemask = 15
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 7
ARGS: -n 4 
maxnode = 4
nodemask = 15
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 8
ARGS: 
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 13
ARGS: 
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 14
ARGS: 
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 15
ARGS: 
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 16
ARGS: 
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 17
ARGS: -n 4 
node ID = 0
RESULT: ok
TEST_SUITE: get_mempolicy
TEST_NUMBER: 20
ARGS: 
RESULT: ok
## set_mempolicy ##
TEST_SUITE: set_mempolicy
TEST_NUMBER: 1
ARGS: -n 4 
RESULT: ok
TEST_SUITE: set_mempolicy
TEST_NUMBER: 3
ARGS: -n 4 
set_node_mask = 3
RESULT: ok
TEST_SUITE: set_mempolicy
TEST_NUMBER: 5
ARGS: -n 4 
set_node_mask = 12
RESULT: ok
TEST_SUITE: set_mempolicy
TEST_NUMBER: 6
ARGS: -n 4 
set_node_mask = 3
RESULT: ok
TEST_SUITE: set_mempolicy
TEST_NUMBER: 8
ARGS: 
RESULT: ok
TEST_SUITE: set_mempolicy
TEST_NUMBER: 11
ARGS: -n 4 
RESULT: ok
TEST_SUITE: set_mempolicy
TEST_NUMBER: 13
ARGS: -n 4 
sys_max_node = 524288
RESULT: ok
TEST_SUITE: set_mempolicy
TEST_NUMBER: 14
ARGS: -n 4 
set_node_mask = 3
RESULT: ok
TEST_SUITE: set_mempolicy
TEST_NUMBER: 17
ARGS: 
RESULT: ok
## mbind ##
TEST_SUITE: mbind
TEST_NUMBER: 1
ARGS: -n 4 
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 3
ARGS: -n 4 
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 5
ARGS: -n 4 
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 9
ARGS: -n 4 
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 12
ARGS: -n 4 
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 14
ARGS: -n 4 
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 15
ARGS: -n 4 
region 0
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 1
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 2
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 3
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 4
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 5
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 6
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 16
ARGS: -n 4 
region 0
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 1
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 2
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 3
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 4
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 5
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 6
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 20
ARGS: -n 4 
region 0
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 1
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 2
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 3
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 4
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 5
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 6
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 24
ARGS: -n 4 
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 26
ARGS: -n 4 
nodemask = 0
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 28
ARGS: -n 4 
RESULT: ok
TEST_SUITE: mbind
TEST_NUMBER: 30
ARGS: 
RESULT: ok
## track syscalls ##
TEST_SUITE: track_syscalls
TEST_NUMBER: 0
ARGS: 
RESULT: ok
[  0]: PID: 1510 (271, "process_vm_writev"):      1      2k offl:      0      0k ( 6.40%)
## msr instruction emulation  ##
TEST_SUITE: iemul
TEST_NUMBER: 0
ARGS: 
MIDR_EL1            : 0x00000000411fd070
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 1
ARGS: 
MPIDR_EL1           : 0x0000000080000000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 2
ARGS: 
REVIDR_EL1          : 0x0000000000000000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 3
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1573 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 4
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1588 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 5
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1603 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 6
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1619 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 7
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1634 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 8
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1649 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 9
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1664 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 10
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1679 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 11
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1694 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 12
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1710 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 13
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1725 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 14
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1740 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 15
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1755 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 16
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1770 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 17
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1785 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 18
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1800 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 19
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  1815 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: iemul
TEST_NUMBER: 20
ARGS: 
ID_AA64PFR0_EL1     : 0x0000000100110011
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 21
ARGS: 
ID_AA64PFR1_EL1     : 0x0000000000000000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 22
ARGS: 
ID_AA64DFR0_EL1     : 0x0000000000000006
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 23
ARGS: 
ID_AA64DFR1_EL1     : 0x0000000000000000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 24
ARGS: 
ID_AA64ISAR0_EL1    : 0x0000000010212120
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 25
ARGS: 
ID_AA64ISAR1_EL1    : 0x0000000000010000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 26
ARGS: 
ID_AA64MMFR0_EL1    : 0x00000000ff000000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 27
ARGS: 
ID_AA64MMFR1_EL1    : 0x0000000000000000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 28
ARGS: 
ID_AA64MMFR2_EL1    : 0x0000000000000000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 29
ARGS: 
CTR_EL0             : 0x000000008444c004
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 30
ARGS: 
DCZID_EL0           : 0x0000000000000004
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 31
ARGS: 
CNTFRQ_EL0          : 0x0000000003b9aca0
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 32
ARGS: 
ID_AA64ZFR0_EL1     : 0x0000000000000000
RESULT: ok
TEST_SUITE: iemul
TEST_NUMBER: 33
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047:  2025 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
## fstatat  ##
TEST_SUITE: fstatat
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: fstatat
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: fstatat
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## freeze_thaw ##
## freeze_thaw test#0 (a.out -> freeze -> thaw) ##
[client] Connect to 127.0.0.1
[server] Waiting for connection ...
[client] Trying to connect to 127.0.0.1: 
[client] sending...[0]
[server] Connected from 127.0.0.1
[server] received[0]: This is a test
sleep 1 second elapsed.
sleep 2 second elapsed.
sleep 3 second elapsed.
[client] sending...[1]
[server] received[1]: This is a test
[client] sending...[2]
[server] received[2]: This is a test
[client] sending...[3]
[server] received[3]: This is a test
[client] sending...[4]
[server] received[4]: This is a test
[client] sending...[5]
[server] received[5]: This is a test
[client] sending...[6]
[server] received[6]: This is a test
[client] sending...[7]
[server] received[7]: This is a test
[client] sending...[8]
[server] received[8]: This is a test
[client] sending...[9]
[server] received[9]: This is a test
## freeze_thaw test#1 (freeze -> a.out -> thaw) ##
sleep 1 second elapsed.
sleep 2 second elapsed.
sleep 3 second elapsed.
Hello World
## freeze_thaw test#2 (freeze -> a.out -> kill a.out -> thaw) ##
/opt/ostestset/util/run_testset_postk.sh: line 1125:  2132 Terminated              ${mcexec} $execve_comm "${app_dir}/glibc_hello_world"
Hello World
## cpu_pa_info ##
## cpu_pa_info test#0 ##
#  0 : set/enable/get/disable/destroy check config(0x00-0x3f). (for each)
##### start event#0x00 #####
  event#0x00 (SW_INCR)
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed  to event#0x0
##### end              #####

RESULT:NG.
## cpu_pa_info test#2 ##
#  2 : set/enable/get/disable/destroy check disabled flags on.
##### start event#0x11 #####
  event#0x11 (CPU_CYCLES)
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed  to event#0x11
##### end              #####

RESULT:NG.
## cpu_pa_info test#3 ##
#  3 : set/enable/get/disable/destroy check pinned flags on.
##### start event#0x11 #####
  event#0x11 (CPU_CYCLES)
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed  to event#0x11
##### end              #####

RESULT:NG.
## cpu_pa_info test#4 ##
#  4 : set/enable/get/disable/destroy check exclude flags on.
##### start event#0x11 #####
##### exclude_user:1, exclude_kernel:0, exclude_hv:0, exclude_idle:0 #####
  event#0x11 (CPU_CYCLES)
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed  to event#0x11
##### end              #####

RESULT:NG.
## cpu_pa_info test#5 ##
#  5 : set/enable/get/disable/destroy check config(0x00-0x07). (8 counter at once)
##### start event#0x00-0x07 #####
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed.
##### end                   #####

RESULT:NG.
## get_rusage ##
## get_rusage test#0 (no user process) ##
show rusage:
  memory_stat_rss[0] : 0x1805f0000
  memory_stat_mapped_file is all 0x0
  memory_max_usage : 0x3fefe0000
  memory_kmem_usage : 0x3c40000
  memory_kmem_max_usage : 0x57f0000
  memory_numa_stat[0] : 0x2f0000
  cpuacct_stat_system : 0xf248
  cpuacct_stat_user : 0xab10
  cpuacct_usage : 0x65f67ce600
  cpuacct_usage_percpu[0] : 0x3291c0c350
  cpuacct_usage_percpu[1] : 0x267b3b9b20
  cpuacct_usage_percpu[2] : 0x1eea701c0
  cpuacct_usage_percpu[3] : 0x172d5dad0
  cpuacct_usage_percpu[4] : 0x17187d990
  cpuacct_usage_percpu[5] : 0x160827db0
  cpuacct_usage_percpu[6] : 0x13bdad600
  cpuacct_usage_percpu[7] : 0x13e04eaa0
  cpuacct_usage_percpu[8] : 0x12a58e040
  cpuacct_usage_percpu[9] : 0x10ae869f0
  cpuacct_usage_percpu[10] : 0x10baaa880
  cpuacct_usage_percpu[11] : 0xfb2da070
  num_threads : 0x0
  max_num_threads : 0xc
## get_rusage test#1 (user multi thread process rinning) ##
[client] Connect to 127.0.0.1
[server] Waiting for connection ...
[client] Trying to connect to 127.0.0.1: 
[client] sending...[0]
[server] Connected from 127.0.0.1
[server] received[0]: This is a test
show rusage:
  memory_stat_rss[0] : 0x180940000
  memory_stat_mapped_file[0] : 0x150000
  memory_max_usage : 0x3fefe0000
  memory_kmem_usage : 0x4100000
  memory_kmem_max_usage : 0x57f0000
  memory_numa_stat[0] : 0x780000
  memory_numa_stat[1] : 0x10000
  cpuacct_stat_system : 0xf252
  cpuacct_stat_user : 0xab14
  cpuacct_usage : 0x65f8abf200
  cpuacct_usage_percpu[0] : 0x3293c1efa0
  cpuacct_usage_percpu[1] : 0x267b697ad0
  cpuacct_usage_percpu[2] : 0x1eea701c0
  cpuacct_usage_percpu[3] : 0x172d5dad0
  cpuacct_usage_percpu[4] : 0x17187d990
  cpuacct_usage_percpu[5] : 0x160827db0
  cpuacct_usage_percpu[6] : 0x13bdad600
  cpuacct_usage_percpu[7] : 0x13e04eaa0
  cpuacct_usage_percpu[8] : 0x12a58e040
  cpuacct_usage_percpu[9] : 0x10ae869f0
  cpuacct_usage_percpu[10] : 0x10baaa880
  cpuacct_usage_percpu[11] : 0xfb2da070
  num_threads : 0x2
  max_num_threads : 0xc
[client] sending...[1]
[server] received[1]: This is a test
[client] sending...[2]
[server] received[2]: This is a test
[client] sending...[3]
[server] received[3]: This is a test
[client] sending...[4]
[server] received[4]: This is a test
[client] sending...[5]
[server] received[5]: This is a test
[client] sending...[6]
[server] received[6]: This is a test
[client] sending...[7]
[server] received[7]: This is a test
[client] sending...[8]
[server] received[8]: This is a test
[client] sending...[9]
[server] received[9]: This is a test
## force_exit ##
TEST_SUITE: force_exit
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile -d /dev/test_mck/mmap_dev 
read 1 byte (a(97))
mmap(0x100000260000)
send SIGKILL for mcexec.
rmmod test_drv
remove /dev/test_mck
rmmod /opt/ostestset/util/../bin/test_mck.ko
/opt/ostestset/util/run_testset_postk.sh: line 1133:  2174 Killed                  ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s force_exit -n 0 -- -f $mmapfile_name -d /dev/test_mck/mmap_dev
shutdown_mck... (mcctrl.ko no unload, and reboot mck.)
[destroy:0]

keep mcctrl.ko insmod.

[rmmod] ihk_smp

keep ihk.ko insmod.

use NUMA-preset 5 memory:   4 GiB, numa: 4 separation
[insmod] ihk (skip)

[insmod] ihk_smp

use NUMA-preset 5 memory:   4 GiB, numa: 4 separation
----------

image: /opt/ppos/smp-arm64/kernel/mckernel.img
cpu: 4,5,6,7,8,9,10,11,12,13,14,15
mem: 4096M@0,4096M@1,4096M@2,4096M@3
----------
already insmod mcctrl.ko, SKIP.

[create]

[alloc-cpu]

[ikc_map setting]

[alloc-mem]

[kargs]

[load]

[boot]

Hello World
[destroy:0]

[rmmod]mcctrl.ko

[rmmod] ihk_smp

[rmmod] ihk

restore ulimit -S -c 0
restore core => /proc/sys/kernel/core_pattern
restore 7	4	1	7 => /proc/sys/kernel/printk
useradd: user 'mck_test' already exists
use uid:1000 gid:1050
10+0 records in
10+0 records out
10485760 bytes (10 MB, 10 MiB) copied, 0.0336581 s, 312 MB/s
set 4 4 1 7 => /proc/sys/kernel/printk
set core.host.%p => /proc/sys/kernel/core_pattern
set ulimit -S -c 0
boot McKernel, HOST core is #0-3
use NUMA-preset 5 memory:   4 GiB, numa: 4 separation
[insmod] ihk

[insmod] ihk_smp

use NUMA-preset 5 memory:   4 GiB, numa: 4 separation
----------

image: /opt/ppos/smp-arm64/kernel/mckernel.img
cpu: 4,5,6,7,8,9,10,11,12,13,14,15
mem: 4096M@0,4096M@1,4096M@2,4096M@3
----------
[insmod]mcctrl.ko

[create]

[alloc-cpu]

[ikc_map setting]

[alloc-mem]

[kargs]

[load]

[boot]

get McKernel memory size.
mck_max_mem_size     :17179869184
mck_max_node_mem_size:4290772992
insmod test_drv
insmod /opt/ostestset/util/../bin/test_mck.ko
create charcter device /dev/test_mck/mmap_dev(242:0)
create charcter device /dev/test_mck/mmap_dev2(242:1)
create charcter device /dev/test_mck/writecombine(242:2)
## hello_world ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/exit_group 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/hello_world 
Hello World
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/glibc_hello_world 
Hello World
## lv07 ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-st -- /opt/ostestset/util/ostype 
0:Linux

TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 
use default thread_num = 2.
0:Linux

1:Linux

TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 1 
use thread_num = 1.
0:Linux

0a1
> 0:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 2 
use thread_num = 2.
0:Linux

1:Linux

1a2
> 1:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 3 
use thread_num = 3.
0:Linux

1:Linux

2:Linux

2a3
> 2:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 4 
use thread_num = 4.
0:Linux

2:Linux

1:Linux

3:Linux

3a4
> 3:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 5 
use thread_num = 5.
1:Linux

2:Linux

0:Linux

3:Linux

4:Linux

4a5
> 4:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 6 
use thread_num = 6.
1:Linux

2:Linux

3:Linux

0:Linux

4:Linux

5:Linux

5a6
> 5:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 7 
use thread_num = 7.
1:Linux

2:Linux

3:Linux

5:Linux

4:Linux

0:Linux

6:Linux

6a7
> 6:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 8 
use thread_num = 8.
1:Linux

2:Linux

3:Linux

5:Linux

4:Linux

6:Linux

7:Linux

0:Linux

7a8
> 7:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 9 
use thread_num = 9.
2:Linux

1:Linux

3:Linux

4:Linux

6:Linux

5:Linux

7:Linux

8:Linux

0:Linux

8a9
> 8:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 10 
use thread_num = 10.
2:Linux

1:Linux

3:Linux

4:Linux

6:Linux

5:Linux

7:Linux

8:Linux

0:Linux

9:Linux

9a10
> 9:Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 11 
use thread_num = 11.
2:Linux

1:Linux

3:Linux

4:Linux

6:Linux

5:Linux

7:Linux

8:Linux

9:Linux

0:Linux

::Linux

10a11
> ::Linux
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv07-pth -- /opt/ostestset/util/ostype 12 
use thread_num = 12.
1:Linux

2:Linux

3:Linux

5:Linux

4:Linux

6:Linux

7:Linux

8:Linux

9:Linux

::Linux

0:Linux

;:Linux

11a12
> ;:Linux
## lv09 ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv09-pgf -- w /opt/ostestset/util/tempfile aaabbbcccdddeeefffggghhh\n 
aaabbbcccdddeeefffggghhh\nTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv09-pgf -- r /opt/ostestset/util/tempfile 
aaabbbcccdddeeefffggghhh\n## lv11 ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- w rp /opt/ostestset/util/tempfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 271:  3032 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/lv11" $execve_arg_end w rp $temp
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- w rwp /opt/ostestset/util/tempfile 
mmap-writeTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- w rep /opt/ostestset/util/tempfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 271:  3062 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/lv11" $execve_arg_end w rep $temp
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- w rwep /opt/ostestset/util/tempfile 
mmap-writeTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- w wp /opt/ostestset/util/tempfile 
mmap-writeTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- w wep /opt/ostestset/util/tempfile 
mmap-writeTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- w ep /opt/ostestset/util/tempfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 271:  3122 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/lv11" $execve_arg_end w ep $temp
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- r rp /opt/ostestset/util/tempfile 
aaabbbcccdddeeefffggghhh\nTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- r rwp /opt/ostestset/util/tempfile 
aaabbbcccdddeeefffggghhh\nTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- r rep /opt/ostestset/util/tempfile 
aaabbbcccdddeeefffggghhh\nTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- r rwep /opt/ostestset/util/tempfile 
aaabbbcccdddeeefffggghhh\nTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- r wp /opt/ostestset/util/tempfile 
aaabbbcccdddeeefffggghhh\nTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- r wep /opt/ostestset/util/tempfile 
aaabbbcccdddeeefffggghhh\nTEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv11 -- r ep /opt/ostestset/util/tempfile 
aaabbbcccdddeeefffggghhh\n## lv12 ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv12-kill 
sig_num = 1, sig_name:SIGHUP received.
sig_num = 2, sig_name:SIGINT received.
sig_num = 3, sig_name:SIGQUIT received.
sig_num = 4, sig_name:SIGILL received.
sig_num = 5, sig_name:SIGTRAP received.
sig_num = 6, sig_name:SIGABRT / SIGIOT received.
sig_num = 6, sig_name:SIGABRT / SIGIOT received.
sig_num = 7, sig_name:SIGBUS received.
sig_num = 8, sig_name:SIGFPE received.
signal function set failed. sig_num = 9, sig_name:SIGKILL
sig_num = 10, sig_name:SIGUSR1 received.
sig_num = 11, sig_name:SIGSEGV received.
sig_num = 12, sig_name:SIGUSR2 received.
sig_num = 13, sig_name:SIGPIPE received.
sig_num = 14, sig_name:SIGALRM received.
sig_num = 15, sig_name:SIGTERM received.
sig_num = 16, sig_name:SIGSTKFLT received.
sig_num = 17, sig_name:SIGCHLD received.
sig_num = 18, sig_name:SIGCONT received.
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 20, sig_name:SIGTSTP received.
sig_num = 21, sig_name:SIGTTIN received.
sig_num = 22, sig_name:SIGTTOU received.
sig_num = 23, sig_name:SIGURG received.
sig_num = 24, sig_name:SIGXCPU received.
sig_num = 25, sig_name:SIGXFSZ received.
sig_num = 26, sig_name:SIGVTALRM received.
sig_num = 27, sig_name:SIGPROF received.
sig_num = 28, sig_name:SIGWINCH received.
sig_num = 29, sig_name:SIGIO received.
sig_num = 30, sig_name:SIGPWR received.
sig_num = 31, sig_name:SIGSYS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv12-kill-single 
sig_num = 4 received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv12-segv 
sig_num = 11 received.
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 271:  3272 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/lv12-segv"
## lv14 ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv14 -- 0 
Run test00.
mmap-0[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
success
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv14 -- 1 
Run test01.
mmap-0[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x5a
success
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv14 -- 2 
Run test02.
mmap-0[0x1000001f0000-0x1000101f0000] 0x1000101efff8=0x0
success
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv14 -- 3 
Run test03.
mmap-0[0x100020000000-0x100060000000] 0x10005ffffff8=0x0
success
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv14 -- 4 
Run test04.
mmap-0[0x100020000000-0x100060000000] 0x10005ffffff8=0x0
mmap-1[0x100060000000-0x1000a0000000] 0x10009ffffff8=0x0
success
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv14 -- 5 
Run test05.
mmap-0[0x100020000000-0x100060000000] 0x10005ffffff8=0x0
mmap-1[0x100060000000-0x1000a0000000] 0x10009ffffff8=0x0
mmap-2[0x1000a0000000-0x1000e0000000] 0x1000dffffff8=0x0
mmap-3[0x1000e0000000-0x100120000000] 0x10011ffffff8=0x0
mmap-4[0x100120000000-0x100160000000] 0x10015ffffff8=0x0
success
## lv15 ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-kill 
signal function set failed. sig_num = 9, sig_name:SIGKILL
signal function set failed. sig_num = 19, sig_name:SIGSTOP
sig_num = 7, sig_name:SIGBUS received.
end of user program.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-manon 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/lv15-mfile -- /opt/ostestset/util/ostype 
mmap[0x1000001f0000-0x1000005f0000] 0x1000005efff8=0x0
## socket ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/single_node 
[client] Connect to 127.0.0.1
[server] Waiting for connection ...
[client] Trying to connect to 127.0.0.1: 
[client] sending...[0]
[server] Connected from 127.0.0.1
[server] received[0]: This is a test
[client] sending...[1]
[server] received[1]: This is a test
[client] sending...[2]
[server] received[2]: This is a test
[client] sending...[3]
[server] received[3]: This is a test
[client] sending...[4]
[server] received[4]: This is a test
[client] sending...[5]
[server] received[5]: This is a test
[client] sending...[6]
[server] received[6]: This is a test
[client] sending...[7]
[server] received[7]: This is a test
[client] sending...[8]
[server] received[8]: This is a test
[client] sending...[9]
[server] received[9]: This is a test
## siginfo ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s siginfo -n 0 
TEST_SUITE: siginfo
TEST_NUMBER: 0
ARGS: 
=== raise signal #1 ===
Catch signal #1
  siginfo->si_signo = 1
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00000002
=== raise signal #2 ===
Catch signal #2
  siginfo->si_signo = 2
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00000006
=== raise signal #3 ===
Catch signal #3
  siginfo->si_signo = 3
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000000e
=== raise signal #4 ===
Catch signal #4
  siginfo->si_signo = 4
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000001e
=== raise signal #5 ===
Catch signal #5
  siginfo->si_signo = 5
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000003e
=== raise signal #6 ===
Catch signal #6
  siginfo->si_signo = 6
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000007e
=== raise signal #7 ===
Catch signal #7
  siginfo->si_signo = 7
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x000000fe
=== raise signal #8 ===
Catch signal #8
  siginfo->si_signo = 8
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x000001fe
=== raise signal #10 ===
Catch signal #10
  siginfo->si_signo = 10
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x000005fe
=== raise signal #11 ===
Catch signal #11
  siginfo->si_signo = 11
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00000dfe
=== raise signal #12 ===
Catch signal #12
  siginfo->si_signo = 12
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00001dfe
=== raise signal #13 ===
Catch signal #13
  siginfo->si_signo = 13
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00003dfe
=== raise signal #14 ===
Catch signal #14
  siginfo->si_signo = 14
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00007dfe
=== raise signal #15 ===
Catch signal #15
  siginfo->si_signo = 15
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0000fdfe
=== raise signal #16 ===
Catch signal #16
  siginfo->si_signo = 16
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0001fdfe
=== raise signal #17 ===
Catch signal #17
  siginfo->si_signo = 17
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0003fdfe
=== raise signal #18 ===
Catch signal #18
  siginfo->si_signo = 18
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0007fdfe
=== raise signal #20 ===
Catch signal #20
  siginfo->si_signo = 20
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0017fdfe
=== raise signal #21 ===
Catch signal #21
  siginfo->si_signo = 21
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0037fdfe
=== raise signal #22 ===
Catch signal #22
  siginfo->si_signo = 22
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0077fdfe
=== raise signal #23 ===
Catch signal #23
  siginfo->si_signo = 23
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x00f7fdfe
=== raise signal #24 ===
Catch signal #24
  siginfo->si_signo = 24
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x01f7fdfe
=== raise signal #25 ===
Catch signal #25
  siginfo->si_signo = 25
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x03f7fdfe
=== raise signal #26 ===
Catch signal #26
  siginfo->si_signo = 26
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x07f7fdfe
=== raise signal #27 ===
Catch signal #27
  siginfo->si_signo = 27
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x0ff7fdfe
=== raise signal #28 ===
Catch signal #28
  siginfo->si_signo = 28
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x1ff7fdfe
=== raise signal #29 ===
Catch signal #29
  siginfo->si_signo = 29
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x3ff7fdfe
=== raise signal #30 ===
Catch signal #30
  siginfo->si_signo = 30
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0x7ff7fdfe
=== raise signal #31 ===
Catch signal #31
  siginfo->si_signo = 31
  siginfo->si_errno = 0
  siginfo->si_code  = 0xfffffffa
delivered_signal=0xfff7fdfe
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s siginfo -n 1 
TEST_SUITE: siginfo
TEST_NUMBER: 1
ARGS: 
==================================================
Please send signal to mcexec(pid=3963) from console.
Exit Once you throw twice the same signal.
==================================================
SIGNAL_EXPECT_TO_DELIVER : 0xff80fdfe
send SIGHUP to 3963
Catch signal #1
  siginfo->si_signo = 1
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x00000002
send SIGINT to 3963
Catch signal #2
  siginfo->si_signo = 2
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x00000006
send SIGQUIT to 3963
Catch signal #3
  siginfo->si_signo = 3
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000000e
send SIGILL to 3963
Catch signal #4
  siginfo->si_signo = 4
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000001e
send SIGTRAP to 3963
Catch signal #5
  siginfo->si_signo = 5
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000003e
send SIGABRT to 3963
Catch signal #6
  siginfo->si_signo = 6
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000007e
send SIGEMT to 3963
/opt/ostestset/util/run_testset_postk.sh: line 48: kill: EMT: invalid signal specification
send SIGFPE to 3963
Catch signal #8
  siginfo->si_signo = 8
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x0000017e
send SIGBUS to 3963
Catch signal #7
  siginfo->si_signo = 7
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x000001fe
send SIGSEGV to 3963
Catch signal #11
  siginfo->si_signo = 11
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x000009fe
send SIGSYS to 3963
Catch signal #31
  siginfo->si_signo = 31
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x800009fe
send SIGPIPE to 3963
Catch signal #13
  siginfo->si_signo = 13
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x800029fe
send SIGALRM to 3963
Catch signal #14
  siginfo->si_signo = 14
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x800069fe
send SIGTERM to 3963
Catch signal #15
  siginfo->si_signo = 15
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x8000e9fe
send SIGURG to 3963
Catch signal #23
  siginfo->si_signo = 23
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0x8080e9fe
send SIGIO to 3963
Catch signal #29
  siginfo->si_signo = 29
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xa080e9fe
send SIGXCPU to 3963
Catch signal #24
  siginfo->si_signo = 24
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xa180e9fe
send SIGXFSZ to 3963
Catch signal #25
  siginfo->si_signo = 25
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xa380e9fe
send SIGVTALRM to 3963
Catch signal #26
  siginfo->si_signo = 26
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xa780e9fe
send SIGPROF to 3963
Catch signal #27
  siginfo->si_signo = 27
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xaf80e9fe
send SIGWINCH to 3963
Catch signal #28
  siginfo->si_signo = 28
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xbf80e9fe
send SIGPWR to 3963
Catch signal #30
  siginfo->si_signo = 30
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xff80e9fe
send SIGUSR1 to 3963
Catch signal #10
  siginfo->si_signo = 10
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xff80edfe
send SIGUSR2 to 3963
Catch signal #12
  siginfo->si_signo = 12
  siginfo->si_errno = 0
  siginfo->si_code  = 0x0
delivered_signal=0xff80fdfe
RESULT: ok
## wait4 ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s wait4 -n 0 
TEST_SUITE: wait4
TEST_NUMBER: 0
ARGS: 
wait4()=4020, errno=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s wait4 -n 1 -- -f /opt/ostestset/util/pid_max 
TEST_SUITE: wait4
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/pid_max 
wait4()=-1, errno=10
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s wait4 -n 2 
TEST_SUITE: wait4
TEST_NUMBER: 2
ARGS: 
(sig_handler)sig_num=17
wait4()=4064, errno=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s wait4 -n 3 
TEST_SUITE: wait4
TEST_NUMBER: 3
ARGS: 
[child]pid=4093
[child]send signal success.
(sig_handler)sig_num=12, pid=4078
wait()=4093, errno=0
RESULT: ok
## env ##
"AAA" is not env value.
"a" is not env value.
"b" is not env value.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s env -n 0 
TEST_SUITE: env
TEST_NUMBER: 0
ARGS: 
_=/opt/ppos/bin/mcexec
BASH_FUNC__moduleraw%%=() {  unset _mlre _mlIFS _mlshdbg;
 if [ "${MODULES_SILENT_SHELL_DEBUG:-0}" = '1' ]; then
 case "$-" in 
 *v*x*)
 set +vx;
 _mlshdbg='vx'
 ;;
 *v*)
 set +v;
 _mlshdbg='v'
 ;;
 *x*)
 set +x;
 _mlshdbg='x'
 ;;
 *)
 _mlshdbg=''
 ;;
 esac;
 fi;
 if [ -n "${IFS+x}" ]; then
 _mlIFS=$IFS;
 fi;
 IFS=' ';
 for _mlv in ${MODULES_RUN_QUARANTINE:-};
 do
 if [ "${_mlv}" = "${_mlv##*[!A-Za-z0-9_]}" -a "${_mlv}" = "${_mlv#[0-9]}" ]; then
 if [ -n "`eval 'echo ${'$_mlv'+x}'`" ]; then
 _mlre="${_mlre:-}${_mlv}_modquar='`eval 'echo ${'$_mlv'}'`' ";
 fi;
 _mlrv="MODULES_RUNENV_${_mlv}";
 _mlre="${_mlre:-}${_mlv}='`eval 'echo ${'$_mlrv':-}'`' ";
 fi;
 done;
 if [ -n "${_mlre:-}" ]; then
 eval `eval ${_mlre}/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash '"$@"'`;
 else
 eval `/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash "$@"`;
 fi;
 _mlstatus=$?;
 if [ -n "${_mlIFS+x}" ]; then
 IFS=$_mlIFS;
 else
 unset IFS;
 fi;
 if [ -n "${_mlshdbg:-}" ]; then
 set -$_mlshdbg;
 fi;
 unset _mlre _mlv _mlrv _mlIFS _mlshdbg;
 return $_mlstatus
}
BASH_FUNC_scl%%=() {  if [ "$1" = "load" -o "$1" = "unload" ]; then
 eval "module $@";
 else
 /usr/bin/scl "$@";
 fi
}
BASH_FUNC_switchml%%=() {  typeset swfound=1;
 if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
 typeset swname='main';
 if [ -e /usr/share/Modules/libexec/modulecmd.tcl ]; then
 typeset swfound=0;
 unset MODULES_USE_COMPAT_VERSION;
 fi;
 else
 typeset swname='compatibility';
 if [ -e /usr/share/Modules/libexec/modulecmd-compat ]; then
 typeset swfound=0;
 MODULES_USE_COMPAT_VERSION=1;
 export MODULES_USE_COMPAT_VERSION;
 fi;
 fi;
 if [ $swfound -eq 0 ]; then
 echo "Switching to Modules $swname version";
 source /usr/share/Modules/init/bash;
 else
 echo "Cannot switch to Modules $swname version, command not found";
 return 1;
 fi
}
BASH_FUNC_module%%=() {  _moduleraw "$@" 2>&1
}
LESSOPEN=||/usr/bin/lesspipe.sh %s
HISTSIZE=1000
MODULESHOME=/usr/share/Modules
PATH=/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
MODULEPATH_modshare=/usr/share/modulefiles:1:/etc/modulefiles:1:/usr/share/Modules/modulefiles:1
XDG_RUNTIME_DIR=/run/user/0
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/0/bus
LOGNAME=root
MODULEPATH=/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles
SHLVL=3
SHELL=/bin/bash
TERM=screen
MAIL=/var/spool/mail/root
SSH_TTY=/dev/pts/0
LOADEDMODULES=
BASH_ENV=/usr/share/Modules/init/bash
SSH_CLIENT=10.0.2.2 38768 22
HOME=/root
PWD=/opt/ostestset
ENV=/usr/share/Modules/init/profile.sh
MODULES_CMD=/usr/share/Modules/libexec/modulecmd.tcl
XDG_SESSION_ID=4
S_COLORS=auto
OLDPWD=/opt/ostestset/bin
HOSTNAME=localhost.localdomain
HISTCONTROL=ignoredups
LANG=ja_JP.UTF-8
MODULES_RUN_QUARANTINE=LD_LIBRARY_PATH
SSH_CONNECTION=10.0.2.2 38768 10.0.2.15 22
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:
ARCH=x86
USER=
RESULT: ok
## rt_sigsuspend ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigsuspend -n 0 
TEST_SUITE: rt_sigsuspend
TEST_NUMBER: 0
ARGS: 
(sig_handler)sig_num=14
sys_rt_sigsuspend()=-1, errno=4
RESULT: ok
## cpu_thread_limits ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s cpu_thread_limits -n 0 -- -t 11 
TEST_SUITE: cpu_thread_limits
TEST_NUMBER: 0
ARGS: -t 11 
[tid=4150] from child thread.(local_id=2)
[tid=4144] from child thread.(local_id=8)
[tid=4149] from child thread.(local_id=3)
[tid=4141] from child thread.(local_id=11)
[tid=4145] from child thread.(local_id=7)
[tid=4147] from child thread.(local_id=5)
[tid=4142] from child thread.(local_id=10)
[tid=4148] from child thread.(local_id=4)
[tid=4143] from child thread.(local_id=9)
[tid=4151] from child thread.(local_id=1)
[tid=4146] from child thread.(local_id=6)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s cpu_thread_limits -n 1 -- -t 11 
TEST_SUITE: cpu_thread_limits
TEST_NUMBER: 1
ARGS: -t 11 
PI = 3.14159265358983
RESULT: ok
## gettid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s gettid -n 0 
TEST_SUITE: gettid
TEST_NUMBER: 0
ARGS: 
PID=4171, TID=4171
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s gettid -n 1 
TEST_SUITE: gettid
TEST_NUMBER: 1
ARGS: 
[parent] pid=4186, tid=4186
[child ] pid=4186, tid=4200
RESULT: ok
## mprotect ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mprotect -n 0 
TEST_SUITE: mprotect
TEST_NUMBER: 0
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mprotect -n 1 
TEST_SUITE: mprotect
TEST_NUMBER: 1
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mprotect -n 2 
TEST_SUITE: mprotect
TEST_NUMBER: 2
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mprotect -n 3 
TEST_SUITE: mprotect
TEST_NUMBER: 3
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mprotect -n 4 
TEST_SUITE: mprotect
TEST_NUMBER: 4
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mprotect -n 5 
TEST_SUITE: mprotect
TEST_NUMBER: 5
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mprotect -n 6 
TEST_SUITE: mprotect
TEST_NUMBER: 6
ARGS: 
mapped=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mprotect -n 7 
TEST_SUITE: mprotect
TEST_NUMBER: 7
ARGS: 
mapped=0x100000260000
RESULT: ok
## mem_stack_limits ##
MCKERNEL_RLIMIT_STACK=10MiB(10240 KiB),10MiB(10240 KiB)
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_stack_limits -n 0 -- -s 9961472 
TEST_SUITE: mem_stack_limits
TEST_NUMBER: 0
ARGS: -s 9961472 
call: 0 GiB + 9 MiB + 512 KiB
used_stack size: 9986480 (0 GiB + 9 MiB + 536 KiB)
RESULT: ok
MCKERNEL_RLIMIT_STACK=2GiB(2097152 KiB),2GiB(2097152 KiB)
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_stack_limits -n 0 -- -s 2040109466 
TEST_SUITE: mem_stack_limits
TEST_NUMBER: 0
ARGS: -s 2040109466 
call: 1 GiB + 921 MiB + 614 KiB
used_stack size: 2040182784 (1 GiB + 921 MiB + 686 KiB)
RESULT: ok
MCKERNEL_RLIMIT_STACK=mckernel_max_memory_size x 110%
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_stack_limits -n 0 -- -s 16320875721 
TEST_SUITE: mem_stack_limits
TEST_NUMBER: 0
ARGS: -s 16320875721 
call: 15 GiB + 204 MiB + 819 KiB
used_stack size: 16320925344 (15 GiB + 204 MiB + 867 KiB)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_stack_limits -n 0 -- -s 18897856098 
TEST_SUITE: mem_stack_limits
TEST_NUMBER: 0
ARGS: -s 18897856098 
call: 17 GiB + 614 MiB + 409 KiB
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 391:  4367 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mem_stack_limits -n 0 -- -s $mck_max_mem_size_110p
unset MCKERNEL_RLIMIT_STACK
## munlock ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s munlock -n 0 
TEST_SUITE: munlock
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## rt_sigaction ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigaction -n 0 
TEST_SUITE: rt_sigaction
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigaction -n 1 
TEST_SUITE: rt_sigaction
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigaction -n 2 
TEST_SUITE: rt_sigaction
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigaction -n 3 
TEST_SUITE: rt_sigaction
TEST_NUMBER: 3
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigaction -n 4 
TEST_SUITE: rt_sigaction
TEST_NUMBER: 4
ARGS: 
/-------- Signal handler will activate -------/
sig#10 is handled.
/------ Process will terminate by signal -----/
Terminate by signal 10
/opt/ostestset/util/run_testset_postk.sh: line 556:  4457 User defined signal 1   ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s rt_sigaction -n 4
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigaction -n 5 
TEST_SUITE: rt_sigaction
TEST_NUMBER: 5
ARGS: 
sigaction(-1) = -1 (errno=22)
sigaction(65) = -1 (errno=22)
sigaction(9) = -1 (errno=22)
sigaction(19) = -1 (errno=22)
RESULT: ok
## fork ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fork -n 0 
TEST_SUITE: fork
TEST_NUMBER: 0
ARGS: 
[parent]pid=4487, tid=4487
RESULT: ok
[child]pid=4502, tid=4502
## pause ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s pause -n 0 
TEST_SUITE: pause
TEST_NUMBER: 0
ARGS: 
(pause000_sig_handle)sig_num=14
pause()=-1, errno=4
RESULT: ok
## sigaltstack ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sigaltstack -n 0 
TEST_SUITE: sigaltstack
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sigaltstack -n 1 
TEST_SUITE: sigaltstack
TEST_NUMBER: 1
ARGS: 
alternate stack settings = {
  ss_sp   = 0x20000e80
  ss_size = 0x4000
};
Actual altternalte stack = 0x20003c1c
Actual main stack        = 0x3fffffffe7ec
RESULT: ok
## ptrace ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 0 
TEST_SUITE: ptrace
TEST_NUMBER: 0
ARGS: 
ptrace()=0, errno=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 1 
TEST_SUITE: ptrace
TEST_NUMBER: 1
ARGS: 
child is stopped.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 2 
TEST_SUITE: ptrace
TEST_NUMBER: 2
ARGS: 
PTRACE_PEEKDATA read_val(0x1234567890abcdef) == 0x1234567890abcdef
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 3 
TEST_SUITE: ptrace
TEST_NUMBER: 3
ARGS: 
PTRACE_PEEKTEXT inst_code(0xd503201f) == 0xd503201f
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 4 
TEST_SUITE: ptrace
TEST_NUMBER: 4
ARGS: 
ptrace(PTRACE_PEEKUSER) expected errno EIO(5) catch
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 5 
TEST_SUITE: ptrace
TEST_NUMBER: 5
ARGS: 
before PTRACE_POKEDATA buf(0x1234567890abcdef)
after PTRACE_POKEDATA buf(0xffaaffaaffaaffaa) == 0xffaaffaaffaaffaa
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 6 
TEST_SUITE: ptrace
TEST_NUMBER: 6
ARGS: 
child is stopped by SIGTRAP.
child si_signo == SIGTRAP
child si_errno == 0
child si_code == TRAP_BRKPT
child is stopped change TEXT addr.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 7 
TEST_SUITE: ptrace
TEST_NUMBER: 7
ARGS: 
ptrace(PTRACE_POKEUSER) expected errno EIO(5) catch
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 8 
TEST_SUITE: ptrace
TEST_NUMBER: 8
ARGS: 
===== DUMP REGSET_GPR =====
  x00 = 0x0000000000481ce8
  x01 = 0xaaaaaaaa33333333
  x02 = 0x5555555588888888
  x03 = 0x00003ffffffffb20
  x04 = 0x00000000004808a0
  x05 = 0x00003ffffffffba0
  x06 = 0xefbeadde55555555
  x07 = 0x88888888aaaaaaaa
  x08 = 0xcccccccc88888888
  x09 = 0xaaaaaaaaefbeadde
  x10 = 0x000000000042c1e8
  x11 = 0xefbeaddecccccccc
  x12 = 0xaaaaaaaa33333333
  x13 = 0x5555555588888888
  x14 = 0x0000000000000000
  x15 = 0x0000000000000486
  x16 = 0x0000100000164210
  x17 = 0x0000000000480000
  x18 = 0x0000000000000012
  x19 = 0x0000000000000013
  x20 = 0x0000000000000014
  x21 = 0x0000000000000015
  x22 = 0x0000000000000016
  x23 = 0x0000000000000017
  x24 = 0x0000000000000018
  x25 = 0x0000000000000019
  x26 = 0x000000000000001a
  x27 = 0x000000000000001b
  x28 = 0x000000000000001c
  x29 = 0x00003ffffffffba0
  x30 = 0x000000000042c1d0
  sp  = 0x00003ffffffffba0
  pc  = 0x000000000042c1e8
  pstate = 0x0000000080000000

===== DUMP REGSET_FPR =====
  q00 = 0x1111111111111111 1111111111111111
  q01 = 0x3333333333333333 3333333333333333
  q02 = 0x5555555555555555 5555555555555555
  q03 = 0x8888888888888888 8888888888888888
  q04 = 0xaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaa
  q05 = 0xefbeaddeefbeadde efbeaddeefbeadde
  q06 = 0xcccccccccccccccc cccccccccccccccc
  q07 = 0xffffffffffffffff ffffffffffffffff
  q08 = 0xffffffffffffffff ffffffff11111111
  q09 = 0x1111111111111111 1111111133333333
  q10 = 0x3333333333333333 3333333355555555
  q11 = 0x5555555555555555 5555555588888888
  q12 = 0x8888888888888888 88888888aaaaaaaa
  q13 = 0xaaaaaaaaaaaaaaaa aaaaaaaaefbeadde
  q14 = 0xefbeaddeefbeadde efbeaddecccccccc
  q15 = 0xcccccccccccccccc ccccccccffffffff
  q16 = 0xcccccccccccccccc ffffffff11111111
  q17 = 0xffffffffffffffff 1111111133333333
  q18 = 0x1111111111111111 3333333355555555
  q19 = 0x3333333333333333 5555555588888888
  q20 = 0x5555555555555555 88888888aaaaaaaa
  q21 = 0x8888888888888888 aaaaaaaaefbeadde
  q22 = 0xaaaaaaaaaaaaaaaa efbeaddecccccccc
  q23 = 0xefbeaddeefbeadde ccccccccffffffff
  q24 = 0xccccccccffffffff 11111111efbeadde
  q25 = 0xffffffff11111111 33333333cccccccc
  q26 = 0x1111111133333333 55555555ffffffff
  q27 = 0x3333333355555555 8888888811111111
  q28 = 0x5555555588888888 aaaaaaaa33333333
  q29 = 0x88888888aaaaaaaa efbeadde55555555
  q30 = 0xaaaaaaaaefbeadde cccccccc88888888
  q31 = 0xefbeaddecccccccc ffffffffaaaaaaaa
  fpsr = 0x00000000
  fpcr = 0x00000000

===== DUMP REGSET_TLS =====
  tls = 0x0000100000033bf0

===== DUMP REGSET_HW_BREAK =====
  dbg_info = 0x00000606
  dbg_regs[00].addr = 0x0000000000000000
  dbg_regs[00].ctrl = 0x00000000
  dbg_regs[01].addr = 0x0000000000000000
  dbg_regs[01].ctrl = 0x00000000
  dbg_regs[02].addr = 0x0000000000000000
  dbg_regs[02].ctrl = 0x00000000
  dbg_regs[03].addr = 0x0000000000000000
  dbg_regs[03].ctrl = 0x00000000
  dbg_regs[04].addr = 0x0000000000000000
  dbg_regs[04].ctrl = 0x00000000
  dbg_regs[05].addr = 0x0000000000000000
  dbg_regs[05].ctrl = 0x00000000
  dbg_regs[06].addr = 0x0000000000000000
  dbg_regs[06].ctrl = 0x00000000
  dbg_regs[07].addr = 0x0000000000000000
  dbg_regs[07].ctrl = 0x00000000
  dbg_regs[08].addr = 0x0000000000000000
  dbg_regs[08].ctrl = 0x00000000
  dbg_regs[09].addr = 0x0000000000000000
  dbg_regs[09].ctrl = 0x00000000
  dbg_regs[10].addr = 0x0000000000000000
  dbg_regs[10].ctrl = 0x00000000
  dbg_regs[11].addr = 0x0000000000000000
  dbg_regs[11].ctrl = 0x00000000
  dbg_regs[12].addr = 0x0000000000000000
  dbg_regs[12].ctrl = 0x00000000
  dbg_regs[13].addr = 0x0000000000000000
  dbg_regs[13].ctrl = 0x00000000
  dbg_regs[14].addr = 0x0000000000000000
  dbg_regs[14].ctrl = 0x00000000
  dbg_regs[15].addr = 0x0000000000000000
  dbg_regs[15].ctrl = 0x00000000

===== DUMP REGSET_HW_WATCH =====
  dbg_info = 0x00000604
  dbg_regs[00].addr = 0x0000000000000000
  dbg_regs[00].ctrl = 0x00000000
  dbg_regs[01].addr = 0x0000000000000000
  dbg_regs[01].ctrl = 0x00000000
  dbg_regs[02].addr = 0x0000000000000000
  dbg_regs[02].ctrl = 0x00000000
  dbg_regs[03].addr = 0x0000000000000000
  dbg_regs[03].ctrl = 0x00000000
  dbg_regs[04].addr = 0x0000000000000000
  dbg_regs[04].ctrl = 0x00000000
  dbg_regs[05].addr = 0x0000000000000000
  dbg_regs[05].ctrl = 0x00000000
  dbg_regs[06].addr = 0x0000000000000000
  dbg_regs[06].ctrl = 0x00000000
  dbg_regs[07].addr = 0x0000000000000000
  dbg_regs[07].ctrl = 0x00000000
  dbg_regs[08].addr = 0x0000000000000000
  dbg_regs[08].ctrl = 0x00000000
  dbg_regs[09].addr = 0x0000000000000000
  dbg_regs[09].ctrl = 0x00000000
  dbg_regs[10].addr = 0x0000000000000000
  dbg_regs[10].ctrl = 0x00000000
  dbg_regs[11].addr = 0x0000000000000000
  dbg_regs[11].ctrl = 0x00000000
  dbg_regs[12].addr = 0x0000000000000000
  dbg_regs[12].ctrl = 0x00000000
  dbg_regs[13].addr = 0x0000000000000000
  dbg_regs[13].ctrl = 0x00000000
  dbg_regs[14].addr = 0x0000000000000000
  dbg_regs[14].ctrl = 0x00000000
  dbg_regs[15].addr = 0x0000000000000000
  dbg_regs[15].ctrl = 0x00000000

===== DUMP REGSET_SYSTEM_CALL =====
  syscallno = 0xffffffff

RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 9 
TEST_SUITE: ptrace
TEST_NUMBER: 9
ARGS: 
si_signo = 0x13
si_errno = 0x0
si_code  = 0x0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 10 
TEST_SUITE: ptrace
TEST_NUMBER: 10
ARGS: 
ptrace(PTRACE_SETREGSET, NT_ARM_TLS) OK.
ptrace(PTRACE_SETREGSET, NT_ARM_SYSTEM_CALL) OK.
ptrace(PTRACE_SETREGSET, NT_PRSTATUS) OK.
ptrace(PTRACE_SETREGSET, NT_PRFPREG) OK.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 11 
TEST_SUITE: ptrace
TEST_NUMBER: 11
ARGS: 
child is stopped by SIGTRAP.
child si_signo == SIGTRAP
child si_errno == 0
child si_code == TRAP_HWBKPT
child si_addr == change value addr
child is stopped change value addr.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 12 
TEST_SUITE: ptrace
TEST_NUMBER: 12
ARGS: 
child is stopped by SIGTRAP.
child si_signo == SIGTRAP
child si_errno == 0
child si_code == TRAP_HWBKPT
child si_addr == hwbreakpoint addr
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 13 
TEST_SUITE: ptrace
TEST_NUMBER: 13
ARGS: 
siginfo change value check OK.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 14 
TEST_SUITE: ptrace
TEST_NUMBER: 14
ARGS: 
set supported options, OK.
set illigal option, errno == EINVAL.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 15 
TEST_SUITE: ptrace
TEST_NUMBER: 15
ARGS: 
eventpid = 0x13a2
eventmsg value OK.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 16 
TEST_SUITE: ptrace
TEST_NUMBER: 16
ARGS: 
sysno check OK.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 17 
TEST_SUITE: ptrace
TEST_NUMBER: 17
ARGS: 
[count00]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
[count01]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
[count02]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
[count03]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
[count04]
  child is stopped by SIGTRAP.
  child si_signo == SIGTRAP
  child si_errno == 0
  child si_code == TRAP_HWBKPT
  child is stopped singlestep addr.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 18 
TEST_SUITE: ptrace
TEST_NUMBER: 18
ARGS: 
child terminated by SIGKILL
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 19 
TEST_SUITE: ptrace
TEST_NUMBER: 19
ARGS: 
child is stopped.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 20 
TEST_SUITE: ptrace
TEST_NUMBER: 20
ARGS: 
child detach OK.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ptrace -n 21 
TEST_SUITE: ptrace
TEST_NUMBER: 21
ARGS: 
RESULT: ok
## mmap_dev ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_dev -n 1 -- -d /dev/test_mck/mmap_dev2 -s 8192 
TEST_SUITE: mmap_dev
TEST_NUMBER: 1
ARGS: -d /dev/test_mck/mmap_dev2 -s 8192 
open(/dev/test_mck/mmap_dev2)=10
ioctl()=0
mmap()=0x100000260000
munmap()=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_dev -n 1 -- -d /dev/test_mck/mmap_dev2 -s 536936448 
TEST_SUITE: mmap_dev
TEST_NUMBER: 1
ARGS: -d /dev/test_mck/mmap_dev2 -s 536936448 
open(/dev/test_mck/mmap_dev2)=10
ioctl()=0
mmap()=0x100000260000
munmap()=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_dev -n 2 -- -d /dev/test_mck/mmap_dev2 -s 8192 
TEST_SUITE: mmap_dev
TEST_NUMBER: 2
ARGS: -d /dev/test_mck/mmap_dev2 -s 8192 
open(/dev/test_mck/mmap_dev2)=10
ioctl()=0
mmap()=0x100000260000
peek mmap()=0x100000270000
munmap()=0
munmap()=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_dev -n 2 -- -d /dev/test_mck/mmap_dev2 -s 536936448 
TEST_SUITE: mmap_dev
TEST_NUMBER: 2
ARGS: -d /dev/test_mck/mmap_dev2 -s 536936448 
open(/dev/test_mck/mmap_dev2)=10
ioctl()=0
mmap()=0x100000260000
peek mmap()=0x100020270000
munmap()=0
munmap()=0
RESULT: ok
## tgkill ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s tgkill -n 0 
TEST_SUITE: tgkill
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s tgkill -n 1 
TEST_SUITE: tgkill
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s tgkill -n 2 
TEST_SUITE: tgkill
TEST_NUMBER: 2
ARGS: 
[parent]sleep a few sec...
[child]pid=5304, tid=5318
[parent]wake up
Terminate by signal 10
/opt/ostestset/util/run_testset_postk.sh: line 556:  5304 User defined signal 1   ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s tgkill -n 2
## rt_sigpending ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigpending -n 0 
TEST_SUITE: rt_sigpending
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## rt_sigqueueinfo ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigqueueinfo -n 0 
TEST_SUITE: rt_sigqueueinfo
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## rt_sigprocmask ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s rt_sigprocmask -n 0 
TEST_SUITE: rt_sigprocmask
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## mmap_populate ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_populate -n 0 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_populate
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
## mem_large_page ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 0 
TEST_SUITE: mem_large_page
TEST_NUMBER: 0
ARGS: 
mmap=0x100020000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 1 
TEST_SUITE: mem_large_page
TEST_NUMBER: 1
ARGS: 
RESULT: In 64KiB page-size environment SKIP.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 4 
TEST_SUITE: mem_large_page
TEST_NUMBER: 4
ARGS: 
mmap=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 5 
TEST_SUITE: mem_large_page
TEST_NUMBER: 5
ARGS: 
shmid: 0x6
shmaddr: 0x100020000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 6 
TEST_SUITE: mem_large_page
TEST_NUMBER: 6
ARGS: 
shmid: 0x7
shmaddr: 0x100020000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 7 
TEST_SUITE: mem_large_page
TEST_NUMBER: 7
ARGS: 
RESULT: In 64KiB page-size environment SKIP.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 8 
TEST_SUITE: mem_large_page
TEST_NUMBER: 8
ARGS: 
mmap=0x100020000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 9 
TEST_SUITE: mem_large_page
TEST_NUMBER: 9
ARGS: 
mmap=0x100020000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_large_page -n 10 
TEST_SUITE: mem_large_page
TEST_NUMBER: 10
ARGS: 
RESULT: In 64KiB page-size environment SKIP.
## tls ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s tls -n 0 
TEST_SUITE: tls
TEST_NUMBER: 0
ARGS: 
[0] tls=1, notls=1
[1] tls=1, notls=2
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s tls -n 1 -- -t 11 
TEST_SUITE: tls
TEST_NUMBER: 1
ARGS: -t 11 
[0] wait
[1] wait
[2] wait
[3] wait
[4] wait
[5] wait
[6] wait
[7] wait
[8] wait
[9] wait
[10] wait
[0] start
[5] start
[5] tls=10000, notls=20000
[4] start
[4] tls=10000, notls=30000
[6] start
[6] tls=10000, notls=40000
[0] tls=10000, notls=10000
[2] start
[2] tls=10000, notls=50000
[10] start
[9] start
[1] start
[3] start
[7] start
[7] tls=10000, notls=100000
[10] tls=10000, notls=60000
[9] tls=10000, notls=70000
[1] tls=10000, notls=80000
[3] tls=10000, notls=90000
[8] start
[8] tls=10000, notls=110000
RESULT: ok
## mmap_file ##
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 0 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 1 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  5565 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 2 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 2
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 3 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 3
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  5599 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 4 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 4
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 5 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 5
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  5633 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 6 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 6
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 7 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 7
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  5667 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 8 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 8
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 9 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 9
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 10 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 10
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 11 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 11
ARGS: -f /opt/ostestset/util/mmapfile 
Z
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 12 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 12
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  5752 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 13 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 13
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  5769 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 14 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 14
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  5786 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 15 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 15
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  5803 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 16 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 16
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 17 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 17
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 18 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 18
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 19 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 19
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 20 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 20
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 21 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 21
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 22 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 22
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 23 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 23
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 24 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 24
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 25 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 25
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 26 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 26
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 27 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 27
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 28 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 28
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 29 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 29
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 30 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 30
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 31 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 31
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: mmap error.
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 32 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 32
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 33 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 33
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  6109 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 34 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 34
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 35 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 35
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  6143 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 36 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 36
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 37 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 37
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  6177 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 38 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 38
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 39 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 39
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  6211 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 40 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 40
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 41 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 41
ARGS: -f /opt/ostestset/util/mmapfile 
Z
RESULT: ok
Z
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 42 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 42
ARGS: -f /opt/ostestset/util/mmapfile 
a
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 43 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 43
ARGS: -f /opt/ostestset/util/mmapfile 
Z
RESULT: ok
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 44 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 44
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  6296 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 45 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 45
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  6313 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 46 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 46
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  6330 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 47 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 47
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 466:  6347 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mmap_file -n $tp_num -- -f $mmapfile_name
a
a
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_file -n 48 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_file
TEST_NUMBER: 48
ARGS: -f /opt/ostestset/util/mmapfile 
a
Z
RESULT: ok
Z
## execve ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s execve -n 1 -- -f /opt/ostestset/util/../bin/execve_app 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s execve -n 1 -- -f /opt/ostestset/util/../bin/test_mck 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck 
Usage: /opt/ostestset/util/../bin/test_mck -s test_suite -n test_number [-h] -- [args]
   -s      test suite name.
             clock_getres
             clock_gettime
             coredump
             cpu_proc_limits
             cpu_thread_limits
             enosys
             env
             evtstrm
             execve
             force_exit
             fork
             fork_execve
             fpregs
             fstatat
             get_cpu_id
             get_mempolicy
             getcpu
             getegid
             geteuid
             getgid
             getitimer
             getppid
             getresgid
             getresuid
             getrlimit
             getrusage
             gettid
             gettimeofday
             getuid
             iemul
             ipc
             kill
             madvise
             mbind
             mem_large_page
             mem_limits
             mem_stack_limits
             mincore
             mlock
             mlockall
             mmap_dev
             mmap_file
             mmap_locked
             mmap_populate
             mprotect
             mremap_mmap_anon
             msync
             munlock
             munlockall
             nanosleep
             nfo
             page_fault_forwording
             pause
             popen
             process_vm_readv
             process_vm_writev
             procfs
             pthread_getaffinity
             pthread_setaffinity
             ptrace
             readlinkat
             remap_file_pages
             rt_sigaction
             rt_sigpending
             rt_sigprocmask
             rt_sigqueueinfo
             rt_sigsuspend
             rt_sigtimedwait
             sched_get_priority_max
             sched_get_priority_min
             sched_getaffinity
             sched_getparam
             sched_getscheduler
             sched_rr_get_interval
             sched_setaffinity
             sched_setparam
             sched_setscheduler
             sched_yield
             set_mempolicy
             set_tid_address
             setfsgid
             setfsuid
             setgid
             setitimer
             setpgid
             setregid
             setresgid
             setresuid
             setreuid
             setrlimit
             setuid
             sigaltstack
             siginfo
             signalfd4
             system
             tgkill
             time_sharing
             times
             tkill
             tls
             track_syscalls
             uti
             vfork
             wait4
             waitid
             writecombine
   -n      test case number.
   -h      show this message.
   args    test case arguments.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s execve -n 1 -- -f /opt/ostestset/util/../bin/test_mck -- -s env -n 0 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s env -n 0 
TEST_SUITE: env
TEST_NUMBER: 0
ARGS: 
_=/opt/ppos/bin/mcexec
BASH_FUNC__moduleraw%%=() {  unset _mlre _mlIFS _mlshdbg;
 if [ "${MODULES_SILENT_SHELL_DEBUG:-0}" = '1' ]; then
 case "$-" in 
 *v*x*)
 set +vx;
 _mlshdbg='vx'
 ;;
 *v*)
 set +v;
 _mlshdbg='v'
 ;;
 *x*)
 set +x;
 _mlshdbg='x'
 ;;
 *)
 _mlshdbg=''
 ;;
 esac;
 fi;
 if [ -n "${IFS+x}" ]; then
 _mlIFS=$IFS;
 fi;
 IFS=' ';
 for _mlv in ${MODULES_RUN_QUARANTINE:-};
 do
 if [ "${_mlv}" = "${_mlv##*[!A-Za-z0-9_]}" -a "${_mlv}" = "${_mlv#[0-9]}" ]; then
 if [ -n "`eval 'echo ${'$_mlv'+x}'`" ]; then
 _mlre="${_mlre:-}${_mlv}_modquar='`eval 'echo ${'$_mlv'}'`' ";
 fi;
 _mlrv="MODULES_RUNENV_${_mlv}";
 _mlre="${_mlre:-}${_mlv}='`eval 'echo ${'$_mlrv':-}'`' ";
 fi;
 done;
 if [ -n "${_mlre:-}" ]; then
 eval `eval ${_mlre}/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash '"$@"'`;
 else
 eval `/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash "$@"`;
 fi;
 _mlstatus=$?;
 if [ -n "${_mlIFS+x}" ]; then
 IFS=$_mlIFS;
 else
 unset IFS;
 fi;
 if [ -n "${_mlshdbg:-}" ]; then
 set -$_mlshdbg;
 fi;
 unset _mlre _mlv _mlrv _mlIFS _mlshdbg;
 return $_mlstatus
}
BASH_FUNC_scl%%=() {  if [ "$1" = "load" -o "$1" = "unload" ]; then
 eval "module $@";
 else
 /usr/bin/scl "$@";
 fi
}
BASH_FUNC_switchml%%=() {  typeset swfound=1;
 if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
 typeset swname='main';
 if [ -e /usr/share/Modules/libexec/modulecmd.tcl ]; then
 typeset swfound=0;
 unset MODULES_USE_COMPAT_VERSION;
 fi;
 else
 typeset swname='compatibility';
 if [ -e /usr/share/Modules/libexec/modulecmd-compat ]; then
 typeset swfound=0;
 MODULES_USE_COMPAT_VERSION=1;
 export MODULES_USE_COMPAT_VERSION;
 fi;
 fi;
 if [ $swfound -eq 0 ]; then
 echo "Switching to Modules $swname version";
 source /usr/share/Modules/init/bash;
 else
 echo "Cannot switch to Modules $swname version, command not found";
 return 1;
 fi
}
BASH_FUNC_module%%=() {  _moduleraw "$@" 2>&1
}
LESSOPEN=||/usr/bin/lesspipe.sh %s
HISTSIZE=1000
MODULESHOME=/usr/share/Modules
PATH=/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
MODULEPATH_modshare=/usr/share/modulefiles:1:/etc/modulefiles:1:/usr/share/Modules/modulefiles:1
XDG_RUNTIME_DIR=/run/user/0
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/0/bus
LOGNAME=root
MODULEPATH=/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles
SHLVL=3
SHELL=/bin/bash
TERM=screen
MAIL=/var/spool/mail/root
SSH_TTY=/dev/pts/0
LOADEDMODULES=
BASH_ENV=/usr/share/Modules/init/bash
SSH_CLIENT=10.0.2.2 38768 22
HOME=/root
PWD=/opt/ostestset
ENV=/usr/share/Modules/init/profile.sh
USER=root
MODULES_CMD=/usr/share/Modules/libexec/modulecmd.tcl
XDG_SESSION_ID=4
S_COLORS=auto
OLDPWD=/opt/ostestset/bin
HOSTNAME=localhost.localdomain
HISTCONTROL=ignoredups
LANG=ja_JP.UTF-8
MODULES_RUN_QUARANTINE=LD_LIBRARY_PATH
SSH_CONNECTION=10.0.2.2 38768 10.0.2.15 22
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s execve -n 2 
TEST_SUITE: execve
TEST_NUMBER: 2
ARGS: 
[execve2] ret=-1, errno=2
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s execve -n 3 -- -f /opt/ostestset/util/../bin/execve_app 
TEST_SUITE: execve
TEST_NUMBER: 3
ARGS: -f /opt/ostestset/util/../bin/execve_app 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s execve -n 4 -- -f /opt/ostestset/util/../bin/execve_app 
TEST_SUITE: execve
TEST_NUMBER: 4
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s execve -n 5 -- -f /opt/ostestset/util/../bin/execve_app 
TEST_SUITE: execve
TEST_NUMBER: 5
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
## madvise ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 0 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 1 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 2 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 2
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 3 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 3
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 4 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 4
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 5 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 5
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 6 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 6
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 7 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 7
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 10 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 10
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 11 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 11
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 12 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 12
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 13 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 13
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 14 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 14
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 15 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 15
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 16 
TEST_SUITE: madvise
TEST_NUMBER: 16
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 17 
TEST_SUITE: madvise
TEST_NUMBER: 17
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 18 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 18
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 496:  6756 Segmentation fault      (core dumped) ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s madvise -n $tp_num -- -f $mmapfile_name
generate corefile: core.madvise18.2396
GNU gdb (GDB) Red Hat Enterprise Linux 8.2-3.el8
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /opt/ostestset/util/../bin/test_mck...done.

warning: core file may not match specified executable file.
[New LWP -536469208]
[New LWP 6756]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `'.
Program terminated with signal ?, Unknown signal.
#0  0x0000000000411950 in madvise18 (tc_num=18, tc_arg=0x481830 <param>) at src/madvise/018.c:51
51*nullp = 0;
[Current thread is 1 (LWP -536469208)]
$1 = 0x100000260000
$2 = 0x100000270000
$3 = 0x100000280000
  LOAD           0x0000000000200000 0x00001000000c0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000210000 0x00001000000d0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x0000000000220000 0x00001000000e0000 0x0000000000000000
                 0x0000000000160000 0x0000000000160000  R E    0x10000
  LOAD           0x0000000000380000 0x0000100000240000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000390000 0x0000100000250000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003a0000 0x0000100000260000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003b0000 0x0000100000280000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003c0000 0x00003fffff800000 0x0000000000000000
                 0x0000000000800000 0x0000000000800000  RW     0x10000
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s madvise -n 19 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: madvise
TEST_NUMBER: 19
ARGS: -f /opt/ostestset/util/mmapfile 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 496:  6776 Segmentation fault      (core dumped) ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s madvise -n $tp_num -- -f $mmapfile_name
generate corefile: core.madvise19.2396
GNU gdb (GDB) Red Hat Enterprise Linux 8.2-3.el8
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /opt/ostestset/util/../bin/test_mck...done.

warning: core file may not match specified executable file.
[New LWP -536469208]
[New LWP 6776]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `'.
Program terminated with signal ?, Unknown signal.
#0  0x0000000000411c5c in madvise19 (tc_num=19, tc_arg=0x481830 <param>) at src/madvise/019.c:58
58*nullp = 0;
[Current thread is 1 (LWP -536469208)]
$1 = 0x100000260000
$2 = 0x100000270000
$3 = 0x100000280000
  LOAD           0x00000000001f0000 0x00001000000b0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R E    0x10000
  LOAD           0x0000000000200000 0x00001000000c0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000210000 0x00001000000d0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x0000000000220000 0x00001000000e0000 0x0000000000000000
                 0x0000000000160000 0x0000000000160000  R E    0x10000
  LOAD           0x0000000000380000 0x0000100000240000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000390000 0x0000100000250000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003a0000 0x0000100000270000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003b0000 0x00003fffff800000 0x0000000000000000
                 0x0000000000800000 0x0000000000800000  RW     0x10000
## cpu_proc_limits ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s cpu_proc_limits -n 0 -- -p 11 
TEST_SUITE: cpu_proc_limits
TEST_NUMBER: 0
ARGS: -p 11 
Wait children's process will be finished. (about 100msec...)
RESULT: ok
## nfo ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s nfo -n 0 
TEST_SUITE: nfo
TEST_NUMBER: 0
ARGS: 
buf[0]=0x100000260000
buf[1]=0x100000270000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s nfo -n 1 
TEST_SUITE: nfo
TEST_NUMBER: 1
ARGS: 
mmap:buf[0]=0x100000260000
mmap:buf[1]=0x100000270000
mmap:buf[0]=0x100000a90000
mmap:buf[1]=0x100000aa0000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s nfo -n 2 
TEST_SUITE: nfo
TEST_NUMBER: 2
ARGS: 
mmap:buf[0]=0x100000a70000
mmap:buf[1]=0x100000a80000
mmap:buf[0]=0x100000a90000
mmap:buf[1]=0x100000aa0000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s nfo -n 3 
TEST_SUITE: nfo
TEST_NUMBER: 3
ARGS: 
buf[0]=0x100000260000
buf[1]=0x100000270000
## getrlimit ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrlimit -n 1 
TEST_SUITE: getrlimit
TEST_NUMBER: 1
ARGS: 
getrlimit(RLIMIT_FSIZE)=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrlimit -n 3 
TEST_SUITE: getrlimit
TEST_NUMBER: 3
ARGS: 
getrlimit(RLIMIT_STACK)=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrlimit -n 6 
TEST_SUITE: getrlimit
TEST_NUMBER: 6
ARGS: 
getrlimit(RLIMIT_NOFILE)=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrlimit -n 10 
TEST_SUITE: getrlimit
TEST_NUMBER: 10
ARGS: 
getrlimit(RLIMIT_LOCKS)=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrlimit -n 16 
TEST_SUITE: getrlimit
TEST_NUMBER: 16
ARGS: 
getrlimit(RLIMIT_NPROC)=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrlimit -n 17 
TEST_SUITE: getrlimit
TEST_NUMBER: 17
ARGS: 
getrlimit(RLIMIT_AS)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_CORE)=0
  rlim_cur = 0
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_CPU)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_DATA)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_FSIZE)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_LOCKS)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_MEMLOCK)=0
  rlim_cur = 1000000
  rlim_max = 1000000
getrlimit(RLIMIT_MSGQUEUE)=0
  rlim_cur = c8000
  rlim_max = c8000
getrlimit(RLIMIT_NICE)=0
  rlim_cur = 0
  rlim_max = 0
getrlimit(RLIMIT_NOFILE)=0
  rlim_cur = 400
  rlim_max = 1000
getrlimit(RLIMIT_NPROC)=0
  rlim_cur = 7ee3
  rlim_max = 7ee3
getrlimit(RLIMIT_RSS)=0
  rlim_cur = ffffffffffffffff
  rlim_max = ffffffffffffffff
getrlimit(RLIMIT_RTPRIO)=0
  rlim_cur = 0
  rlim_max = 0
getrlimit(RLIMIT_SIGPENDING)=0
  rlim_cur = 7ee3
  rlim_max = 7ee3
getrlimit(RLIMIT_STACK)=0
  rlim_cur = 800000
  rlim_max = ffffffffffffffff
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrlimit -n 18 
TEST_SUITE: getrlimit
TEST_NUMBER: 18
ARGS: 
getrlimit(RLIMIT_NLIMITS)=-1
errno=22 (McK may return EINVAL(=22))
RESULT: ok
## mlock ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mlock -n 0 
TEST_SUITE: mlock
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## mmap_locked ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mmap_locked -n 0 -- -f /opt/ostestset/util/mmapfile 
TEST_SUITE: mmap_locked
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile 
RESULT: ok
## remap_file_pages ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s remap_file_pages -n 0 -- -s 16384 
TEST_SUITE: remap_file_pages
TEST_NUMBER: 0
ARGS: -s 16384 
test file path=./remap_file_pages_tp-JTVyS4
mmap[0x100000260000-0x100000264000)
delete test file=./remap_file_pages_tp-JTVyS4
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s remap_file_pages -n 0 -- -s 268435456 
TEST_SUITE: remap_file_pages
TEST_NUMBER: 0
ARGS: -s 268435456 
test file path=./remap_file_pages_tp-PRPi0O
mmap[0x100000260000-0x100010260000)
delete test file=./remap_file_pages_tp-PRPi0O
RESULT: ok
## mem_limits ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_limits -n 0 -- -f mmap -s 1048576 -c 1 
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f mmap -s 1048576 -c 1 
alloc#0: p=0x100000260000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_limits -n 0 -- -f mmap -s 16320875721 -c 1 
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f mmap -s 16320875721 -c 1 
alloc#0: p=0x100020000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_limits -n 0 -- -f mmap -s 17179869184 -c 1 
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f mmap -s 17179869184 -c 1 
alloc#0: p=0x100020000000
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 556:  7222 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mem_limits -n 0 -- -f mmap -s $mck_max_mem_size -c 1
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_limits -n 0 -- -f mmap -S mmap -c 1 
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f mmap -S mmap -c 1 
alloc#0: p=0xffffffffffffffff
RESULT: out of memory.(mmap)
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_limits -n 0 -- -f brk -s 1048576 -c 1 
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f brk -s 1048576 -c 1 
alloc#0: old=0x20030000, new=0x20130000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_limits -n 0 -- -f brk -s 16320875721 -c 1 
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f brk -s 16320875721 -c 1 
alloc#0: old=0x20030000, new=0x3eccfccc9
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mem_limits -n 0 -- -f brk -s 17179869184 -c 1 
TEST_SUITE: mem_limits
TEST_NUMBER: 0
ARGS: -f brk -s 17179869184 -c 1 
alloc#0: old=0x20030000, new=0x420030000
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 574:  7282 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s mem_limits -n 0 -- -f brk -s $mck_max_mem_size -c 1
## large_bss ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/large_bss 
large_bss TP done.
## system ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s system -n 0 
TEST_SUITE: system
TEST_NUMBER: 0
ARGS: 
Hello World
cmd exit successed by status 0
RESULT: ok
## vfork ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s vfork -n 1 
TEST_SUITE: vfork
TEST_NUMBER: 1
ARGS: 
[parent]pid=7341, tid=7341
RESULT: ok
[child]pid=7356, tid=7356
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s vfork -n 2 -- -f /opt/ostestset/util/../bin/execve_app 
TEST_SUITE: vfork
TEST_NUMBER: 2
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
RESULT: ok
## coredump ##
This test case setting corefile rlimit unlimited.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s coredump -n 0 
TEST_SUITE: coredump
TEST_NUMBER: 0
ARGS: 

=== buf_1 =====================================================
buf_1 = 0x20000e80
0x20000e80: 0x0000000000000000	0x0000000000000001
0x20000e90: 0x0000000000000002	0x0000000000000003
0x20000ea0: 0x0000000000000004	0x0000000000000005
0x20000eb0: 0x0000000000000006	0x0000000000000007
0x20000ec0: 0x0000000000000008	0x0000000000000009
0x20000ed0: 0x000000000000000a	0x000000000000000b
0x20000ee0: 0x000000000000000c	0x000000000000000d
0x20000ef0: 0x000000000000000e	0x000000000000000f
0x20000f00: 0x0000000000000010	0x0000000000000011
0x20000f10: 0x0000000000000012	0x0000000000000013
0x20000f20: 0x0000000000000014	0x0000000000000015
0x20000f30: 0x0000000000000016	0x0000000000000017
0x20000f40: 0x0000000000000018	0x0000000000000019
0x20000f50: 0x000000000000001a	0x000000000000001b
0x20000f60: 0x000000000000001c	0x000000000000001d
0x20000f70: 0x000000000000001e	0x000000000000001f

=== buf_2 =====================================================
buf_2 = 0x3ffffffffa80
0xffffffffffffffff, 0xfffffffffffffffe, 0xfffffffffffffffd, 
0xfffffffffffffffc, 0xfffffffffffffffb, 0xfffffffffffffffa, 
0xfffffffffffffff9, 0xfffffffffffffff8, 0xfffffffffffffff7, 
0xfffffffffffffff6, 0xfffffffffffffff5, 0xfffffffffffffff4, 
0xfffffffffffffff3, 0xfffffffffffffff2, 0xfffffffffffffff1, 
0xfffffffffffffff0, 0xffffffffffffffef, 0xffffffffffffffee, 
0xffffffffffffffed, 0xffffffffffffffec, 0xffffffffffffffeb, 
0xffffffffffffffea, 0xffffffffffffffe9, 0xffffffffffffffe8, 
0xffffffffffffffe7, 0xffffffffffffffe6, 0xffffffffffffffe5, 
0xffffffffffffffe4, 0xffffffffffffffe3, 0xffffffffffffffe2, 
0xffffffffffffffe1, 0xffffffffffffffe0

you need check corefile by GDB.
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 731:  7399 Segmentation fault      (core dumped) ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s coredump -n 0
generate corefile: core.2396
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              CORE (Core file)
  Machine:                           AArch64
  Version:                           0x1
  Entry point address:               0x0
  Start of program headers:          64 (bytes into file)
  Start of section headers:          0 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         21
  Size of section headers:           0 (bytes)
  Number of section headers:         0
  Section header string table index: 0

There are no sections in this file.

There are no sections to group in this file.

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  NOTE           0x00000000000004d8 0x0000000000000000 0x0000000000000000
                 0x00000000000002ec 0x00000000000002ec         0x0
  LOAD           0x0000000000010000 0x0000000000400000 0x0000000000000000
                 0x0000000000070000 0x0000000000070000  R E    0x10000
  LOAD           0x0000000000080000 0x0000000000470000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000090000 0x0000000000480000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000000a0000 0x0000000020000000 0x0000000000000000
                 0x0000000000030000 0x0000000000030000  RW     0x10000
  LOAD           0x00000000000d0000 0x00000ffffff80000 0x0000000000000000
                 0x0000000000080000 0x0000000000080000  RW     0x10000
  LOAD           0x0000000000150000 0x0000100000000000 0x0000000000000000
                 0x0000000000020000 0x0000000000020000  R E    0x10000
  LOAD           0x0000000000170000 0x0000100000020000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000180000 0x0000100000030000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x0000000000190000 0x0000100000040000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x00000000001a0000 0x0000100000050000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R E    0x10000
  LOAD           0x00000000001b0000 0x0000100000070000 0x0000000000000000
                 0x0000000000020000 0x0000000000020000  R E    0x10000
  LOAD           0x00000000001d0000 0x0000100000090000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x00000000001e0000 0x00001000000a0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000001f0000 0x00001000000b0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R E    0x10000
  LOAD           0x0000000000200000 0x00001000000c0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000210000 0x00001000000d0000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x0000000000220000 0x00001000000e0000 0x0000000000000000
                 0x0000000000160000 0x0000000000160000  R E    0x10000
  LOAD           0x0000000000380000 0x0000100000240000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  R      0x10000
  LOAD           0x0000000000390000 0x0000100000250000 0x0000000000000000
                 0x0000000000010000 0x0000000000010000  RW     0x10000
  LOAD           0x00000000003a0000 0x00003fffff800000 0x0000000000000000
                 0x0000000000800000 0x0000000000800000  RW     0x10000

There is no dynamic section in this file.

There are no relocations in this file.

The decoding of unwind sections for machine type AArch64 is not currently supported.

Dynamic symbol information is not available for displaying symbols.

No version information found in this file.

Displaying notes found at file offset 0x000004d8 with length 0x000002ec:
  Owner                 Data size	Description
  CORE                 0x00000188	NT_PRSTATUS (prstatus structure)
  CORE                 0x00000088	NT_PRPSINFO (prpsinfo structure)
  CORE                 0x000000a0	NT_AUXV (auxiliary vector)
core.2396: ELF 64-bit LSB core file ARM aarch64, version 1 (SYSV), SVR4-style
GNU gdb (GDB) Red Hat Enterprise Linux 8.2-3.el8
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /opt/ostestset/util/../bin/test_mck...done.

warning: core file may not match specified executable file.
[New LWP -536469208]
[New LWP 7399]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `'.
Program terminated with signal ?, Unknown signal.
#0  0x0000000000404d04 in coredump0 (tc_num=0, tc_arg=0x0) at src/coredump/000.c:77
77*segv_addr = 0;
[Current thread is 1 (LWP -536469208)]

=== buf_1 =========================================================
0x20000e80: 0x0000000000000000	0x0000000000000001
0x20000e90: 0x0000000000000002	0x0000000000000003
0x20000ea0: 0x0000000000000004	0x0000000000000005
0x20000eb0: 0x0000000000000006	0x0000000000000007
0x20000ec0: 0x0000000000000008	0x0000000000000009
0x20000ed0: 0x000000000000000a	0x000000000000000b
0x20000ee0: 0x000000000000000c	0x000000000000000d
0x20000ef0: 0x000000000000000e	0x000000000000000f
0x20000f00: 0x0000000000000010	0x0000000000000011
0x20000f10: 0x0000000000000012	0x0000000000000013
0x20000f20: 0x0000000000000014	0x0000000000000015
0x20000f30: 0x0000000000000016	0x0000000000000017
0x20000f40: 0x0000000000000018	0x0000000000000019
0x20000f50: 0x000000000000001a	0x000000000000001b
0x20000f60: 0x000000000000001c	0x000000000000001d
0x20000f70: 0x000000000000001e	0x000000000000001f

=== buf_2 =========================================================
$1 = {0xffffffffffffffff, 0xfffffffffffffffe, 0xfffffffffffffffd, 0xfffffffffffffffc, 0xfffffffffffffffb, 0xfffffffffffffffa, 
  0xfffffffffffffff9, 0xfffffffffffffff8, 0xfffffffffffffff7, 0xfffffffffffffff6, 0xfffffffffffffff5, 0xfffffffffffffff4, 
  0xfffffffffffffff3, 0xfffffffffffffff2, 0xfffffffffffffff1, 0xfffffffffffffff0, 0xffffffffffffffef, 0xffffffffffffffee, 
  0xffffffffffffffed, 0xffffffffffffffec, 0xffffffffffffffeb, 0xffffffffffffffea, 0xffffffffffffffe9, 0xffffffffffffffe8, 
  0xffffffffffffffe7, 0xffffffffffffffe6, 0xffffffffffffffe5, 0xffffffffffffffe4, 0xffffffffffffffe3, 0xffffffffffffffe2, 
  0xffffffffffffffe1, 0xffffffffffffffe0}

=== backtrace =====================================================
#0  0x0000000000404d04 in coredump0 (tc_num=0, tc_arg=0x0) at src/coredump/000.c:77
#1  0x00000000004036f8 in run_test_case (tc=0x4438b8 <test_cases+240>, argc=1, argv=0x3ffffffffde8) at src/test_mck.c:72
#2  0x0000000000403ab0 in main (argc=1, argv=0x3ffffffffde8) at src/test_mck.c:164

=== registers =====================================================
x0             0x0                 0
x1             0x1                 1
x2             0x2                 2
x3             0x3                 3
x4             0x4                 4
x5             0x5                 5
x6             0x6                 6
x7             0x7                 7
x8             0x8                 8
x9             0x9                 9
x10            0xa                 10
x11            0xb                 11
x12            0xc                 12
x13            0xd                 13
x14            0xe                 14
x15            0xf                 15
x16            0x10                16
x17            0x11                17
x18            0x12                18
x19            0x13                19
x20            0x14                20
x21            0x15                21
x22            0x16                22
x23            0x17                23
x24            0x18                24
x25            0x19                25
x26            0x1a                26
x27            0x1b                27
x28            0x1c                28
x29            0x3ffffffffb80      70368744176512
x30            0x404c8c            4213900
sp             0x3ffffffffa80      0x3ffffffffa80
pc             0x404d04            0x404d04 <coredump0+844>
cpsr           0x60000000          [ EL=0 C Z ]
fpsr           <unavailable>
fpcr           <unavailable>
## popen ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s popen -n 0 
TEST_SUITE: popen
TEST_NUMBER: 0
ARGS: 
Hello World
RESULT: ok
## procfs ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 0 
TEST_SUITE: procfs
TEST_NUMBER: 0
ARGS: 
dump /proc/7464/auxv:
  0x00000000000021 0x00100000050000 (AT_SYSINFO_EHDR)
  0x00000000000019 0x003fffffffffc0 (AT_RANDOM)
  0x00000000000011 0x00000000000064 (AT_CLKTCK)
  0x00000000000006 0x00000000010000 (AT_PAGESZ)
  0x00000000000003 0x00000000400040 (AT_PHDR)
  0x00000000000004 0x00000000000038 (AT_PHENT)
  0x00000000000005 0x0000000000000a (AT_PHNUM)
  0x00000000000009 0x000000004035a0 (AT_ENTRY)
  0x00000000000010 0x00000000003fff (AT_HWCAP)
  0000000000000000 0000000000000000 (AT_NULL)
RESULT: you need check AUXV value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 1 
TEST_SUITE: procfs
TEST_NUMBER: 1
ARGS: 
allocated: 0x00000020000e80
dump /proc/7479/mem(offset:0x00000020000e80):
  0x00000020000e80: 0000000000000000 0000000000000001 0000000000000002 0000000000000003
  0x00000020000ea0: 0000000000000004 0000000000000005 0000000000000006 0000000000000007
  0x00000020000ec0: 0000000000000008 0000000000000009 000000000000000a 000000000000000b
  0x00000020000ee0: 000000000000000c 000000000000000d 000000000000000e 000000000000000f
  0x00000020000f00: 0000000000000010 0000000000000011 0000000000000012 0000000000000013
  0x00000020000f20: 0000000000000014 0000000000000015 0000000000000016 0000000000000017
  0x00000020000f40: 0000000000000018 0000000000000019 000000000000001a 000000000000001b
  0x00000020000f60: 000000000000001c 000000000000001d 000000000000001e 000000000000001f
RESULT: you need check MEM value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 2 
TEST_SUITE: procfs
TEST_NUMBER: 2
ARGS: 
allocated: 0x00100004000b20
dump /proc/7494/task/7508/mem(offset:0x00100004000b20):
  0x00100004000b20: ffffffffffffffff fffffffffffffffe fffffffffffffffd fffffffffffffffc
  0x00100004000b40: fffffffffffffffb fffffffffffffffa fffffffffffffff9 fffffffffffffff8
  0x00100004000b60: fffffffffffffff7 fffffffffffffff6 fffffffffffffff5 fffffffffffffff4
  0x00100004000b80: fffffffffffffff3 fffffffffffffff2 fffffffffffffff1 fffffffffffffff0
  0x00100004000ba0: ffffffffffffffef ffffffffffffffee ffffffffffffffed ffffffffffffffec
  0x00100004000bc0: ffffffffffffffeb ffffffffffffffea ffffffffffffffe9 ffffffffffffffe8
  0x00100004000be0: ffffffffffffffe7 ffffffffffffffe6 ffffffffffffffe5 ffffffffffffffe4
  0x00100004000c00: ffffffffffffffe3 ffffffffffffffe2 ffffffffffffffe1 ffffffffffffffe0
RESULT: you need check MEM value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 3 
TEST_SUITE: procfs
TEST_NUMBER: 3
ARGS: 
output /proc/7509/task/7523/stat
0 (exe) R 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0

RESULT: you need check STAT value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 4 
TEST_SUITE: procfs
TEST_NUMBER: 4
ARGS: 
mmaped buf: 0x00100000260000
mmaped buf(RW-): 0x00100000260000
mmaped buf(RWX): 0x00100000270000
dump /proc/7524/mem(offset:0x00100000260000):
  0x00100000260000: 0000000000000000 0000000000000001 0000000000000002 0000000000000003
  0x00100000260020: 0000000000000004 0000000000000005 0000000000000006 0000000000000007
  0x00100000260040: 0000000000000008 0000000000000009 000000000000000a 000000000000000b
  0x00100000260060: 000000000000000c 000000000000000d 000000000000000e 000000000000000f
  0x00100000260080: 0000000000000010 0000000000000011 0000000000000012 0000000000000013
  0x001000002600a0: 0000000000000014 0000000000000015 0000000000000016 0000000000000017
  0x001000002600c0: 0000000000000018 0000000000000019 000000000000001a 000000000000001b
  0x001000002600e0: 000000000000001c 000000000000001d 000000000000001e 000000000000001f
  *
  0x0010000026ff80: 0000000000001ff0 0000000000001ff1 0000000000001ff2 0000000000001ff3
  0x0010000026ffa0: 0000000000001ff4 0000000000001ff5 0000000000001ff6 0000000000001ff7
  0x0010000026ffc0: 0000000000001ff8 0000000000001ff9 0000000000001ffa 0000000000001ffb
  0x0010000026ffe0: 0000000000001ffc 0000000000001ffd 0000000000001ffe 0000000000001fff
  0x00100000270000: ffffffffffffffff fffffffffffffffe fffffffffffffffd fffffffffffffffc
  0x00100000270020: fffffffffffffffb fffffffffffffffa fffffffffffffff9 fffffffffffffff8
  0x00100000270040: fffffffffffffff7 fffffffffffffff6 fffffffffffffff5 fffffffffffffff4
  0x00100000270060: fffffffffffffff3 fffffffffffffff2 fffffffffffffff1 fffffffffffffff0
  *
  0x0010000027ff00: ffffffffffffe01f ffffffffffffe01e ffffffffffffe01d ffffffffffffe01c
  0x0010000027ff20: ffffffffffffe01b ffffffffffffe01a ffffffffffffe019 ffffffffffffe018
  0x0010000027ff40: ffffffffffffe017 ffffffffffffe016 ffffffffffffe015 ffffffffffffe014
  0x0010000027ff60: ffffffffffffe013 ffffffffffffe012 ffffffffffffe011 ffffffffffffe010
  0x0010000027ff80: ffffffffffffe00f ffffffffffffe00e ffffffffffffe00d ffffffffffffe00c
  0x0010000027ffa0: ffffffffffffe00b ffffffffffffe00a ffffffffffffe009 ffffffffffffe008
  0x0010000027ffc0: ffffffffffffe007 ffffffffffffe006 ffffffffffffe005 ffffffffffffe004
  0x0010000027ffe0: ffffffffffffe003 ffffffffffffe002 ffffffffffffe001 ffffffffffffe000
RESULT: you need check MEM value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 5 
TEST_SUITE: procfs
TEST_NUMBER: 5
ARGS: 
mmaped buf: 0x00100000a70000
mmaped buf(RW-): 0x00100000a70000
mmaped buf(RWX): 0x00100000a80000
dump /proc/7539/task/7553/mem(offset:0x00100000a70000):
  0x00100000a70000: ffffffffffffffff fffffffffffffffe fffffffffffffffd fffffffffffffffc
  0x00100000a70020: fffffffffffffffb fffffffffffffffa fffffffffffffff9 fffffffffffffff8
  0x00100000a70040: fffffffffffffff7 fffffffffffffff6 fffffffffffffff5 fffffffffffffff4
  0x00100000a70060: fffffffffffffff3 fffffffffffffff2 fffffffffffffff1 fffffffffffffff0
  0x00100000a70080: ffffffffffffffef ffffffffffffffee ffffffffffffffed ffffffffffffffec
  0x00100000a700a0: ffffffffffffffeb ffffffffffffffea ffffffffffffffe9 ffffffffffffffe8
  0x00100000a700c0: ffffffffffffffe7 ffffffffffffffe6 ffffffffffffffe5 ffffffffffffffe4
  0x00100000a700e0: ffffffffffffffe3 ffffffffffffffe2 ffffffffffffffe1 ffffffffffffffe0
  *
  0x00100000a7ff80: ffffffffffffe00f ffffffffffffe00e ffffffffffffe00d ffffffffffffe00c
  0x00100000a7ffa0: ffffffffffffe00b ffffffffffffe00a ffffffffffffe009 ffffffffffffe008
  0x00100000a7ffc0: ffffffffffffe007 ffffffffffffe006 ffffffffffffe005 ffffffffffffe004
  0x00100000a7ffe0: ffffffffffffe003 ffffffffffffe002 ffffffffffffe001 ffffffffffffe000
  0x00100000a80000: 0000000000000000 0000000000000001 0000000000000002 0000000000000003
  0x00100000a80020: 0000000000000004 0000000000000005 0000000000000006 0000000000000007
  0x00100000a80040: 0000000000000008 0000000000000009 000000000000000a 000000000000000b
  0x00100000a80060: 000000000000000c 000000000000000d 000000000000000e 000000000000000f
  *
  0x00100000a8ff00: 0000000000001fe0 0000000000001fe1 0000000000001fe2 0000000000001fe3
  0x00100000a8ff20: 0000000000001fe4 0000000000001fe5 0000000000001fe6 0000000000001fe7
  0x00100000a8ff40: 0000000000001fe8 0000000000001fe9 0000000000001fea 0000000000001feb
  0x00100000a8ff60: 0000000000001fec 0000000000001fed 0000000000001fee 0000000000001fef
  0x00100000a8ff80: 0000000000001ff0 0000000000001ff1 0000000000001ff2 0000000000001ff3
  0x00100000a8ffa0: 0000000000001ff4 0000000000001ff5 0000000000001ff6 0000000000001ff7
  0x00100000a8ffc0: 0000000000001ff8 0000000000001ff9 0000000000001ffa 0000000000001ffb
  0x00100000a8ffe0: 0000000000001ffc 0000000000001ffd 0000000000001ffe 0000000000001fff
RESULT: you need check MEM value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 6 
TEST_SUITE: procfs
TEST_NUMBER: 6
ARGS: 
output: /proc/cpuinfo
processor	: 4
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 5
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 6
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 7
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 8
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 9
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 10
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 11
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 12
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 13
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 14
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

processor	: 15
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm sve
CPU implementer : 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 0

RESULT: you need check CPUINFO
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 7 
TEST_SUITE: procfs
TEST_NUMBER: 7
ARGS: 
output: /proc/7569/maps
000000400000-000000470000 r-xs 0 0:0 0  
000000470000-000000480000 r--s 0 0:0 0  
000000480000-000000490000 rw-s 0 0:0 0  
000020000000-000020030000 rw-s 0 0:0 0  [heap]
0ffffff80000-100000000000 rw-s 0 0:0 0  
100000000000-100000020000 r-xs 0 0:0 0  
100000020000-100000030000 r--s 0 0:0 0  
100000030000-100000040000 rw-s 0 0:0 0  
100000040000-100000050000 r--s 0 0:0 0  [vsyscall]
100000050000-100000060000 r-xs 0 0:0 0  [vdso]
100000070000-100000090000 r-xp 0 0:0 0  /usr/lib64/libpthread-2.28.so
100000090000-1000000a0000 r--p 0 0:0 0  /usr/lib64/libpthread-2.28.so
1000000a0000-1000000b0000 rw-p 0 0:0 0  /usr/lib64/libpthread-2.28.so
1000000b0000-1000000c0000 r-xp 0 0:0 0  /usr/lib64/libnuma.so.1.0.0
1000000c0000-1000000d0000 r--p 0 0:0 0  /usr/lib64/libnuma.so.1.0.0
1000000d0000-1000000e0000 rw-p 0 0:0 0  /usr/lib64/libnuma.so.1.0.0
1000000e0000-100000240000 r-xp 0 0:0 0  /usr/lib64/libc-2.28.so
100000240000-100000250000 r--p 0 0:0 0  /usr/lib64/libc-2.28.so
100000250000-100000260000 rw-p 0 0:0 0  /usr/lib64/libc-2.28.so
100000260000-100000270000 rwxp 0 0:0 0  
100000270000-100000280000 rw-p 0 0:0 0  
100000280000-100000290000 rwxp 0 0:0 0  
100000290000-1000002a0000 rw-p 0 0:0 0  
1000002a0000-1000002b0000 rwxp 0 0:0 0  
1000002b0000-1000002c0000 rw-p 0 0:0 0  
1000002c0000-1000002d0000 rwxp 0 0:0 0  
1000002d0000-1000002e0000 rw-p 0 0:0 0  
1000002e0000-1000002f0000 rwxp 0 0:0 0  
1000002f0000-100000300000 rw-p 0 0:0 0  
100000300000-100000310000 rwxp 0 0:0 0  
100000310000-100000320000 rw-p 0 0:0 0  
100000320000-100000330000 rwxp 0 0:0 0  
100000330000-100000340000 rw-p 0 0:0 0  
100000340000-100000350000 rwxp 0 0:0 0  
100000350000-100000360000 rw-p 0 0:0 0  
100000360000-100000370000 rwxp 0 0:0 0  
100000370000-100000380000 rw-p 0 0:0 0  
100000380000-100000390000 rwxp 0 0:0 0  
100000390000-1000003a0000 rw-p 0 0:0 0  
1000003a0000-1000003b0000 rwxp 0 0:0 0  
1000003b0000-1000003c0000 rw-p 0 0:0 0  
1000003c0000-1000003d0000 rwxp 0 0:0 0  
1000003d0000-1000003e0000 rw-p 0 0:0 0  
1000003e0000-1000003f0000 rwxp 0 0:0 0  
1000003f0000-100000400000 rw-p 0 0:0 0  
100000400000-100000410000 rwxp 0 0:0 0  
100000410000-100000420000 rw-p 0 0:0 0  
100000420000-100000430000 rwxp 0 0:0 0  
100000430000-100000440000 rw-p 0 0:0 0  
100000440000-100000450000 rwxp 0 0:0 0  
100000450000-100000460000 rw-p 0 0:0 0  
100000460000-100000470000 rwxp 0 0:0 0  
100000470000-100000480000 rw-p 0 0:0 0  
100000480000-100000490000 rwxp 0 0:0 0  
100000490000-1000004a0000 rw-p 0 0:0 0  
1000004a0000-1000004b0000 rwxp 0 0:0 0  
1000004b0000-1000004c0000 rw-p 0 0:0 0  
1000004c0000-1000004d0000 rwxp 0 0:0 0  
1000004d0000-1000004e0000 rw-p 0 0:0 0  
1000004e0000-1000004f0000 rwxp 0 0:0 0  
1000004f0000-100000500000 rw-p 0 0:0 0  
100000500000-100000510000 rwxp 0 0:0 0  
100000510000-100000520000 rw-p 0 0:0 0  
100000520000-100000530000 rwxp 0 0:0 0  
100000530000-100000540000 rw-p 0 0:0 0  
100000540000-100000550000 rwxp 0 0:0 0  
100000550000-100000560000 rw-p 0 0:0 0  
100000560000-100000570000 rwxp 0 0:0 0  
100000570000-100000580000 rw-p 0 0:0 0  
100000580000-100000590000 rwxp 0 0:0 0  
100000590000-1000005a0000 rw-p 0 0:0 0  
1000005a0000-1000005b0000 rwxp 0 0:0 0  
1000005b0000-1000005c0000 rw-p 0 0:0 0  
1000005c0000-1000005d0000 rwxp 0 0:0 0  
1000005d0000-1000005e0000 rw-p 0 0:0 0  
1000005e0000-1000005f0000 rwxp 0 0:0 0  
1000005f0000-100000600000 rw-p 0 0:0 0  
100000600000-100000610000 rwxp 0 0:0 0  
100000610000-100000620000 rw-p 0 0:0 0  
100000620000-100000630000 rwxp 0 0:0 0  
100000630000-100000640000 rw-p 0 0:0 0  
100000640000-100000650000 rwxp 0 0:0 0  
100000650000-100000660000 rw-p 0 0:0 0  
100000660000-100000670000 rwxp 0 0:0 0  
100000670000-100000680000 rw-p 0 0:0 0  
100000680000-100000690000 rwxp 0 0:0 0  
100000690000-1000006a0000 rw-p 0 0:0 0  
1000006a0000-1000006b0000 rwxp 0 0:0 0  
1000006b0000-1000006c0000 rw-p 0 0:0 0  
1000006c0000-1000006d0000 rwxp 0 0:0 0  
1000006d0000-1000006e0000 rw-p 0 0:0 0  
1000006e0000-1000006f0000 rwxp 0 0:0 0  
1000006f0000-100000700000 rw-p 0 0:0 0  
100000700000-100000710000 rwxp 0 0:0 0  
100000710000-100000720000 rw-p 0 0:0 0  
100000720000-100000730000 rwxp 0 0:0 0  
100000730000-100000740000 rw-p 0 0:0 0  
100000740000-100000750000 rwxp 0 0:0 0  
100000750000-100000760000 rw-p 0 0:0 0  
100000760000-100000770000 rwxp 0 0:0 0  
100000770000-100000780000 rw-p 0 0:0 0  
100000780000-100000790000 rwxp 0 0:0 0  
100000790000-1000007a0000 rw-p 0 0:0 0  
1000007a0000-1000007b0000 rwxp 0 0:0 0  
1000007b0000-1000007c0000 rw-p 0 0:0 0  
1000007c0000-1000007d0000 rwxp 0 0:0 0  
1000007d0000-1000007e0000 rw-p 0 0:0 0  
1000007e0000-1000007f0000 rwxp 0 0:0 0  
1000007f0000-100000800000 rw-p 0 0:0 0  
100000800000-100000810000 rwxp 0 0:0 0  
100000810000-100000820000 rw-p 0 0:0 0  
100000820000-100000830000 rwxp 0 0:0 0  
100000830000-100000840000 rw-p 0 0:0 0  
100000840000-100000850000 rwxp 0 0:0 0  
100000850000-100000860000 rw-p 0 0:0 0  
100000860000-100000870000 rwxp 0 0:0 0  
100000870000-100000880000 rw-p 0 0:0 0  
100000880000-100000890000 rwxp 0 0:0 0  
100000890000-1000008a0000 rw-p 0 0:0 0  
1000008a0000-1000008b0000 rwxp 0 0:0 0  
1000008b0000-1000008c0000 rw-p 0 0:0 0  
1000008c0000-1000008d0000 rwxp 0 0:0 0  
1000008d0000-1000008e0000 rw-p 0 0:0 0  
1000008e0000-1000008f0000 rwxp 0 0:0 0  
1000008f0000-100000900000 rw-p 0 0:0 0  
100000900000-100000910000 rwxp 0 0:0 0  
100000910000-100000920000 rw-p 0 0:0 0  
100000920000-100000930000 rwxp 0 0:0 0  
100000930000-100000940000 rw-p 0 0:0 0  
100000940000-100000950000 rwxp 0 0:0 0  
100000950000-100000960000 rw-p 0 0:0 0  
100000960000-100000970000 rwxp 0 0:0 0  
100000970000-100000980000 rw-p 0 0:0 0  
100000980000-100000990000 rwxp 0 0:0 0  
100000990000-1000009a0000 rw-p 0 0:0 0  
1000009a0000-1000009b0000 rwxp 0 0:0 0  
1000009b0000-1000009c0000 rw-p 0 0:0 0  
1000009c0000-1000009d0000 rwxp 0 0:0 0  
1000009d0000-1000009e0000 rw-p 0 0:0 0  
1000009e0000-1000009f0000 rwxp 0 0:0 0  
1000009f0000-100000a00000 rw-p 0 0:0 0  
100000a00000-100000a10000 rwxp 0 0:0 0  
100000a10000-100000a20000 rw-p 0 0:0 0  
100000a20000-100000a30000 rwxp 0 0:0 0  
100000a30000-100000a40000 rw-p 0 0:0 0  
100000a40000-100000a50000 rwxp 0 0:0 0  
100000a50000-100000a60000 rw-p 0 0:0 0  
100000a60000-100000a70000 rwxp 0 0:0 0  
100000a70000-100000a80000 rw-p 0 0:0 0  
100000a80000-100000a90000 rwxp 0 0:0 0  
100000a90000-100000aa0000 rw-p 0 0:0 0  
100000aa0000-100000ab0000 rwxp 0 0:0 0  
100000ab0000-100000ac0000 rw-p 0 0:0 0  
100000ac0000-100000ad0000 rwxp 0 0:0 0  
100000ad0000-100000ae0000 rw-p 0 0:0 0  
100000ae0000-100000af0000 rwxp 0 0:0 0  
100000af0000-100000b00000 rw-p 0 0:0 0  
100000b00000-100000b10000 rwxp 0 0:0 0  
100000b10000-100000b20000 rw-p 0 0:0 0  
100000b20000-100000b30000 rwxp 0 0:0 0  
100000b30000-100000b40000 rw-p 0 0:0 0  
100000b40000-100000b50000 rwxp 0 0:0 0  
100000b50000-100000b60000 rw-p 0 0:0 0  
100000b60000-100000b70000 rwxp 0 0:0 0  
100000b70000-100000b80000 rw-p 0 0:0 0  
100000b80000-100000b90000 rwxp 0 0:0 0  
100000b90000-100000ba0000 rw-p 0 0:0 0  
100000ba0000-100000bb0000 rwxp 0 0:0 0  
100000bb0000-100000bc0000 rw-p 0 0:0 0  
100000bc0000-100000bd0000 rwxp 0 0:0 0  
100000bd0000-100000be0000 rw-p 0 0:0 0  
100000be0000-100000bf0000 rwxp 0 0:0 0  
100000bf0000-100000c00000 rw-p 0 0:0 0  
100000c00000-100000c10000 rwxp 0 0:0 0  
100000c10000-100000c20000 rw-p 0 0:0 0  
100000c20000-100000c30000 rwxp 0 0:0 0  
100000c30000-100000c40000 rw-p 0 0:0 0  
100000c40000-100000c50000 rwxp 0 0:0 0  
100000c50000-100000c60000 rw-p 0 0:0 0  
100000c60000-100000c70000 rwxp 0 0:0 0  
100000c70000-100000c80000 rw-p 0 0:0 0  
100000c80000-100000c90000 rwxp 0 0:0 0  
100000c90000-100000ca0000 rw-p 0 0:0 0  
100000ca0000-100000cb0000 rwxp 0 0:0 0  
100000cb0000-100000cc0000 rw-p 0 0:0 0  
100000cc0000-100000cd0000 rwxp 0 0:0 0  
100000cd0000-100000ce0000 rw-p 0 0:0 0  
100000ce0000-100000cf0000 rwxp 0 0:0 0  
100000cf0000-100000d00000 rw-p 0 0:0 0  
100000d00000-100000d10000 rwxp 0 0:0 0  
100000d10000-100000d20000 rw-p 0 0:0 0  
100000d20000-100000d30000 rwxp 0 0:0 0  
100000d30000-100000d40000 rw-p 0 0:0 0  
100000d40000-100000d50000 rwxp 0 0:0 0  
100000d50000-100000d60000 rw-p 0 0:0 0  
100000d60000-100000d70000 rwxp 0 0:0 0  
100000d70000-100000d80000 rw-p 0 0:0 0  
100000d80000-100000d90000 rwxp 0 0:0 0  
100000d90000-100000da0000 rw-p 0 0:0 0  
100000da0000-100000db0000 rwxp 0 0:0 0  
100000db0000-100000dc0000 rw-p 0 0:0 0  
100000dc0000-100000dd0000 rwxp 0 0:0 0  
100000dd0000-100000de0000 rw-p 0 0:0 0  
100000de0000-100000df0000 rwxp 0 0:0 0  
100000df0000-100000e00000 rw-p 0 0:0 0  
100000e00000-100000e10000 rwxp 0 0:0 0  
100000e10000-100000e20000 rw-p 0 0:0 0  
100000e20000-100000e30000 rwxp 0 0:0 0  
100000e30000-100000e40000 rw-p 0 0:0 0  
100000e40000-100000e50000 rwxp 0 0:0 0  
100000e50000-100000e60000 rw-p 0 0:0 0  
100000e60000-100000e70000 rwxp 0 0:0 0  
100000e70000-100000e80000 rw-p 0 0:0 0  
100000e80000-100000e90000 rwxp 0 0:0 0  
100000e90000-100000ea0000 rw-p 0 0:0 0  
100000ea0000-100000eb0000 rwxp 0 0:0 0  
100000eb0000-100000ec0000 rw-p 0 0:0 0  
100000ec0000-100000ed0000 rwxp 0 0:0 0  
100000ed0000-100000ee0000 rw-p 0 0:0 0  
100000ee0000-100000ef0000 rwxp 0 0:0 0  
100000ef0000-100000f00000 rw-p 0 0:0 0  
100000f00000-100000f10000 rwxp 0 0:0 0  
100000f10000-100000f20000 rw-p 0 0:0 0  
100000f20000-100000f30000 rwxp 0 0:0 0  
100000f30000-100000f40000 rw-p 0 0:0 0  
100000f40000-100000f50000 rwxp 0 0:0 0  
100000f50000-100000f60000 rw-p 0 0:0 0  
100000f60000-100000f70000 rwxp 0 0:0 0  
100000f70000-100000f80000 rw-p 0 0:0 0  
100000f80000-100000f90000 rwxp 0 0:0 0  
100000f90000-100000fa0000 rw-p 0 0:0 0  
100000fa0000-100000fb0000 rwxp 0 0:0 0  
100000fb0000-100000fc0000 rw-p 0 0:0 0  
100000fc0000-100000fd0000 rwxp 0 0:0 0  
100000fd0000-100000fe0000 rw-p 0 0:0 0  
100000fe0000-100000ff0000 rwxp 0 0:0 0  
100000ff0000-100001000000 rw-p 0 0:0 0  
100001000000-100001010000 rwxp 0 0:0 0  
100001010000-100001020000 rw-p 0 0:0 0  
100001020000-100001030000 rwxp 0 0:0 0  
100001030000-100001040000 rw-p 0 0:0 0  
100001040000-100001050000 rwxp 0 0:0 0  
100001050000-100001060000 rw-p 0 0:0 0  
100001060000-100001070000 rwxp 0 0:0 0  
100001070000-100001080000 rw-p 0 0:0 0  
100001080000-100001090000 rwxp 0 0:0 0  
100001090000-1000010a0000 rw-p 0 0:0 0  
1000010a0000-1000010b0000 rwxp 0 0:0 0  
1000010b0000-1000010c0000 rw-p 0 0:0 0  
1000010c0000-1000010d0000 rwxp 0 0:0 0  
1000010d0000-1000010e0000 rw-p 0 0:0 0  
1000010e0000-1000010f0000 rwxp 0 0:0 0  
1000010f0000-100001100000 rw-p 0 0:0 0  
100001100000-100001110000 rwxp 0 0:0 0  
100001110000-100001120000 rw-p 0 0:0 0  
100001120000-100001130000 rwxp 0 0:0 0  
100001130000-100001140000 rw-p 0 0:0 0  
100001140000-100001150000 rwxp 0 0:0 0  
100001150000-100001160000 rw-p 0 0:0 0  
100001160000-100001170000 rwxp 0 0:0 0  
100001170000-100001180000 rw-p 0 0:0 0  
100001180000-100001190000 rwxp 0 0:0 0  
100001190000-1000011a0000 rw-p 0 0:0 0  
1000011a0000-1000011b0000 rwxp 0 0:0 0  
1000011b0000-1000011c0000 rw-p 0 0:0 0  
1000011c0000-1000011d0000 rwxp 0 0:0 0  
1000011d0000-1000011e0000 rw-p 0 0:0 0  
1000011e0000-1000011f0000 rwxp 0 0:0 0  
1000011f0000-100001200000 rw-p 0 0:0 0  
100001200000-100001210000 rwxp 0 0:0 0  
100001210000-100001220000 rw-p 0 0:0 0  
100001220000-100001230000 rwxp 0 0:0 0  
100001230000-100001240000 rw-p 0 0:0 0  
100001240000-100001250000 rwxp 0 0:0 0  
100001250000-100001260000 rw-p 0 0:0 0  
100001260000-100001270000 rwxp 0 0:0 0  
100001270000-100001280000 rw-p 0 0:0 0  
100001280000-100001290000 rwxp 0 0:0 0  
100001290000-1000012a0000 rw-p 0 0:0 0  
1000012a0000-1000012b0000 rwxp 0 0:0 0  
1000012b0000-1000012c0000 rw-p 0 0:0 0  
1000012c0000-1000012d0000 rwxp 0 0:0 0  
1000012d0000-1000012e0000 rw-p 0 0:0 0  
1000012e0000-1000012f0000 rwxp 0 0:0 0  
1000012f0000-100001300000 rw-p 0 0:0 0  
100001300000-100001310000 rwxp 0 0:0 0  
100001310000-100001320000 rw-p 0 0:0 0  
100001320000-100001330000 rwxp 0 0:0 0  
100001330000-100001340000 rw-p 0 0:0 0  
100001340000-100001350000 rwxp 0 0:0 0  
100001350000-100001360000 rw-p 0 0:0 0  
100001360000-100001370000 rwxp 0 0:0 0  
100001370000-100001380000 rw-p 0 0:0 0  
100001380000-100001390000 rwxp 0 0:0 0  
100001390000-1000013a0000 rw-p 0 0:0 0  
1000013a0000-1000013b0000 rwxp 0 0:0 0  
1000013b0000-1000013c0000 rw-p 0 0:0 0  
1000013c0000-1000013d0000 rwxp 0 0:0 0  
1000013d0000-1000013e0000 rw-p 0 0:0 0  
1000013e0000-1000013f0000 rwxp 0 0:0 0  
1000013f0000-100001400000 rw-p 0 0:0 0  
100001400000-100001410000 rwxp 0 0:0 0  
100001410000-100001420000 rw-p 0 0:0 0  
100001420000-100001430000 rwxp 0 0:0 0  
100001430000-100001440000 rw-p 0 0:0 0  
100001440000-100001450000 rwxp 0 0:0 0  
100001450000-100001460000 rw-p 0 0:0 0  
100001460000-100001470000 rwxp 0 0:0 0  
100001470000-100001480000 rw-p 0 0:0 0  
100001480000-100001490000 rwxp 0 0:0 0  
100001490000-1000014a0000 rw-p 0 0:0 0  
1000014a0000-1000014b0000 rwxp 0 0:0 0  
1000014b0000-1000014c0000 rw-p 0 0:0 0  
1000014c0000-1000014d0000 rwxp 0 0:0 0  
1000014d0000-1000014e0000 rw-p 0 0:0 0  
1000014e0000-1000014f0000 rwxp 0 0:0 0  
1000014f0000-100001500000 rw-p 0 0:0 0  
100001500000-100001510000 rwxp 0 0:0 0  
100001510000-100001520000 rw-p 0 0:0 0  
100001520000-100001530000 rwxp 0 0:0 0  
100001530000-100001540000 rw-p 0 0:0 0  
100001540000-100001550000 rwxp 0 0:0 0  
100001550000-100001560000 rw-p 0 0:0 0  
100001560000-100001570000 rwxp 0 0:0 0  
100001570000-100001580000 rw-p 0 0:0 0  
100001580000-100001590000 rwxp 0 0:0 0  
100001590000-1000015a0000 rw-p 0 0:0 0  
1000015a0000-1000015b0000 rwxp 0 0:0 0  
1000015b0000-1000015c0000 rw-p 0 0:0 0  
1000015c0000-1000015d0000 rwxp 0 0:0 0  
1000015d0000-1000015e0000 rw-p 0 0:0 0  
1000015e0000-1000015f0000 rwxp 0 0:0 0  
1000015f0000-100001600000 rw-p 0 0:0 0  
100001600000-100001610000 rwxp 0 0:0 0  
100001610000-100001620000 rw-p 0 0:0 0  
100001620000-100001630000 rwxp 0 0:0 0  
100001630000-100001640000 rw-p 0 0:0 0  
100001640000-100001650000 rwxp 0 0:0 0  
100001650000-100001660000 rw-p 0 0:0 0  
100001660000-100001670000 rwxp 0 0:0 0  
100001670000-100001680000 rw-p 0 0:0 0  
100001680000-100001690000 rwxp 0 0:0 0  
100001690000-1000016a0000 rw-p 0 0:0 0  
1000016a0000-1000016b0000 rwxp 0 0:0 0  
1000016b0000-1000016c0000 rw-p 0 0:0 0  
1000016c0000-1000016d0000 rwxp 0 0:0 0  
1000016d0000-1000016e0000 rw-p 0 0:0 0  
1000016e0000-1000016f0000 rwxp 0 0:0 0  
1000016f0000-100001700000 rw-p 0 0:0 0  
100001700000-100001710000 rwxp 0 0:0 0  
100001710000-100001720000 rw-p 0 0:0 0  
100001720000-100001730000 rwxp 0 0:0 0  
100001730000-100001740000 rw-p 0 0:0 0  
100001740000-100001750000 rwxp 0 0:0 0  
100001750000-100001760000 rw-p 0 0:0 0  
100001760000-100001770000 rwxp 0 0:0 0  
100001770000-100001780000 rw-p 0 0:0 0  
100001780000-100001790000 rwxp 0 0:0 0  
100001790000-1000017a0000 rw-p 0 0:0 0  
1000017a0000-1000017b0000 rwxp 0 0:0 0  
1000017b0000-1000017c0000 rw-p 0 0:0 0  
1000017c0000-1000017d0000 rwxp 0 0:0 0  
1000017d0000-1000017e0000 rw-p 0 0:0 0  
1000017e0000-1000017f0000 rwxp 0 0:0 0  
1000017f0000-100001800000 rw-p 0 0:0 0  
100001800000-100001810000 rwxp 0 0:0 0  
100001810000-100001820000 rw-p 0 0:0 0  
100001820000-100001830000 rwxp 0 0:0 0  
100001830000-100001840000 rw-p 0 0:0 0  
100001840000-100001850000 rwxp 0 0:0 0  
100001850000-100001860000 rw-p 0 0:0 0  
100001860000-100001870000 rwxp 0 0:0 0  
100001870000-100001880000 rw-p 0 0:0 0  
100001880000-100001890000 rwxp 0 0:0 0  
100001890000-1000018a0000 rw-p 0 0:0 0  
1000018a0000-1000018b0000 rwxp 0 0:0 0  
1000018b0000-1000018c0000 rw-p 0 0:0 0  
1000018c0000-1000018d0000 rwxp 0 0:0 0  
1000018d0000-1000018e0000 rw-p 0 0:0 0  
1000018e0000-1000018f0000 rwxp 0 0:0 0  
1000018f0000-100001900000 rw-p 0 0:0 0  
100001900000-100001910000 rwxp 0 0:0 0  
100001910000-100001920000 rw-p 0 0:0 0  
100001920000-100001930000 rwxp 0 0:0 0  
100001930000-100001940000 rw-p 0 0:0 0  
100001940000-100001950000 rwxp 0 0:0 0  
100001950000-100001960000 rw-p 0 0:0 0  
100001960000-100001970000 rwxp 0 0:0 0  
100001970000-100001980000 rw-p 0 0:0 0  
100001980000-100001990000 rwxp 0 0:0 0  
100001990000-1000019a0000 rw-p 0 0:0 0  
1000019a0000-1000019b0000 rwxp 0 0:0 0  
1000019b0000-1000019c0000 rw-p 0 0:0 0  
1000019c0000-1000019d0000 rwxp 0 0:0 0  
1000019d0000-1000019e0000 rw-p 0 0:0 0  
1000019e0000-1000019f0000 rwxp 0 0:0 0  
1000019f0000-100001a00000 rw-p 0 0:0 0  
100001a00000-100001a10000 rwxp 0 0:0 0  
100001a10000-100001a20000 rw-p 0 0:0 0  
100001a20000-100001a30000 rwxp 0 0:0 0  
100001a30000-100001a40000 rw-p 0 0:0 0  
100001a40000-100001a50000 rwxp 0 0:0 0  
100001a50000-100001a60000 rw-p 0 0:0 0  
100001a60000-100001a70000 rwxp 0 0:0 0  
100001a70000-100001a80000 rw-p 0 0:0 0  
100001a80000-100001a90000 rwxp 0 0:0 0  
100001a90000-100001aa0000 rw-p 0 0:0 0  
100001aa0000-100001ab0000 rwxp 0 0:0 0  
100001ab0000-100001ac0000 rw-p 0 0:0 0  
100001ac0000-100001ad0000 rwxp 0 0:0 0  
100001ad0000-100001ae0000 rw-p 0 0:0 0  
100001ae0000-100001af0000 rwxp 0 0:0 0  
100001af0000-100001b00000 rw-p 0 0:0 0  
100001b00000-100001b10000 rwxp 0 0:0 0  
100001b10000-100001b20000 rw-p 0 0:0 0  
100001b20000-100001b30000 rwxp 0 0:0 0  
100001b30000-100001b40000 rw-p 0 0:0 0  
100001b40000-100001b50000 rwxp 0 0:0 0  
100001b50000-100001b60000 rw-p 0 0:0 0  
100001b60000-100001b70000 rwxp 0 0:0 0  
100001b70000-100001b80000 rw-p 0 0:0 0  
100001b80000-100001b90000 rwxp 0 0:0 0  
100001b90000-100001ba0000 rw-p 0 0:0 0  
100001ba0000-100001bb0000 rwxp 0 0:0 0  
100001bb0000-100001bc0000 rw-p 0 0:0 0  
100001bc0000-100001bd0000 rwxp 0 0:0 0  
100001bd0000-100001be0000 rw-p 0 0:0 0  
100001be0000-100001bf0000 rwxp 0 0:0 0  
100001bf0000-100001c00000 rw-p 0 0:0 0  
100001c00000-100001c10000 rwxp 0 0:0 0  
100001c10000-100001c20000 rw-p 0 0:0 0  
100001c20000-100001c30000 rwxp 0 0:0 0  
100001c30000-100001c40000 rw-p 0 0:0 0  
100001c40000-100001c50000 rwxp 0 0:0 0  
100001c50000-100001c60000 rw-p 0 0:0 0  
100001c60000-100001c70000 rwxp 0 0:0 0  
100001c70000-100001c80000 rw-p 0 0:0 0  
100001c80000-100001c90000 rwxp 0 0:0 0  
100001c90000-100001ca0000 rw-p 0 0:0 0  
100001ca0000-100001cb0000 rwxp 0 0:0 0  
100001cb0000-100001cc0000 rw-p 0 0:0 0  
100001cc0000-100001cd0000 rwxp 0 0:0 0  
100001cd0000-100001ce0000 rw-p 0 0:0 0  
100001ce0000-100001cf0000 rwxp 0 0:0 0  
100001cf0000-100001d00000 rw-p 0 0:0 0  
100001d00000-100001d10000 rwxp 0 0:0 0  
100001d10000-100001d20000 rw-p 0 0:0 0  
100001d20000-100001d30000 rwxp 0 0:0 0  
100001d30000-100001d40000 rw-p 0 0:0 0  
100001d40000-100001d50000 rwxp 0 0:0 0  
100001d50000-100001d60000 rw-p 0 0:0 0  
100001d60000-100001d70000 rwxp 0 0:0 0  
100001d70000-100001d80000 rw-p 0 0:0 0  
100001d80000-100001d90000 rwxp 0 0:0 0  
100001d90000-100001da0000 rw-p 0 0:0 0  
100001da0000-100001db0000 rwxp 0 0:0 0  
100001db0000-100001dc0000 rw-p 0 0:0 0  
100001dc0000-100001dd0000 rwxp 0 0:0 0  
100001dd0000-100001de0000 rw-p 0 0:0 0  
100001de0000-100001df0000 rwxp 0 0:0 0  
100001df0000-100001e00000 rw-p 0 0:0 0  
100001e00000-100001e10000 rwxp 0 0:0 0  
100001e10000-100001e20000 rw-p 0 0:0 0  
100001e20000-100001e30000 rwxp 0 0:0 0  
100001e30000-100001e40000 rw-p 0 0:0 0  
100001e40000-100001e50000 rwxp 0 0:0 0  
100001e50000-100001e60000 rw-p 0 0:0 0  
100001e60000-100001e70000 rwxp 0 0:0 0  
100001e70000-100001e80000 rw-p 0 0:0 0  
100001e80000-100001e90000 rwxp 0 0:0 0  
100001e90000-100001ea0000 rw-p 0 0:0 0  
100001ea0000-100001eb0000 rwxp 0 0:0 0  
100001eb0000-100001ec0000 rw-p 0 0:0 0  
100001ec0000-100001ed0000 rwxp 0 0:0 0  
100001ed0000-100001ee0000 rw-p 0 0:0 0  
100001ee0000-100001ef0000 rwxp 0 0:0 0  
100001ef0000-100001f00000 rw-p 0 0:0 0  
100001f00000-100001f10000 rwxp 0 0:0 0  
100001f10000-100001f20000 rw-p 0 0:0 0  
100001f20000-100001f30000 rwxp 0 0:0 0  
100001f30000-100001f40000 rw-p 0 0:0 0  
100001f40000-100001f50000 rwxp 0 0:0 0  
100001f50000-100001f60000 rw-p 0 0:0 0  
100001f60000-100001f70000 rwxp 0 0:0 0  
100001f70000-100001f80000 rw-p 0 0:0 0  
100001f80000-100001f90000 rwxp 0 0:0 0  
100001f90000-100001fa0000 rw-p 0 0:0 0  
100001fa0000-100001fb0000 rwxp 0 0:0 0  
100001fb0000-100001fc0000 rw-p 0 0:0 0  
100001fc0000-100001fd0000 rwxp 0 0:0 0  
100001fd0000-100001fe0000 rw-p 0 0:0 0  
100001fe0000-100001ff0000 rwxp 0 0:0 0  
100001ff0000-100002000000 rw-p 0 0:0 0  
100002000000-100002010000 rwxp 0 0:0 0  
100002010000-100002020000 rw-p 0 0:0 0  
100002020000-100002030000 rwxp 0 0:0 0  
100002030000-100002040000 rw-p 0 0:0 0  
100002040000-100002050000 rwxp 0 0:0 0  
100002050000-100002060000 rw-p 0 0:0 0  
100002060000-100002070000 rwxp 0 0:0 0  
100002070000-100002080000 rw-p 0 0:0 0  
100002080000-100002090000 rwxp 0 0:0 0  
100002090000-1000020a0000 rw-p 0 0:0 0  
1000020a0000-1000020b0000 rwxp 0 0:0 0  
1000020b0000-1000020c0000 rw-p 0 0:0 0  
1000020c0000-1000020d0000 rwxp 0 0:0 0  
1000020d0000-1000020e0000 rw-p 0 0:0 0  
1000020e0000-1000020f0000 rwxp 0 0:0 0  
1000020f0000-100002100000 rw-p 0 0:0 0  
100002100000-100002110000 rwxp 0 0:0 0  
100002110000-100002120000 rw-p 0 0:0 0  
100002120000-100002130000 rwxp 0 0:0 0  
100002130000-100002140000 rw-p 0 0:0 0  
100002140000-100002150000 rwxp 0 0:0 0  
100002150000-100002160000 rw-p 0 0:0 0  
100002160000-100002170000 rwxp 0 0:0 0  
100002170000-100002180000 rw-p 0 0:0 0  
100002180000-100002190000 rwxp 0 0:0 0  
100002190000-1000021a0000 rw-p 0 0:0 0  
1000021a0000-1000021b0000 rwxp 0 0:0 0  
1000021b0000-1000021c0000 rw-p 0 0:0 0  
1000021c0000-1000021d0000 rwxp 0 0:0 0  
1000021d0000-1000021e0000 rw-p 0 0:0 0  
1000021e0000-1000021f0000 rwxp 0 0:0 0  
1000021f0000-100002200000 rw-p 0 0:0 0  
100002200000-100002210000 rwxp 0 0:0 0  
100002210000-100002220000 rw-p 0 0:0 0  
100002220000-100002230000 rwxp 0 0:0 0  
100002230000-100002240000 rw-p 0 0:0 0  
100002240000-100002250000 rwxp 0 0:0 0  
100002250000-100002260000 rw-p 0 0:0 0  
3fffff800000-400000000000 rw-s 0 0:0 0  [stack]
RESULT: you need check McKernel Log & Dump MAPS.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 8 
TEST_SUITE: procfs
TEST_NUMBER: 8
ARGS: 
allocated: 0x00000020010000
dump /proc/7584/pagemap(offset:0x00000000010008):0x88000000000042a6
RESULT: you need check McKernel Log & Dump PAGEMAP.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 9 
TEST_SUITE: procfs
TEST_NUMBER: 9
ARGS: 
output: /proc/stat
cpu0
cpu1
cpu2
cpu3
cpu4
cpu5
cpu6
cpu7
cpu8
cpu9
cpu10
cpu11
RESULT: you need check Dump STAT.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 10 
TEST_SUITE: procfs
TEST_NUMBER: 10
ARGS: 
output: /proc/7614/status
Pid:	7614
Uid:	0	0	0	0
Gid:	0	0	0	0
State:  R (running)
VmLck:          0 kB
Cpus_allowed:   fff
Cpus_allowed_list:	0-11
Mems_allowed:   00000000,00000000,00000000,00000000,00000000,00000000,00000000,0000000f
Mems_allowed_list:	0-3
RESULT: you need check Dump STATUS.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 11 
TEST_SUITE: procfs
TEST_NUMBER: 11
ARGS: 
output: /proc/7629/cmdline
/opt/ostestset/util/../bin/test_mck
RESULT: you need check Dump CMDLINE.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 12 
TEST_SUITE: procfs
TEST_NUMBER: 12
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s procfs -n 13 
TEST_SUITE: procfs
TEST_NUMBER: 13
ARGS: 
dump /proc/7659/pagemap(offset:0x00):0x800000000000000
RESULT: you need check McKernel Log & Dump PAGEMAP.
## fork_execve ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fork_execve -n 0 -- -f /opt/ostestset/util/../bin/execve_app 
TEST_SUITE: fork_execve
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/../bin/execve_app 
execve sample application done.
RESULT: ok
## shellscript ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_shell.sh 
## echo command ##
Hello World
## pwd command ##
/opt/ostestset
## outside command(execve_app) ##
/opt/ostestset/util/../bin/test_shell.sh: line 19: /execve_app: No such file or directory
## for, seq, if-elif-else ##
$temp == 0
$temp != 5 && $temp != 0
$temp != 5 && $temp != 0
$temp != 5 && $temp != 0
$temp != 5 && $temp != 0
$temp == 5
## echo, cat, rm command ##
cat, rm command.
## shellfunction ##
## ls command ##
bin   core.host.6776 execve_app      lv11_copy_on_write test_drv
condition_monitor  core.host.7399 freeze_thaw      lv12_signal test_mck
core.23399   core.madvise18.23399  get_rusage      lv14_large_pages   test_usr
core.2396   core.madvise18.2396   hello_world      lv15_continuous_execution  util
core.host.27708    core.madvise19.23399  inspect_mem_used      make_arm64.sh
core.host.27728    core.madvise19.2396   large_bss      shellscript
core.host.28352    coredump_util lv07_read-write_with-glibc      show_affinity
core.host.6756     cpu_pa_info   lv09_syscall_page_fault_forwqarding  socket_TP
shell end.(shellfunc called.)
## mremap_mmap_anon ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 0 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 1 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 1
ARGS: 
RESULT: mremap error.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 2 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 3 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 3
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 4 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 4
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 5 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 5
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 6 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 6
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 7 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 7
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 8 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 8
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 9 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 9
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 10 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 10
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 11 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 11
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 12 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 12
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 13 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 13
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 14 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 14
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 15 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 15
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 16 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 16
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 100 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 100
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 101 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 101
ARGS: 
RESULT: mremap error.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 102 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 102
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 103 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 103
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 104 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 104
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 105 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 105
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 106 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 106
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 107 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 107
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 108 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 108
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 109 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 109
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 110 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 110
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 111 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 111
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 112 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 112
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 113 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 113
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 114 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 114
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 115 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 115
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 116 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 116
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 200 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 200
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 201 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 201
ARGS: 
RESULT: mremap error.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 202 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 202
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 203 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 203
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 204 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 204
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 205 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 205
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 206 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 206
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 207 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 207
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 208 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 208
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 209 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 209
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 210 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 210
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 211 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 211
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 212 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 212
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 213 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 213
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 214 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 214
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 215 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 215
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 216 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 216
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 300 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 300
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 301 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 301
ARGS: 
RESULT: mremap error.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 302 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 302
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 303 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 303
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 304 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 304
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 305 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 305
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 306 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 306
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 307 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 307
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 308 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 308
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 309 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 309
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 310 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 310
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 311 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 311
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 312 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 312
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 313 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 313
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 314 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 314
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 315 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 315
ARGS: 
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mremap_mmap_anon -n 316 
TEST_SUITE: mremap_mmap_anon
TEST_NUMBER: 316
ARGS: 
## get_cpu_id ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_cpu_id -n 0 
TEST_SUITE: get_cpu_id
TEST_NUMBER: 0
ARGS: 
[pid=8843, tid=8843] process running on cpu=0
RESULT: ok
sh: /opt/ostestset/util/kmsgcat.sh: No such file or directory
## setpgid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setpgid -n 0 
TEST_SUITE: setpgid
TEST_NUMBER: 0
ARGS: 
[child] pid=8875, pgid=23388
[parent] now rewrite child pgid
[child] pid=8875, pgid=8875
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setpgid -n 1 
TEST_SUITE: setpgid
TEST_NUMBER: 1
ARGS: 
setpgid result:-1, errno:22 (expect error is "EINVAL"=22)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setpgid -n 2 
TEST_SUITE: setpgid
TEST_NUMBER: 2
ARGS: 
setpgid result:-1, errno:3 (expect error is "ESRCH"=3)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setpgid -n 3 
TEST_SUITE: setpgid
TEST_NUMBER: 3
ARGS: 
setpgid result:-1, errno:1 (expect error is "EPERM"=1)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setpgid -n 4 -- -f /opt/ostestset/util/../bin/execve_app 
TEST_SUITE: setpgid
TEST_NUMBER: 4
ARGS: -f /opt/ostestset/util/../bin/execve_app 
setpgid result:-1, errno:13 (expect error is "EACCES"=13)
execve sample application done.
RESULT: ok
## kill ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s kill -n 0 -- -p 11 
TEST_SUITE: kill
TEST_NUMBER: 0
ARGS: -p 11 
Generate child process pid:8979, pgid:23388
Generate child process pid:8993, pgid:23388
Generate child process pid:9007, pgid:23388
Generate child process pid:9021, pgid:23388
Generate child process pid:9035, pgid:23388
Generate child process pid:9049, pgid:23388
Generate child process pid:9063, pgid:23388
Generate child process pid:9077, pgid:23388
Generate child process pid:9091, pgid:23388
Generate child process pid:9105, pgid:23388
Generate child process pid:9119, pgid:23388
wait for a few sec...
send signal to same pgids
[pid:8963, pgid:23388] Get signal.
[pid:8993, pgid:23388] Get signal.
[pid:8979, pgid:23388] Get signal.
[pid:9021, pgid:23388] Get signal.
[pid:9035, pgid:23388] Get signal.
[pid:9049, pgid:23388] Get signal.
[pid:9063, pgid:23388] Get signal.
[pid:9105, pgid:23388] Get signal.
[pid:9077, pgid:23388] Get signal.
[pid:9007, pgid:23388] Get signal.
[pid:9091, pgid:23388] Get signal.
[pid:9119, pgid:23388] Get signal.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s kill -n 1 -- -p 11 
TEST_SUITE: kill
TEST_NUMBER: 1
ARGS: -p 11 
Generate child process pid:9148, pgid:23388
Generate child process pid:9162, pgid:23388
Generate child process pid:9176, pgid:23388
Generate child process pid:9190, pgid:23388
Generate child process pid:9204, pgid:23388
Generate child process pid:9218, pgid:23388
Generate child process pid:9232, pgid:23388
Generate child process pid:9246, pgid:23388
Generate child process pid:9260, pgid:23388
Generate child process pid:9274, pgid:23388
Generate child process pid:9288, pgid:23388
wait for a few sec...
Send to all processes that have permission to send a signal.
[pid:9232, pgid:23388] Get signal.
[pid:9274, pgid:23388] Get signal.
[pid:9218, pgid:23388] Get signal.
[pid:9133, pgid:23388] Get signal.
[pid:9288, pgid:23388] Get signal.
[pid:9190, pgid:23388] Get signal.
[pid:9246, pgid:23388] Get signal.
[pid:9148, pgid:23388] Get signal.
[pid:9204, pgid:23388] Get signal.
[pid:9260, pgid:23388] Get signal.
[pid:9176, pgid:23388] Get signal.
[pid:9162, pgid:23388] Get signal.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s kill -n 2 -- -p 11 
TEST_SUITE: kill
TEST_NUMBER: 2
ARGS: -p 11 
Generate child process pid:9317, pgid:23388
Generate child process pid:9331, pgid:23388
Generate child process pid:9345, pgid:23388
Generate child process pid:9359, pgid:23388
Generate child process pid:9373, pgid:23388
Generate child process pid:9387, pgid:23388
Generate child process pid:9401, pgid:23388
Generate child process pid:9415, pgid:23388
Generate child process pid:9429, pgid:23388
Generate child process pid:9443, pgid:23388
Generate child process pid:9457, pgid:23388
wait for a few sec...
Set child process(pid:9317) pgid:23388 => 9317
Set child process(pid:9331) pgid:23388 => 9317
Set child process(pid:9345) pgid:23388 => 9317
Set child process(pid:9359) pgid:23388 => 9317
Set child process(pid:9373) pgid:23388 => 9317
Set child process(pid:9387) pgid:23388 => 9317
Set child process(pid:9401) pgid:23388 => 9317
Set child process(pid:9415) pgid:23388 => 9317
Set child process(pid:9429) pgid:23388 => 9317
Set child process(pid:9443) pgid:23388 => 9317
Set child process(pid:9457) pgid:23388 => 9317
send signal to target pgid(=9317)s
[pid:9457, pgid:9317] Get signal.
[pid:9373, pgid:9317] Get signal.
[pid:9429, pgid:9317] Get signal.
[pid:9359, pgid:9317] Get signal.
[pid:9401, pgid:9317] Get signal.
[pid:9345, pgid:9317] Get signal.
[pid:9387, pgid:9317] Get signal.
[pid:9415, pgid:9317] Get signal.
[pid:9331, pgid:9317] Get signal.
[pid:9443, pgid:9317] Get signal.
[pid:9317, pgid:9317] Get signal.
RESULT: ok
## sched_setaffinity ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setaffinity -n 0 -- -p 12 
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 0
ARGS: -p 12 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setaffinity -n 1 -- -p 12 
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 1
ARGS: -p 12 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setaffinity -n 3 -- -p 12 
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 3
ARGS: -p 12 
sched_setaffinity result:-1, errno:14 (expect error is "EFAULT"=14)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setaffinity -n 4 -- -p 12 
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 4
ARGS: -p 12 
sched_setaffinity result:-1, errno:22 (expect error is "EINVAL"=22)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setaffinity -n 5 
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 5
ARGS: 
sched_setaffinity result:-1, errno:22 (expect error is "EINVAL"=22)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setaffinity -n 6 -- -p 12 
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 6
ARGS: -p 12 
sched_setaffinity result:-1, errno:3 (expect error is "ESRCH"=3)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setaffinity -n 8 -- -p 12 
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 8
ARGS: -p 12 
[child] before migrate cpuid=1
[child] after migrate cpuid=11
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setaffinity -n 12 -- -p 12 
TEST_SUITE: sched_setaffinity
TEST_NUMBER: 12
ARGS: -p 12 
RESULT: ok
## sched_getaffinity ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getaffinity -n 0 -- -p 12 
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 0
ARGS: -p 12 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getaffinity -n 1 
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 1
ARGS: 
sched_getaffinity result:-1, errno:14 (expect error is "EFAULT"=14)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getaffinity -n 2 -- -p 12 
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 2
ARGS: -p 12 
sched_getaffinity result:-1, errno:22 (expect error is "EINVAL"=22)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getaffinity -n 3 -- -p 12 
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 3
ARGS: -p 12 
sched_getaffinity result:-1, errno:3 (expect error is "ESRCH"=3)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getaffinity -n 4 -- -p 12 
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 4
ARGS: -p 12 
[size=2] sched_getaffinity result:-1, errno:22
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getaffinity -n 5 -- -p 12 
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 5
ARGS: -p 12 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getaffinity -n 6 -- -p 17 -f /opt/ostestset/util/../bin/show_affinity -- -p 17 
TEST_SUITE: sched_getaffinity
TEST_NUMBER: 6
ARGS: -p 17 -f /opt/ostestset/util/../bin/show_affinity -- -p 17 
==waiting for child process finish..==
========CHILD  PROCESS========
CPU_ISSET(0)=TRUE
CPU_ISSET(1)=TRUE
CPU_ISSET(2)=TRUE
CPU_ISSET(3)=TRUE
CPU_ISSET(4)=TRUE
CPU_ISSET(5)=TRUE
CPU_ISSET(6)=TRUE
CPU_ISSET(7)=TRUE
CPU_ISSET(8)=TRUE
CPU_ISSET(9)=TRUE
CPU_ISSET(10)=TRUE
CPU_ISSET(11)=TRUE
CPU_ISSET(12)=FALSE
CPU_ISSET(13)=FALSE
CPU_ISSET(14)=FALSE
CPU_ISSET(15)=FALSE
CPU_ISSET(16)=FALSE
========CHILD  PROCESS========
========EXECED PROCESS========
CPU_ISSET(0)=TRUE
CPU_ISSET(1)=TRUE
CPU_ISSET(2)=TRUE
CPU_ISSET(3)=TRUE
CPU_ISSET(4)=TRUE
CPU_ISSET(5)=TRUE
CPU_ISSET(6)=TRUE
CPU_ISSET(7)=TRUE
CPU_ISSET(8)=TRUE
CPU_ISSET(9)=TRUE
CPU_ISSET(10)=TRUE
CPU_ISSET(11)=TRUE
CPU_ISSET(12)=FALSE
CPU_ISSET(13)=FALSE
CPU_ISSET(14)=FALSE
CPU_ISSET(15)=FALSE
CPU_ISSET(16)=FALSE
========EXECED PROCESS========
==Please check affinity is taken over after execve==
RESULT: ok
## pthread_setaffinity ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s pthread_setaffinity -n 0 -- -p 12 
TEST_SUITE: pthread_setaffinity
TEST_NUMBER: 0
ARGS: -p 12 
RESULT: ok
## pthread_getaffinity ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s pthread_getaffinity -n 0 -- -p 12 
TEST_SUITE: pthread_getaffinity
TEST_NUMBER: 0
ARGS: -p 12 
RESULT: ok
## enosys ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s enosys -n 2 
TEST_SUITE: enosys
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## getcpu ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getcpu -n 0 
TEST_SUITE: getcpu
TEST_NUMBER: 0
ARGS: 
exp_cpu = 0, getcpu()cpu = 0
RESULT: ok
## getegid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getegid -n 0 -- -e 1050 
TEST_SUITE: getegid
TEST_NUMBER: 0
ARGS: -e 1050 
getegid() = 0
setregid(1050, 1050) = 0, errno = 0
getegid() = 1050
RESULT: ok
## geteuid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s geteuid -n 0 -- -e 1000 
TEST_SUITE: geteuid
TEST_NUMBER: 0
ARGS: -e 1000 
geteuid() = 0
setreuid(1000, 1000) = 0, errno = 0
geteuid() = 1000
RESULT: ok
## getgid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getgid -n 0 -- -g 1050 
TEST_SUITE: getgid
TEST_NUMBER: 0
ARGS: -g 1050 
getgid() = 0
setgid(1050) = 0, errno = 0
getgid() = 1050
RESULT: ok
## getppid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getppid -n 0 
TEST_SUITE: getppid
TEST_NUMBER: 0
ARGS: 
[child] ppid=9844
[parent] pid=9844
RESULT: ok
## getresgid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getresgid -n 0 -- -r 1050 -e 1050 -s 1050 
TEST_SUITE: getresgid
TEST_NUMBER: 0
ARGS: -r 1050 -e 1050 -s 1050 
getresgid(0, 0, 0) = 0, errno = 0
setresgid(1050, 1050, 1050) = 0, errno = 0
getresgid(1050, 1050, 1050) = 0, errno = 0
RESULT: ok
## getresuid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getresuid -n 0 -- -r 1000 -e 1000 -s 1000 
TEST_SUITE: getresuid
TEST_NUMBER: 0
ARGS: -r 1000 -e 1000 -s 1000 
getresuid(0, 0, 0) = 0, errno = 0
setresuid(1000, 1000, 1000) = 0, errno = 0
getresuid(1000, 1000, 1000) = 0, errno = 0
RESULT: ok
## getuid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getuid -n 0 -- -u 1000 
TEST_SUITE: getuid
TEST_NUMBER: 0
ARGS: -u 1000 
getuid() = 0
setuid(1000) = 0, errno = 0
getuid() = 1000
RESULT: ok
## ipc ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s ipc -n 0 
TEST_SUITE: ipc
TEST_NUMBER: 0
ARGS: 
curdir = /opt/ostestset
ftok => shm_key = 385963
shmget => shm_id = 164
shmat => shm_addr = 0x100000260000
shmdt => result = 0
shmctl => result = 0
RESULT: ok
## mincore ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mincore -n 0 
TEST_SUITE: mincore
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mincore -n 1 
TEST_SUITE: mincore
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mincore -n 2 
TEST_SUITE: mincore
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mincore -n 3 
TEST_SUITE: mincore
TEST_NUMBER: 3
ARGS: 
RESULT: ok
## mlockall ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mlockall -n 0 
TEST_SUITE: mlockall
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## msync ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s msync -n 0 
TEST_SUITE: msync
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s msync -n 1 
TEST_SUITE: msync
TEST_NUMBER: 1
ARGS: 
RESULT: ok
## munlockall ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s munlockall -n 0 
TEST_SUITE: munlockall
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## page_fault_forwording ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s page_fault_forwording -n 0 
TEST_SUITE: page_fault_forwording
TEST_NUMBER: 0
ARGS: 
hello world
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s page_fault_forwording -n 1 
TEST_SUITE: page_fault_forwording
TEST_NUMBER: 1
ARGS: 
hello world
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s page_fault_forwording -n 2 
TEST_SUITE: page_fault_forwording
TEST_NUMBER: 2
ARGS: 
hello world
RESULT: ok
## process_vm_readv ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s process_vm_readv -n 0 
TEST_SUITE: process_vm_readv
TEST_NUMBER: 0
ARGS: 
TEST_SUITE: process_vm_readv
TEST_NUMBER: 999
ARGS: -a 0x3ffffffffb78 -s 100 -e 0 
RESULT: ok
RESULT: ok
## process_vm_writev ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s process_vm_writev -n 0 
TEST_SUITE: process_vm_writev
TEST_NUMBER: 0
ARGS: 
TEST_SUITE: process_vm_writev
TEST_NUMBER: 999
ARGS: -a 0x3ffffffffb70 -s 100 -e 1 
RESULT: ok
RESULT: ok
## sched_get_priority_max ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_get_priority_max -n 0 
TEST_SUITE: sched_get_priority_max
TEST_NUMBER: 0
ARGS: 
sched_get_priority_max(SCHED_RR) = 99, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_get_priority_max -n 1 
TEST_SUITE: sched_get_priority_max
TEST_NUMBER: 1
ARGS: 
sched_get_priority_max(SCHED_FIFO) = 99, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_get_priority_max -n 2 
TEST_SUITE: sched_get_priority_max
TEST_NUMBER: 2
ARGS: 
sched_get_priority_max(SCHED_OTHER) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_get_priority_max -n 3 
TEST_SUITE: sched_get_priority_max
TEST_NUMBER: 3
ARGS: 
sched_get_priority_max(SCHED_BATCH) = 0, errno = 0
RESULT: ok
## sched_get_priority_min ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_get_priority_min -n 0 
TEST_SUITE: sched_get_priority_min
TEST_NUMBER: 0
ARGS: 
sched_get_priority_min(SCHED_RR) = 1, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_get_priority_min -n 1 
TEST_SUITE: sched_get_priority_min
TEST_NUMBER: 1
ARGS: 
sched_get_priority_min(SCHED_FIFO) = 1, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_get_priority_min -n 2 
TEST_SUITE: sched_get_priority_min
TEST_NUMBER: 2
ARGS: 
sched_get_priority_min(SCHED_OTHER) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_get_priority_min -n 3 
TEST_SUITE: sched_get_priority_min
TEST_NUMBER: 3
ARGS: 
sched_get_priority_min(SCHED_BATCH) = 0, errno = 0
RESULT: ok
## sched_getparam ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getparam -n 0 
TEST_SUITE: sched_getparam
TEST_NUMBER: 0
ARGS: 
sched_getparam(10276, 0x3ffffffffbd0) = 0, errno = 0
sched_setscheduler(10276, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_getparam(10276, 0x3ffffffffbd0) = 0, errno = 0
sched_setparam(10276, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(10276, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getparam -n 1 
TEST_SUITE: sched_getparam
TEST_NUMBER: 1
ARGS: 
sched_getparam(0, 0x3ffffffffbd0) = 0, errno = 0
sched_setscheduler(10291, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_getparam(0, 0x3ffffffffbd0) = 0, errno = 0
sched_setparam(10291, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(0, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getparam -n 2 
TEST_SUITE: sched_getparam
TEST_NUMBER: 2
ARGS: 
sched_getparam(10306, 0x3ffffffffbd0) = 0, errno = 0
sched_setscheduler(10306, SCHED_FIFO, 0x3ffffffffbe0) = 0, errno = 0
sched_getparam(10306, 0x3ffffffffbd0) = 0, errno = 0
sched_setparam(10306, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(10306, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
## sched_getscheduler ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getscheduler -n 0 
TEST_SUITE: sched_getscheduler
TEST_NUMBER: 0
ARGS: 
sched_getscheduler(10321) = 0, errno = 0
sched_setscheduler(10321, SCHED_RR, 0x3ffffffffbd8) = 0, errno = 0
sched_getscheduler(10321) = 2, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_getscheduler -n 1 
TEST_SUITE: sched_getscheduler
TEST_NUMBER: 1
ARGS: 
sched_getscheduler(0) = 0, errno = 0
sched_setscheduler(10336, SCHED_RR, 0x3ffffffffbd8) = 0, errno = 0
sched_getscheduler(0) = 2, errno = 0
RESULT: ok
## sched_rr_get_interval ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_rr_get_interval -n 0 
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 0
ARGS: 
sched_setscheduler(10351, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(10351, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 10000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_rr_get_interval -n 1 
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 1
ARGS: 
sched_setscheduler(10366, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(0, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 10000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_rr_get_interval -n 2 
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 2
ARGS: 
sched_setscheduler(10381, SCHED_FIFO, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(10381, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_rr_get_interval -n 3 
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 3
ARGS: 
sched_setscheduler(10396, SCHED_OTHER, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(10396, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_rr_get_interval -n 4 
TEST_SUITE: sched_rr_get_interval
TEST_NUMBER: 4
ARGS: 
sched_setscheduler(10411, SCHED_BATCH, 0x3ffffffffbe0) = 0, errno = 0
sched_rr_get_interval(10411, 0x3ffffffffbd0) = 0, errno = 0
  time.tv_sec = 0, time.tv_nsec = 0
RESULT: ok
## sched_setparam ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setparam -n 0 
TEST_SUITE: sched_setparam
TEST_NUMBER: 0
ARGS: 
sched_setscheduler(10426, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_setparam(10426, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(10426, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setparam -n 1 
TEST_SUITE: sched_setparam
TEST_NUMBER: 1
ARGS: 
sched_setscheduler(10441, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_setparam(0, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(10441, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setparam -n 2 
TEST_SUITE: sched_setparam
TEST_NUMBER: 2
ARGS: 
sched_setscheduler(10456, SCHED_FIFO, 0x3ffffffffbe0) = 0, errno = 0
sched_setparam(10456, 0x3ffffffffbd8) = 0, errno = 0
sched_getparam(10456, 0x3ffffffffbd0) = 0, errno = 0
RESULT: ok
## sched_setscheduler ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setscheduler -n 0 
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 0
ARGS: 
sched_setscheduler(10471, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(10471) = 2, errno = 0
sched_getparam(10471, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setscheduler -n 1 
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 1
ARGS: 
sched_setscheduler(0, SCHED_RR, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(10486) = 2, errno = 0
sched_getparam(10486, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setscheduler -n 2 
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 2
ARGS: 
sched_setscheduler(10501, SCHED_FIFO, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(10501) = 1, errno = 0
sched_getparam(10501, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setscheduler -n 3 
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 3
ARGS: 
sched_setscheduler(10516, SCHED_OTHER, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(10516) = 0, errno = 0
sched_getparam(10516, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_setscheduler -n 4 
TEST_SUITE: sched_setscheduler
TEST_NUMBER: 4
ARGS: 
sched_setscheduler(10531, SCHED_BATCH, 0x3ffffffffbe0) = 0, errno = 0
sched_getscheduler(10531) = 3, errno = 0
sched_getparam(10531, 0x3ffffffffbd8) = 0, errno = 0
RESULT: ok
## setfsgid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setfsgid -n 0 -- -f 1050 
TEST_SUITE: setfsgid
TEST_NUMBER: 0
ARGS: -f 1050 
setfsgid(1050) = 0, errno = 0
Gid:	0	0	0	1050
cmp 1050 == 1050 ? 
RESULT: ok
## setfsuid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setfsuid -n 0 -- -f 1000 
TEST_SUITE: setfsuid
TEST_NUMBER: 0
ARGS: -f 1000 
setfsuid(1000) = 0, errno = 0
Uid:	0	0	0	1000
cmp 1000 == 1000 ? 
RESULT: ok
## setgid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setgid -n 0 -- -g 1050 
TEST_SUITE: setgid
TEST_NUMBER: 0
ARGS: -g 1050 
setgid(1050) = 0, errno = 0
getgid() = 1050
RESULT: ok
## setregid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setregid -n 0 -- -r 1050 -e 1050 
TEST_SUITE: setregid
TEST_NUMBER: 0
ARGS: -r 1050 -e 1050 
setregid(1050, 1050) = 0, errno = 0
getgid() = 1050
getegid() = 1050
RESULT: ok
## setresgid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setresgid -n 0 -- -r 1050 -e 1050 -s 1050 
TEST_SUITE: setresgid
TEST_NUMBER: 0
ARGS: -r 1050 -e 1050 -s 1050 
setresgid(1050, 1050, 1050) = 0, errno = 0
getresgid(1050, 1050, 1050) = 0, errno = 0
RESULT: ok
## setresuid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setresuid -n 0 -- -r 1000 -e 1000 -s 1000 
TEST_SUITE: setresuid
TEST_NUMBER: 0
ARGS: -r 1000 -e 1000 -s 1000 
setresuid(1000, 1000, 1000) = 0, errno = 0
getresuid(1000, 1000, 1000) = 0, errno = 0
RESULT: ok
## setreuid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setreuid -n 0 -- -r 1000 -e 1000 
TEST_SUITE: setreuid
TEST_NUMBER: 0
ARGS: -r 1000 -e 1000 
setreuid(1000, 1000) = 0, errno = 0
getuid() = 1000
geteuid() = 1000
RESULT: ok
## setrlimit ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 0 
TEST_SUITE: setrlimit
TEST_NUMBER: 0
ARGS: 
  getrlimit(RLIMIT_AS, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_AS, 80000000, ffffffffffffffff)
  getrlimit(RLIMIT_AS, 80000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 1 
TEST_SUITE: setrlimit
TEST_NUMBER: 1
ARGS: 
  getrlimit(RLIMIT_CORE, 0, ffffffffffffffff)
  setrlimit(RLIMIT_CORE, 90000000, ffffffffffffffff)
  getrlimit(RLIMIT_CORE, 90000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 2 
TEST_SUITE: setrlimit
TEST_NUMBER: 2
ARGS: 
  getrlimit(RLIMIT_CPU, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_CPU, a0000000, ffffffffffffffff)
  getrlimit(RLIMIT_CPU, a0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 3 
TEST_SUITE: setrlimit
TEST_NUMBER: 3
ARGS: 
  getrlimit(RLIMIT_DATA, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_DATA, b0000000, ffffffffffffffff)
  getrlimit(RLIMIT_DATA, b0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 4 
TEST_SUITE: setrlimit
TEST_NUMBER: 4
ARGS: 
  getrlimit(RLIMIT_FSIZE, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_FSIZE, c0000000, ffffffffffffffff)
  getrlimit(RLIMIT_FSIZE, c0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 5 
TEST_SUITE: setrlimit
TEST_NUMBER: 5
ARGS: 
  getrlimit(RLIMIT_LOCKS, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_LOCKS, d0000000, ffffffffffffffff)
  getrlimit(RLIMIT_LOCKS, d0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 6 
TEST_SUITE: setrlimit
TEST_NUMBER: 6
ARGS: 
  getrlimit(RLIMIT_MEMLOCK, 1000000, 1000000)
  setrlimit(RLIMIT_MEMLOCK, a000, 1000000)
  getrlimit(RLIMIT_MEMLOCK, a000, 1000000)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 7 
TEST_SUITE: setrlimit
TEST_NUMBER: 7
ARGS: 
  getrlimit(RLIMIT_MSGQUEUE, c8000, c8000)
  setrlimit(RLIMIT_MSGQUEUE, b000, c8000)
  getrlimit(RLIMIT_MSGQUEUE, b000, c8000)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 8 
TEST_SUITE: setrlimit
TEST_NUMBER: 8
ARGS: 
  getrlimit(RLIMIT_NICE, 0, 0)
  setrlimit(RLIMIT_NICE, 0, 0)
  getrlimit(RLIMIT_NICE, 0, 0)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 9 
TEST_SUITE: setrlimit
TEST_NUMBER: 9
ARGS: 
  getrlimit(RLIMIT_NOFILE, 400, 1000)
  setrlimit(RLIMIT_NOFILE, 600, 1000)
  getrlimit(RLIMIT_NOFILE, 600, 1000)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 10 
TEST_SUITE: setrlimit
TEST_NUMBER: 10
ARGS: 
  getrlimit(RLIMIT_NPROC, 7ee3, 7ee3)
  setrlimit(RLIMIT_NPROC, 700, 7ee3)
  getrlimit(RLIMIT_NPROC, 700, 7ee3)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 11 
TEST_SUITE: setrlimit
TEST_NUMBER: 11
ARGS: 
  getrlimit(RLIMIT_RSS, ffffffffffffffff, ffffffffffffffff)
  setrlimit(RLIMIT_RSS, e0000000, ffffffffffffffff)
  getrlimit(RLIMIT_RSS, e0000000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 12 
TEST_SUITE: setrlimit
TEST_NUMBER: 12
ARGS: 
  getrlimit(RLIMIT_RTPRIO, 0, 0)
  setrlimit(RLIMIT_RTPRIO, 0, 0)
  getrlimit(RLIMIT_RTPRIO, 0, 0)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 13 
TEST_SUITE: setrlimit
TEST_NUMBER: 13
ARGS: 
  getrlimit(RLIMIT_SIGPENDING, 7ee3, 7ee3)
  setrlimit(RLIMIT_SIGPENDING, 100, 7ee3)
  getrlimit(RLIMIT_SIGPENDING, 100, 7ee3)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 14 
TEST_SUITE: setrlimit
TEST_NUMBER: 14
ARGS: 
  getrlimit(RLIMIT_STACK, 800000, ffffffffffffffff)
  setrlimit(RLIMIT_STACK, 800000, ffffffffffffffff)
  getrlimit(RLIMIT_STACK, 800000, ffffffffffffffff)
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setrlimit -n 15 
TEST_SUITE: setrlimit
TEST_NUMBER: 15
ARGS: 
setrlimit() = -1, errno = 22
RESULT: ok
## setuid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setuid -n 0 -- -u 1000 
TEST_SUITE: setuid
TEST_NUMBER: 0
ARGS: -u 1000 
setuid(1000) = 0, errno = 0
getuid() = 1000
RESULT: ok
## waitid ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s waitid -n 0 
TEST_SUITE: waitid
TEST_NUMBER: 0
ARGS: 
waitid()=0, errno=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s waitid -n 1 -- -p 10 
TEST_SUITE: waitid
TEST_NUMBER: 1
ARGS: -p 10 
[parent:10935] waitid(P_PGID, 23388) called.
[child:10964] setpgid(10964, 10964) = 0
[child:11006] setpgid(11006, 11006) = 0
[child:10978] setpgid(10978, 10978) = 0
[child:10950] setpgid(10950, 10950) = 0
[child:10992] setpgid(10992, 10992) = 0
[child:10950, 10950] sleep 100+0msec done.
[child:10964, 10964] sleep 100+100msec done.
[child:10978, 10978] sleep 100+200msec done.
[child:10992, 10992] sleep 100+300msec done.
[child:11006, 11006] sleep 100+400msec done.
[child:11020, 23388] sleep 100+500msec done.
[parent:10935] waitid(P_PGID, 23388) returned. EXTED pid = 11020
[parent:10935] waitid()=0, errno=0
[parent:10935] waitid(P_PGID, 23388) called.
[child:11034, 23388] sleep 100+600msec done.
[parent:10935] waitid(P_PGID, 23388) returned. EXTED pid = 11034
[parent:10935] waitid()=0, errno=0
[parent:10935] waitid(P_PGID, 23388) called.
[child:11048, 23388] sleep 100+700msec done.
[parent:10935] waitid(P_PGID, 23388) returned. EXTED pid = 11048
[parent:10935] waitid()=0, errno=0
[parent:10935] waitid(P_PGID, 23388) called.
[child:11062, 23388] sleep 100+800msec done.
[parent:10935] waitid(P_PGID, 23388) returned. EXTED pid = 11062
[parent:10935] waitid()=0, errno=0
[parent:10935] waitid(P_PGID, 23388) called.
[child:11076, 23388] sleep 100+900msec done.
[parent:10935] waitid(P_PGID, 23388) returned. EXTED pid = 11076
[parent:10935] waitid()=0, errno=0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s waitid -n 2 -- -p 11 
TEST_SUITE: waitid
TEST_NUMBER: 2
ARGS: -p 11 
[parent:11090] waitid(P_ALL) called.
[child:11105] sleep 100+0msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11105
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11119] sleep 100+100msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11119
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11133] sleep 100+200msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11133
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11147] sleep 100+300msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11147
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11161] sleep 100+400msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11161
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11175] sleep 100+500msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11175
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11189] sleep 100+600msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11189
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11203] sleep 100+700msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11203
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11217] sleep 100+800msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11217
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11231] sleep 100+900msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11231
[parent:11090] waitid()=0, errno=0
[parent:11090] waitid(P_ALL) called.
[child:11245] sleep 100+1000msec done.
[parent:11090] waitid(P_ALL) returned. EXTED pid = 11245
[parent:11090] waitid()=0, errno=0
RESULT: ok
## signalfd4 ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s signalfd4 -n 0 
TEST_SUITE: signalfd4
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s signalfd4 -n 1 
TEST_SUITE: signalfd4
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s signalfd4 -n 2 
TEST_SUITE: signalfd4
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## gettimeofday ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s gettimeofday -n 0 
TEST_SUITE: gettimeofday
TEST_NUMBER: 0
ARGS: 
RESULT: settimeofday error.
## sched_yield ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s sched_yield -n 0 
TEST_SUITE: sched_yield
TEST_NUMBER: 0
ARGS: 
[child] running core 1
[parent] running core 0
[parent] child process migrate/bind to core 0
[parent] parent process bind to core 0
[parent] send sched_yield.
[child] before migrate prevcore 1, nowcore 0
[parent] End process.
[child] End process.
RESULT: check end order, [end child] -> [end parent]
## set_tid_address ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_tid_address -n 0 
TEST_SUITE: set_tid_address
TEST_NUMBER: 0
ARGS: 
RESULT: ok
## getrusage ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrusage -n 0 
TEST_SUITE: getrusage
TEST_NUMBER: 0
ARGS: 
------------------------------
show_rusage():
  ru_utime=0s + 220868us
  ru_stime=0s + 160034us
  ru_maxrss=1984
------------------------------
allocation memory 16777216 byte(16384 KiB)
alarm 2 seconds wait.
sleep 2 seconds wait.
------------------------------
show_rusage():
  ru_utime=2s + 229570us
  ru_stime=2s + 222510us
  ru_maxrss=18432
------------------------------
free memory 16777216 byte(16384 KiB)
------------------------------
show_rusage():
  ru_utime=2s + 230029us
  ru_stime=2s + 267108us
  ru_maxrss=18432
------------------------------
RESULT: you need check rusage value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrusage -n 1 
TEST_SUITE: getrusage
TEST_NUMBER: 1
ARGS: 
------------------------------
show_rusage():
  ru_utime=0s + 0us
  ru_stime=0s + 0us
  ru_maxrss=0
------------------------------
allocation memory 16777216 byte(16384 KiB)
alarm 2 seconds wait.
sleep 2 seconds wait.
free memory 16777216 byte(16384 KiB)
------------------------------
show_rusage():
  ru_utime=2s + 14481us
  ru_stime=2s + 56571us
  ru_maxrss=20352
------------------------------
RESULT: you need check rusage value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrusage -n 2 
TEST_SUITE: getrusage
TEST_NUMBER: 2
ARGS: 
[parent before]
------------------------------
show_rusage():
  ru_utime=0s + 222410us
  ru_stime=0s + 157805us
  ru_maxrss=1984
------------------------------
[child before]
------------------------------
show_rusage():
  ru_utime=0s + 246us
  ru_stime=0s + 1033us
  ru_maxrss=2048
------------------------------
allocation memory 16777216 byte(16384 KiB)
alarm 2 seconds wait.
sleep 2 seconds wait.
free memory 16777216 byte(16384 KiB)
[child after]
------------------------------
show_rusage():
  ru_utime=2s + 9722us
  ru_stime=2s + 70949us
  ru_maxrss=18560
------------------------------
[parent after]
------------------------------
show_rusage():
  ru_utime=0s + 225173us
  ru_stime=4s + 257963us
  ru_maxrss=18560
------------------------------
RESULT: you need check rusage value
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrusage -n 3 
TEST_SUITE: getrusage
TEST_NUMBER: 3
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getrusage -n 4 
TEST_SUITE: getrusage
TEST_NUMBER: 4
ARGS: 
RESULT: ok
## tkill ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s tkill -n 0 
TEST_SUITE: tkill
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s tkill -n 1 
TEST_SUITE: tkill
TEST_NUMBER: 1
ARGS: 
[parent]sleep a few sec...
[child]pid=11477, tid=11491
[parent]wake up
Terminate by signal 10
/opt/ostestset/util/run_testset_postk.sh: line 1125: 11477 User defined signal 1   ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s tkill -n 1
## times ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s times -n 0 
TEST_SUITE: times
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s times -n 1 
TEST_SUITE: times
TEST_NUMBER: 1
ARGS: 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 1125: 11507 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s times -n 1
## nanosleep ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s nanosleep -n 0 
TEST_SUITE: nanosleep
TEST_NUMBER: 0
ARGS: 
It has passed for      3.0 sec.
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s nanosleep -n 1 
TEST_SUITE: nanosleep
TEST_NUMBER: 1
ARGS: 
Remaining sleep time is 7.992057184
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s nanosleep -n 2 
TEST_SUITE: nanosleep
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s nanosleep -n 3 
TEST_SUITE: nanosleep
TEST_NUMBER: 3
ARGS: 
RESULT: ok
## getitimer ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getitimer -n 0 
TEST_SUITE: getitimer
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getitimer -n 1 
TEST_SUITE: getitimer
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s getitimer -n 2 
TEST_SUITE: getitimer
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## setitimer ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setitimer -n 0 
TEST_SUITE: setitimer
TEST_NUMBER: 0
ARGS: 
testing ITIMER_REAL, please wait...
old sec:999 usec:997772, init sec:1000 usec:100
testing ITIMER_VIRTUAL, please wait...
old sec:999 usec:999987, init sec:1000 usec:100
testing ITIMER_PROF, please wait...
old sec:999 usec:998415, init sec:1000 usec:100
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setitimer -n 1 
TEST_SUITE: setitimer
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setitimer -n 2 
TEST_SUITE: setitimer
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s setitimer -n 3 
TEST_SUITE: setitimer
TEST_NUMBER: 3
ARGS: 
testing ITIMER_REAL, please wait...
testing ITIMER_VIRTUAL, please wait...
testing ITIMER_PROF, please wait...
RESULT: ok
## clock_gettime ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s clock_gettime -n 0 
TEST_SUITE: clock_gettime
TEST_NUMBER: 0
ARGS: 
[INFO] Spending cpu time, please wait...
REALTIME            : 1547114223.543377872
REALTIME_ALARM      : Invalid argument (expected)
REALTIME_COARSE     : 1547114223.537701616
MONOTONIC           : 17466.464292656
MONOTONIC_COARSE    : 17466.453151360
MONOTONIC_RAW       : 17466.465596448
BOOTTIME            : 17466.466702752
BOOTTIME_ALARM      : Invalid argument (expected)
PROCESS_CPUTIME_ID  : 14.411819664
THREAD_CPUTIME_ID   : 14.412689584
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s clock_gettime -n 1 
TEST_SUITE: clock_gettime
TEST_NUMBER: 1
ARGS: 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 1125: 11735 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s clock_gettime -n 1
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s clock_gettime -n 2 
TEST_SUITE: clock_gettime
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## clock_getres ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s clock_getres -n 0 
TEST_SUITE: clock_getres
TEST_NUMBER: 0
ARGS: 
[INFO] Show clocks' resolution.
REALTIME            : 0.000000001
REALTIME_ALARM      : Invalid argument (expected)
REALTIME_COARSE     : 0.010000000
MONOTONIC           : 0.000000001
MONOTONIC_COARSE    : 0.010000000
MONOTONIC_RAW       : 0.000000001
BOOTTIME            : 0.000000001
BOOTTIME_ALARM      : Invalid argument (expected)
PROCESS_CPUTIME_ID  : 0.000000001
THREAD_CPUTIME_ID   : 0.000000001
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s clock_getres -n 1 
TEST_SUITE: clock_getres
TEST_NUMBER: 1
ARGS: 
Terminate by signal 11
/opt/ostestset/util/run_testset_postk.sh: line 1125: 11780 Segmentation fault      ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s clock_getres -n 1
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s clock_getres -n 2 
TEST_SUITE: clock_getres
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## readlinkat ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s readlinkat -n 0 -- -f /opt/ostestset/util/tempfile -l /tmp/templink 
TEST_SUITE: readlinkat
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/tempfile -l /tmp/templink 
[INFO]readlinkat test
 target file:/opt/ostestset/util/tempfile
 link file:/tmp/templink
 buffer data:/opt/ostestset/util/tempfile
RESULT: ok
## fpregs ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fpregs -n 0 
TEST_SUITE: fpregs
TEST_NUMBER: 0
ARGS: 
q00: 0x0000000000000000_0000000000000000
q01: 0x0a6425203a524542_4d554e5f54534554
q02: 0x0000203a53475241_0000000000000000
q03: 0x0000000000000000_0000000000000000
q04: 0xffff000000000000_ffffffffffffffff
q05: 0x0000040000000000_0000000000000000
q06: 0x4010000000000000_4010040140100401
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_0000000000000000
q09: 0x0000000000000000_0000000000000000
q10: 0x0000000000000000_0000000000000000
q11: 0x0000000000000000_0000000000000000
q12: 0x0000000000000000_0000000000000000
q13: 0x0000000000000000_0000000000000000
q14: 0x0000000000000000_0000000000000000
q15: 0x0000000000000000_0000000000000000
q16: 0x5000555504000000_5000555504000000
q17: 0x00000000a0081000_0000a81080400000
q18: 0x0000000000000000_8020080000100000
q19: 0x0000000000000000_0000000000000000
q20: 0x0000000000000000_0000000000000000
q21: 0x0000000000000000_0000000000000000
q22: 0x0000000000000000_0000000000000000
q23: 0x0000000000000000_0000000000000000
q24: 0x0000000000000000_0000000000000000
q25: 0x0000000000000000_0000000000000000
q26: 0x0000000000000000_0000000000000000
q27: 0x0000000000000000_0000000000000000
q28: 0x0000000000000000_0000000000000000
q29: 0x0000000000000000_0000000000000000
q30: 0x0000000000000000_0000000000000000
q31: 0x0000000000000000_0000000000000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fpregs -n 1 
TEST_SUITE: fpregs
TEST_NUMBER: 1
ARGS: 
[parent] before fork.
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
[child] after fork.
q00: 0x0000000000000000_0000000000000000
q01: 0x5d746e657261705b_000a786c36313025
q02: 0x0000002e6b726f66_2065726f66656220
q03: 0x0000000000000000_ff00000000000000
q04: 0xffffff0000000000_0000000000000000
q05: 0x0000000000000000_4000000000000001
q06: 0x4010040000000000_0000000000000000
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0x5400000000004001_5400000000004001
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fpregs -n 2 
TEST_SUITE: fpregs
TEST_NUMBER: 2
ARGS: 
[parent] before pthread_create.
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
[child] after pthread_create.
q00: 0x0000000000000000_0000000000000000
q01: 0x205d646c6968635b_000a786c36313025
q02: 0x72635f6461657268_7470207265746661
q03: 0x0000000000000000_ff00000000000000
q04: 0x0000000000000000_0000000000000000
q05: 0x0000000000000000_4000000000000001
q06: 0x0000000000000000_0000000000000000
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0x0000000000004001_0000000000004001
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fpregs -n 3 
TEST_SUITE: fpregs
TEST_NUMBER: 3
ARGS: 
before execve.
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
=== look at the contents of the register since run execve. ===
TEST_SUITE: fpregs
TEST_NUMBER: 0
ARGS: 
q00: 0x0000000000000000_0000000000000000
q01: 0x0a6425203a524542_4d554e5f54534554
q02: 0x0000203a53475241_0000000000000000
q03: 0x0000000000000000_0000000000000000
q04: 0xffff000000000000_ffffffffffffffff
q05: 0x0000040000000000_0000000000000000
q06: 0x4010000000000000_4010040140100401
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_0000000000000000
q09: 0x0000000000000000_0000000000000000
q10: 0x0000000000000000_0000000000000000
q11: 0x0000000000000000_0000000000000000
q12: 0x0000000000000000_0000000000000000
q13: 0x0000000000000000_0000000000000000
q14: 0x0000000000000000_0000000000000000
q15: 0x0000000000000000_0000000000000000
q16: 0x5000555504000000_5000555504000000
q17: 0x00000000a0081000_0000a81080400000
q18: 0x0000000000000000_8020080000100000
q19: 0x0000000000000000_0000000000000000
q20: 0x0000000000000000_0000000000000000
q21: 0x0000000000000000_0000000000000000
q22: 0x0000000000000000_0000000000000000
q23: 0x0000000000000000_0000000000000000
q24: 0x0000000000000000_0000000000000000
q25: 0x0000000000000000_0000000000000000
q26: 0x0000000000000000_0000000000000000
q27: 0x0000000000000000_0000000000000000
q28: 0x0000000000000000_0000000000000000
q29: 0x0000000000000000_0000000000000000
q30: 0x0000000000000000_0000000000000000
q31: 0x0000000000000000_0000000000000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fpregs -n 4 
TEST_SUITE: fpregs
TEST_NUMBER: 4
ARGS: 
[parent] before raise signal.
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
[parent] after raise signal.
q00: 0x0000000000000000_0000000000000000
q01: 0x30203a6432302571_000000002e726f72
q02: 0x000a786c36313025_5f786c3631302578
q03: 0x0000000000000000_ffffffff00000000
q04: 0xff00000000000000_0000000000000000
q05: 0x0000000000000400_4010040100000000
q06: 0x4000000000000001_0000000000000400
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0x4001000400045500_4001000400045500
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fpregs -n 5 -- -p 12 
TEST_SUITE: fpregs
TEST_NUMBER: 5
ARGS: -p 12 
[child] before migrate. (cpuid=1)
q00: 0x0000000000000000_0000000000000000
q01: 0x3333333333333333_3333333333333333
q02: 0x5555555555555555_5555555555555555
q03: 0x8888888888888888_8888888888888888
q04: 0xaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaa
q05: 0xefbeaddeefbeadde_efbeaddeefbeadde
q06: 0xcccccccccccccccc_cccccccccccccccc
q07: 0xffffffffffffffff_ffffffffffffffff
q08: 0xffffffffffffffff_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0xcccccccccccccccc_ffffffff11111111
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
[child] after migrate. (cpuid=11)
q00: 0x0000000000000000_0000000000000000
q01: 0x28202e6574617267_696d207265746661
q02: 0x0000000000000a29_64253d6469757063
q03: 0x0000000000000000_0000000000000000
q04: 0xffffffffffff0000_0000000000000000
q05: 0x0000000000000000_0000000000000000
q06: 0x4010040140100000_0010000000000000
q07: 0x4010040140100401_4010040140100401
q08: 0x0000000000000000_ffffffff11111111
q09: 0x1111111111111111_1111111133333333
q10: 0x3333333333333333_3333333355555555
q11: 0x5555555555555555_5555555588888888
q12: 0x8888888888888888_88888888aaaaaaaa
q13: 0xaaaaaaaaaaaaaaaa_aaaaaaaaefbeadde
q14: 0xefbeaddeefbeadde_efbeaddecccccccc
q15: 0xcccccccccccccccc_ccccccccffffffff
q16: 0x5550100000000000_5550100000000000
q17: 0xffffffffffffffff_1111111133333333
q18: 0x1111111111111111_3333333355555555
q19: 0x3333333333333333_5555555588888888
q20: 0x5555555555555555_88888888aaaaaaaa
q21: 0x8888888888888888_aaaaaaaaefbeadde
q22: 0xaaaaaaaaaaaaaaaa_efbeaddecccccccc
q23: 0xefbeaddeefbeadde_ccccccccffffffff
q24: 0xccccccccffffffff_11111111efbeadde
q25: 0xffffffff11111111_33333333cccccccc
q26: 0x1111111133333333_55555555ffffffff
q27: 0x3333333355555555_8888888811111111
q28: 0x5555555588888888_aaaaaaaa33333333
q29: 0x88888888aaaaaaaa_efbeadde55555555
q30: 0xaaaaaaaaefbeadde_cccccccc88888888
q31: 0xefbeaddecccccccc_ffffffffaaaaaaaa
RESULT: ok
## binfmt ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_cpu_id -n 0 
TEST_SUITE: get_cpu_id
TEST_NUMBER: 0
ARGS: 
[pid=11950, tid=11950] process running on cpu=0
RESULT: ok
## time_sharing ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s time_sharing -n 0 
TEST_SUITE: time_sharing
TEST_NUMBER: 0
ARGS: 
[child] running core 1
[parent] running core 0
[parent] child process migrate/bind to core 0
[parent] parent process bind to core 0
[child] before migrate prevcore 1, nowcore 0
[child] in loop count=0
[parent] in loop count=0
[child] in loop count=1
[parent] in loop count=1
[child] in loop count=2
[parent] in loop count=2
[child] in loop count=3
[parent] in loop count=3
[child] in loop count=4
[parent] in loop count=4
RESULT: check run order, [child] -> [parent] -> [child] -> [parent] -> ...
## writecombine ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s writecombine -n 0 -- -d /dev/test_mck/writecombine 
TEST_SUITE: writecombine
TEST_NUMBER: 0
ARGS: -d /dev/test_mck/writecombine 
RESULT: ok
## get_mempolicy ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 0 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 2 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 2
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 5 -- -n 4 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 5
ARGS: -n 4 
maxnode = 4
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 6 -- -n 4 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 6
ARGS: -n 4 
maxnode = 4
nodemask = 15
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 7 -- -n 4 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 7
ARGS: -n 4 
maxnode = 4
nodemask = 15
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 8 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 8
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 13 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 13
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 14 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 14
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 15 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 15
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 16 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 16
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 17 -- -n 4 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 17
ARGS: -n 4 
node ID = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s get_mempolicy -n 20 
TEST_SUITE: get_mempolicy
TEST_NUMBER: 20
ARGS: 
RESULT: ok
## set_mempolicy ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 1 -- -n 4 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 1
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 3 -- -n 4 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 3
ARGS: -n 4 
set_node_mask = 3
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 5 -- -n 4 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 5
ARGS: -n 4 
set_node_mask = 12
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 6 -- -n 4 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 6
ARGS: -n 4 
set_node_mask = 3
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 8 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 8
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 11 -- -n 4 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 11
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 13 -- -n 4 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 13
ARGS: -n 4 
sys_max_node = 524288
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 14 -- -n 4 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 14
ARGS: -n 4 
set_node_mask = 3
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s set_mempolicy -n 17 
TEST_SUITE: set_mempolicy
TEST_NUMBER: 17
ARGS: 
RESULT: ok
## mbind ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 1 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 1
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 3 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 3
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 5 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 5
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 9 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 9
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 12 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 12
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 14 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 14
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 15 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 15
ARGS: -n 4 
region 0
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 1
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 2
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 3
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 4
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 5
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 6
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 16 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 16
ARGS: -n 4 
region 0
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 1
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 2
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 3
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 4
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 5
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 6
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 20 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 20
ARGS: -n 4 
region 0
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 1
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 2
get      : mode = 3, node_mask = 3
m_expect : mode = 3, node_mask = 3

region 3
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 4
get      : mode = 2, node_mask = 1
m_expect : mode = 2, node_mask = 1

region 5
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

region 6
get      : mode = 0, node_mask = 0
m_expect : mode = 0, node_mask = 0

RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 24 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 24
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 26 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 26
ARGS: -n 4 
nodemask = 0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 28 -- -n 4 
TEST_SUITE: mbind
TEST_NUMBER: 28
ARGS: -n 4 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s mbind -n 30 
TEST_SUITE: mbind
TEST_NUMBER: 30
ARGS: 
RESULT: ok
## track syscalls ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s track_syscalls -n 0 
TEST_SUITE: track_syscalls
TEST_NUMBER: 0
ARGS: 
RESULT: ok
[  0]: PID: 12548 (271, "process_vm_writev"):      1      1k offl:      0      0k ( 4.42%)
## msr instruction emulation  ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 0 
TEST_SUITE: iemul
TEST_NUMBER: 0
ARGS: 
MIDR_EL1            : 0x00000000411fd070
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 1 
TEST_SUITE: iemul
TEST_NUMBER: 1
ARGS: 
MPIDR_EL1           : 0x0000000080000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 2 
TEST_SUITE: iemul
TEST_NUMBER: 2
ARGS: 
REVIDR_EL1          : 0x0000000000000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 3 
TEST_SUITE: iemul
TEST_NUMBER: 3
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12611 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 4 
TEST_SUITE: iemul
TEST_NUMBER: 4
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12626 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 5 
TEST_SUITE: iemul
TEST_NUMBER: 5
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12641 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 6 
TEST_SUITE: iemul
TEST_NUMBER: 6
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12656 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 7 
TEST_SUITE: iemul
TEST_NUMBER: 7
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12671 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 8 
TEST_SUITE: iemul
TEST_NUMBER: 8
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12686 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 9 
TEST_SUITE: iemul
TEST_NUMBER: 9
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12701 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 10 
TEST_SUITE: iemul
TEST_NUMBER: 10
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12716 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 11 
TEST_SUITE: iemul
TEST_NUMBER: 11
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12731 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 12 
TEST_SUITE: iemul
TEST_NUMBER: 12
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12746 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 13 
TEST_SUITE: iemul
TEST_NUMBER: 13
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12761 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 14 
TEST_SUITE: iemul
TEST_NUMBER: 14
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12776 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 15 
TEST_SUITE: iemul
TEST_NUMBER: 15
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12791 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 16 
TEST_SUITE: iemul
TEST_NUMBER: 16
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12806 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 17 
TEST_SUITE: iemul
TEST_NUMBER: 17
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12821 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 18 
TEST_SUITE: iemul
TEST_NUMBER: 18
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12836 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 19 
TEST_SUITE: iemul
TEST_NUMBER: 19
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 12851 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 20 
TEST_SUITE: iemul
TEST_NUMBER: 20
ARGS: 
ID_AA64PFR0_EL1     : 0x0000000100110011
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 21 
TEST_SUITE: iemul
TEST_NUMBER: 21
ARGS: 
ID_AA64PFR1_EL1     : 0x0000000000000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 22 
TEST_SUITE: iemul
TEST_NUMBER: 22
ARGS: 
ID_AA64DFR0_EL1     : 0x0000000000000006
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 23 
TEST_SUITE: iemul
TEST_NUMBER: 23
ARGS: 
ID_AA64DFR1_EL1     : 0x0000000000000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 24 
TEST_SUITE: iemul
TEST_NUMBER: 24
ARGS: 
ID_AA64ISAR0_EL1    : 0x0000000010212120
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 25 
TEST_SUITE: iemul
TEST_NUMBER: 25
ARGS: 
ID_AA64ISAR1_EL1    : 0x0000000000010000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 26 
TEST_SUITE: iemul
TEST_NUMBER: 26
ARGS: 
ID_AA64MMFR0_EL1    : 0x00000000ff000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 27 
TEST_SUITE: iemul
TEST_NUMBER: 27
ARGS: 
ID_AA64MMFR1_EL1    : 0x0000000000000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 28 
TEST_SUITE: iemul
TEST_NUMBER: 28
ARGS: 
ID_AA64MMFR2_EL1    : 0x0000000000000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 29 
TEST_SUITE: iemul
TEST_NUMBER: 29
ARGS: 
CTR_EL0             : 0x000000008444c004
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 30 
TEST_SUITE: iemul
TEST_NUMBER: 30
ARGS: 
DCZID_EL0           : 0x0000000000000004
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 31 
TEST_SUITE: iemul
TEST_NUMBER: 31
ARGS: 
CNTFRQ_EL0          : 0x0000000003b9aca0
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 32 
TEST_SUITE: iemul
TEST_NUMBER: 32
ARGS: 
ID_AA64ZFR0_EL1     : 0x0000000000000000
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s iemul -n 33 
TEST_SUITE: iemul
TEST_NUMBER: 33
ARGS: 
Terminate by signal 4
/opt/ostestset/util/run_testset_postk.sh: line 1047: 13061 Illegal instruction     ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s iemul -n $tp_num
## fstatat  ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fstatat -n 0 
TEST_SUITE: fstatat
TEST_NUMBER: 0
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fstatat -n 1 
TEST_SUITE: fstatat
TEST_NUMBER: 1
ARGS: 
RESULT: ok
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s fstatat -n 2 
TEST_SUITE: fstatat
TEST_NUMBER: 2
ARGS: 
RESULT: ok
## freeze_thaw ##
## freeze_thaw test#0 (a.out -> freeze -> thaw) ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/single_node 
[client] Connect to 127.0.0.1
[server] Waiting for connection ...
[client] Trying to connect to 127.0.0.1: 
[client] sending...[0]
[server] Connected from 127.0.0.1
[server] received[0]: This is a test
sleep 1 second elapsed.
sleep 2 second elapsed.
sleep 3 second elapsed.
[client] sending...[1]
[server] received[1]: This is a test
[client] sending...[2]
[server] received[2]: This is a test
[client] sending...[3]
[server] received[3]: This is a test
[client] sending...[4]
[server] received[4]: This is a test
[client] sending...[5]
[server] received[5]: This is a test
[client] sending...[6]
[server] received[6]: This is a test
[client] sending...[7]
[server] received[7]: This is a test
[client] sending...[8]
[server] received[8]: This is a test
[client] sending...[9]
[server] received[9]: This is a test
## freeze_thaw test#1 (freeze -> a.out -> thaw) ##
sleep 1 second elapsed.
sleep 2 second elapsed.
sleep 3 second elapsed.
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/glibc_hello_world 
Hello World
## freeze_thaw test#2 (freeze -> a.out -> kill a.out -> thaw) ##
/opt/ostestset/util/run_testset_postk.sh: line 1125: 13168 Terminated              ${mcexec} $execve_comm "${app_dir}/glibc_hello_world"
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/glibc_hello_world 
Hello World
## cpu_pa_info ##
## cpu_pa_info test#0 ##
#  0 : set/enable/get/disable/destroy check config(0x00-0x3f). (for each)
##### start event#0x00 #####
  event#0x00 (SW_INCR)
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed  to event#0x0
##### end              #####

RESULT:NG.
## cpu_pa_info test#2 ##
#  2 : set/enable/get/disable/destroy check disabled flags on.
##### start event#0x11 #####
  event#0x11 (CPU_CYCLES)
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed  to event#0x11
##### end              #####

RESULT:NG.
## cpu_pa_info test#3 ##
#  3 : set/enable/get/disable/destroy check pinned flags on.
##### start event#0x11 #####
  event#0x11 (CPU_CYCLES)
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed  to event#0x11
##### end              #####

RESULT:NG.
## cpu_pa_info test#4 ##
#  4 : set/enable/get/disable/destroy check exclude flags on.
##### start event#0x11 #####
##### exclude_user:1, exclude_kernel:0, exclude_hv:0, exclude_idle:0 #####
  event#0x11 (CPU_CYCLES)
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed  to event#0x11
##### end              #####

RESULT:NG.
## cpu_pa_info test#5 ##
#  5 : set/enable/get/disable/destroy check config(0x00-0x07). (8 counter at once)
##### start event#0x00-0x07 #####
ioctl failed
  ihk_os_setperfevent: Invalid argument
  failed.
##### end                   #####

RESULT:NG.
## get_rusage ##
## get_rusage test#0 (no user process) ##
show rusage:
  memory_stat_rss[0] : 0x180650000
  memory_stat_mapped_file is all 0x0
  memory_max_usage : 0x3fefe0000
  memory_kmem_usage : 0x3a40000
  memory_kmem_max_usage : 0x55f0000
  memory_numa_stat[0] : 0x350000
  cpuacct_stat_system : 0x102bd
  cpuacct_stat_user : 0xd4e4
  cpuacct_usage : 0x7ee51e52a0
  cpuacct_usage_percpu[0] : 0x498ac87d80
  cpuacct_usage_percpu[1] : 0x2873b65520
  cpuacct_usage_percpu[2] : 0x1d44c3d60
  cpuacct_usage_percpu[3] : 0x173682970
  cpuacct_usage_percpu[4] : 0x170699340
  cpuacct_usage_percpu[5] : 0x162fe7070
  cpuacct_usage_percpu[6] : 0x14fd2f780
  cpuacct_usage_percpu[7] : 0x130ccffe0
  cpuacct_usage_percpu[8] : 0x12b921aa0
  cpuacct_usage_percpu[9] : 0x11d16af80
  cpuacct_usage_percpu[10] : 0x1098d1500
  cpuacct_usage_percpu[11] : 0xf8ad3f00
  num_threads : 0x0
  max_num_threads : 0xc
## get_rusage test#1 (user multi thread process rinning) ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/single_node 
[client] Connect to 127.0.0.1
[server] Waiting for connection ...
[client] Trying to connect to 127.0.0.1: 
[client] sending...[0]
[server] Connected from 127.0.0.1
[server] received[0]: This is a test
show rusage:
  memory_stat_rss[0] : 0x1809a0000
  memory_stat_mapped_file[0] : 0x150000
  memory_max_usage : 0x3fefe0000
  memory_kmem_usage : 0x3f00000
  memory_kmem_max_usage : 0x55f0000
  memory_numa_stat[0] : 0x7e0000
  memory_numa_stat[1] : 0x10000
  cpuacct_stat_system : 0x102ce
  cpuacct_stat_user : 0xd501
  cpuacct_usage : 0x7ef5e5d620
  cpuacct_usage_percpu[0] : 0x499b6406c0
  cpuacct_usage_percpu[1] : 0x2873e24f60
  cpuacct_usage_percpu[2] : 0x1d44c3d60
  cpuacct_usage_percpu[3] : 0x173682970
  cpuacct_usage_percpu[4] : 0x170699340
  cpuacct_usage_percpu[5] : 0x162fe7070
  cpuacct_usage_percpu[6] : 0x14fd2f780
  cpuacct_usage_percpu[7] : 0x130ccffe0
  cpuacct_usage_percpu[8] : 0x12b921aa0
  cpuacct_usage_percpu[9] : 0x11d16af80
  cpuacct_usage_percpu[10] : 0x1098d1500
  cpuacct_usage_percpu[11] : 0xf8ad3f00
  num_threads : 0x2
  max_num_threads : 0xc
[client] sending...[1]
[server] received[1]: This is a test
[client] sending...[2]
[server] received[2]: This is a test
[client] sending...[3]
[server] received[3]: This is a test
[client] sending...[4]
[server] received[4]: This is a test
[client] sending...[5]
[server] received[5]: This is a test
[client] sending...[6]
[server] received[6]: This is a test
[client] sending...[7]
[server] received[7]: This is a test
[client] sending...[8]
[server] received[8]: This is a test
[client] sending...[9]
[server] received[9]: This is a test
## force_exit ##
TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/test_mck -- -s force_exit -n 0 -- -f /opt/ostestset/util/mmapfile -d /dev/test_mck/mmap_dev 
TEST_SUITE: force_exit
TEST_NUMBER: 0
ARGS: -f /opt/ostestset/util/mmapfile -d /dev/test_mck/mmap_dev 
read 1 byte (a(97))
mmap(0x100000260000)
send SIGKILL for mcexec.
rmmod test_drv
remove /dev/test_mck
rmmod /opt/ostestset/util/../bin/test_mck.ko
/opt/ostestset/util/run_testset_postk.sh: line 1133: 13210 Killed                  ${mcexec} $execve_comm "${app_dir}/test_mck" $execve_arg_end -s force_exit -n 0 -- -f $mmapfile_name -d /dev/test_mck/mmap_dev
shutdown_mck... (mcctrl.ko no unload, and reboot mck.)
[destroy:0]

keep mcctrl.ko insmod.

[rmmod] ihk_smp

keep ihk.ko insmod.

use NUMA-preset 5 memory:   4 GiB, numa: 4 separation
[insmod] ihk (skip)

[insmod] ihk_smp

use NUMA-preset 5 memory:   4 GiB, numa: 4 separation
----------

image: /opt/ppos/smp-arm64/kernel/mckernel.img
cpu: 4,5,6,7,8,9,10,11,12,13,14,15
mem: 4096M@0,4096M@1,4096M@2,4096M@3
----------
already insmod mcctrl.ko, SKIP.

[create]

[alloc-cpu]

[ikc_map setting]

[alloc-mem]

[kargs]

[load]

[boot]

TEST_SUITE: execve
TEST_NUMBER: 1
ARGS: -f /opt/ostestset/util/../bin/glibc_hello_world 
Hello World
[destroy:0]

[rmmod]mcctrl.ko

[rmmod] ihk_smp

[rmmod] ihk

restore ulimit -S -c 0
restore core => /proc/sys/kernel/core_pattern
restore 7	4	1	7 => /proc/sys/kernel/printk
